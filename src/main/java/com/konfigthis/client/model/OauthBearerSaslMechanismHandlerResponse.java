/*
 * PingData Config - OpenAPI 3.0
 * This is the PingData Configuration API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.EnumoauthBearerSaslMechanismHandlerSchemaUrn;
import com.konfigthis.client.model.EnumsaslMechanismHandlerValidateAccessTokenWhenIDTokenIsAlsoProvidedProp;
import com.konfigthis.client.model.MetaMeta;
import com.konfigthis.client.model.MetaUrnPingidentitySchemasConfigurationMessages20;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * OauthBearerSaslMechanismHandlerResponse
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class OauthBearerSaslMechanismHandlerResponse {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_SCHEMAS = "schemas";
  @SerializedName(SERIALIZED_NAME_SCHEMAS)
  private List<EnumoauthBearerSaslMechanismHandlerSchemaUrn> schemas = new ArrayList<>();

  public static final String SERIALIZED_NAME_ACCESS_TOKEN_VALIDATOR = "accessTokenValidator";
  @SerializedName(SERIALIZED_NAME_ACCESS_TOKEN_VALIDATOR)
  private List<String> accessTokenValidator = null;

  public static final String SERIALIZED_NAME_ID_TOKEN_VALIDATOR = "idTokenValidator";
  @SerializedName(SERIALIZED_NAME_ID_TOKEN_VALIDATOR)
  private List<String> idTokenValidator = null;

  public static final String SERIALIZED_NAME_REQUIRE_BOTH_ACCESS_TOKEN_AND_I_D_TOKEN = "requireBothAccessTokenAndIDToken";
  @SerializedName(SERIALIZED_NAME_REQUIRE_BOTH_ACCESS_TOKEN_AND_I_D_TOKEN)
  private Boolean requireBothAccessTokenAndIDToken;

  public static final String SERIALIZED_NAME_VALIDATE_ACCESS_TOKEN_WHEN_I_D_TOKEN_IS_ALSO_PROVIDED = "validateAccessTokenWhenIDTokenIsAlsoProvided";
  @SerializedName(SERIALIZED_NAME_VALIDATE_ACCESS_TOKEN_WHEN_I_D_TOKEN_IS_ALSO_PROVIDED)
  private EnumsaslMechanismHandlerValidateAccessTokenWhenIDTokenIsAlsoProvidedProp validateAccessTokenWhenIDTokenIsAlsoProvided;

  public static final String SERIALIZED_NAME_ALTERNATE_AUTHORIZATION_IDENTITY_MAPPER = "alternateAuthorizationIdentityMapper";
  @SerializedName(SERIALIZED_NAME_ALTERNATE_AUTHORIZATION_IDENTITY_MAPPER)
  private String alternateAuthorizationIdentityMapper;

  public static final String SERIALIZED_NAME_ALL_REQUIRED_SCOPE = "allRequiredScope";
  @SerializedName(SERIALIZED_NAME_ALL_REQUIRED_SCOPE)
  private List<String> allRequiredScope = null;

  public static final String SERIALIZED_NAME_ANY_REQUIRED_SCOPE = "anyRequiredScope";
  @SerializedName(SERIALIZED_NAME_ANY_REQUIRED_SCOPE)
  private List<String> anyRequiredScope = null;

  public static final String SERIALIZED_NAME_SERVER_FQDN = "serverFqdn";
  @SerializedName(SERIALIZED_NAME_SERVER_FQDN)
  private String serverFqdn;

  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled;

  public static final String SERIALIZED_NAME_META = "meta";
  @SerializedName(SERIALIZED_NAME_META)
  private MetaMeta meta;

  public static final String SERIALIZED_NAME_URN_COLON_PINGIDENTITY_COLON_SCHEMAS_COLON_CONFIGURATION_COLON_MESSAGES_COLON20 = "urn:pingidentity:schemas:configuration:messages:2.0";
  @SerializedName(SERIALIZED_NAME_URN_COLON_PINGIDENTITY_COLON_SCHEMAS_COLON_CONFIGURATION_COLON_MESSAGES_COLON20)
  private MetaUrnPingidentitySchemasConfigurationMessages20 urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20;

  public OauthBearerSaslMechanismHandlerResponse() {
  }

  public OauthBearerSaslMechanismHandlerResponse id(String id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * Name of the SASL Mechanism Handler
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Name of the SASL Mechanism Handler")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    
    
    
    this.id = id;
  }


  public OauthBearerSaslMechanismHandlerResponse description(String description) {
    
    
    
    
    this.description = description;
    return this;
  }

   /**
   * A description for this SASL Mechanism Handler
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A description for this SASL Mechanism Handler")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    
    
    
    this.description = description;
  }


  public OauthBearerSaslMechanismHandlerResponse schemas(List<EnumoauthBearerSaslMechanismHandlerSchemaUrn> schemas) {
    
    
    
    
    this.schemas = schemas;
    return this;
  }

  public OauthBearerSaslMechanismHandlerResponse addSchemasItem(EnumoauthBearerSaslMechanismHandlerSchemaUrn schemasItem) {
    this.schemas.add(schemasItem);
    return this;
  }

   /**
   * Get schemas
   * @return schemas
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<EnumoauthBearerSaslMechanismHandlerSchemaUrn> getSchemas() {
    return schemas;
  }


  public void setSchemas(List<EnumoauthBearerSaslMechanismHandlerSchemaUrn> schemas) {
    
    
    
    this.schemas = schemas;
  }


  public OauthBearerSaslMechanismHandlerResponse accessTokenValidator(List<String> accessTokenValidator) {
    
    
    
    
    this.accessTokenValidator = accessTokenValidator;
    return this;
  }

  public OauthBearerSaslMechanismHandlerResponse addAccessTokenValidatorItem(String accessTokenValidatorItem) {
    if (this.accessTokenValidator == null) {
      this.accessTokenValidator = new ArrayList<>();
    }
    this.accessTokenValidator.add(accessTokenValidatorItem);
    return this;
  }

   /**
   * An access token validator that will ensure that each presented OAuth access token is authentic and trustworthy. It must be configured with an identity mapper that will be used to map the access token to a local entry.
   * @return accessTokenValidator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An access token validator that will ensure that each presented OAuth access token is authentic and trustworthy. It must be configured with an identity mapper that will be used to map the access token to a local entry.")

  public List<String> getAccessTokenValidator() {
    return accessTokenValidator;
  }


  public void setAccessTokenValidator(List<String> accessTokenValidator) {
    
    
    
    this.accessTokenValidator = accessTokenValidator;
  }


  public OauthBearerSaslMechanismHandlerResponse idTokenValidator(List<String> idTokenValidator) {
    
    
    
    
    this.idTokenValidator = idTokenValidator;
    return this;
  }

  public OauthBearerSaslMechanismHandlerResponse addIdTokenValidatorItem(String idTokenValidatorItem) {
    if (this.idTokenValidator == null) {
      this.idTokenValidator = new ArrayList<>();
    }
    this.idTokenValidator.add(idTokenValidatorItem);
    return this;
  }

   /**
   * An ID token validator that will ensure that each presented OpenID Connect ID token is authentic and trustworthy, and that will map the token to a local entry.
   * @return idTokenValidator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An ID token validator that will ensure that each presented OpenID Connect ID token is authentic and trustworthy, and that will map the token to a local entry.")

  public List<String> getIdTokenValidator() {
    return idTokenValidator;
  }


  public void setIdTokenValidator(List<String> idTokenValidator) {
    
    
    
    this.idTokenValidator = idTokenValidator;
  }


  public OauthBearerSaslMechanismHandlerResponse requireBothAccessTokenAndIDToken(Boolean requireBothAccessTokenAndIDToken) {
    
    
    
    
    this.requireBothAccessTokenAndIDToken = requireBothAccessTokenAndIDToken;
    return this;
  }

   /**
   * Indicates whether bind requests will be required to have both an OAuth access token (in the \&quot;auth\&quot; element of the bind request) and an OpenID Connect ID token (in the \&quot;pingidentityidtoken\&quot; element of the bind request).
   * @return requireBothAccessTokenAndIDToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether bind requests will be required to have both an OAuth access token (in the \"auth\" element of the bind request) and an OpenID Connect ID token (in the \"pingidentityidtoken\" element of the bind request).")

  public Boolean getRequireBothAccessTokenAndIDToken() {
    return requireBothAccessTokenAndIDToken;
  }


  public void setRequireBothAccessTokenAndIDToken(Boolean requireBothAccessTokenAndIDToken) {
    
    
    
    this.requireBothAccessTokenAndIDToken = requireBothAccessTokenAndIDToken;
  }


  public OauthBearerSaslMechanismHandlerResponse validateAccessTokenWhenIDTokenIsAlsoProvided(EnumsaslMechanismHandlerValidateAccessTokenWhenIDTokenIsAlsoProvidedProp validateAccessTokenWhenIDTokenIsAlsoProvided) {
    
    
    
    
    this.validateAccessTokenWhenIDTokenIsAlsoProvided = validateAccessTokenWhenIDTokenIsAlsoProvided;
    return this;
  }

   /**
   * Get validateAccessTokenWhenIDTokenIsAlsoProvided
   * @return validateAccessTokenWhenIDTokenIsAlsoProvided
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EnumsaslMechanismHandlerValidateAccessTokenWhenIDTokenIsAlsoProvidedProp getValidateAccessTokenWhenIDTokenIsAlsoProvided() {
    return validateAccessTokenWhenIDTokenIsAlsoProvided;
  }


  public void setValidateAccessTokenWhenIDTokenIsAlsoProvided(EnumsaslMechanismHandlerValidateAccessTokenWhenIDTokenIsAlsoProvidedProp validateAccessTokenWhenIDTokenIsAlsoProvided) {
    
    
    
    this.validateAccessTokenWhenIDTokenIsAlsoProvided = validateAccessTokenWhenIDTokenIsAlsoProvided;
  }


  public OauthBearerSaslMechanismHandlerResponse alternateAuthorizationIdentityMapper(String alternateAuthorizationIdentityMapper) {
    
    
    
    
    this.alternateAuthorizationIdentityMapper = alternateAuthorizationIdentityMapper;
    return this;
  }

   /**
   * The identity mapper that will be used to map an alternate authorization identity (provided in the GS2 header of the encoded OAUTHBEARER bind request credentials) to the corresponding local entry.
   * @return alternateAuthorizationIdentityMapper
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The identity mapper that will be used to map an alternate authorization identity (provided in the GS2 header of the encoded OAUTHBEARER bind request credentials) to the corresponding local entry.")

  public String getAlternateAuthorizationIdentityMapper() {
    return alternateAuthorizationIdentityMapper;
  }


  public void setAlternateAuthorizationIdentityMapper(String alternateAuthorizationIdentityMapper) {
    
    
    
    this.alternateAuthorizationIdentityMapper = alternateAuthorizationIdentityMapper;
  }


  public OauthBearerSaslMechanismHandlerResponse allRequiredScope(List<String> allRequiredScope) {
    
    
    
    
    this.allRequiredScope = allRequiredScope;
    return this;
  }

  public OauthBearerSaslMechanismHandlerResponse addAllRequiredScopeItem(String allRequiredScopeItem) {
    if (this.allRequiredScope == null) {
      this.allRequiredScope = new ArrayList<>();
    }
    this.allRequiredScope.add(allRequiredScopeItem);
    return this;
  }

   /**
   * The set of OAuth scopes that will all be required for any access tokens that will be allowed for authentication.
   * @return allRequiredScope
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The set of OAuth scopes that will all be required for any access tokens that will be allowed for authentication.")

  public List<String> getAllRequiredScope() {
    return allRequiredScope;
  }


  public void setAllRequiredScope(List<String> allRequiredScope) {
    
    
    
    this.allRequiredScope = allRequiredScope;
  }


  public OauthBearerSaslMechanismHandlerResponse anyRequiredScope(List<String> anyRequiredScope) {
    
    
    
    
    this.anyRequiredScope = anyRequiredScope;
    return this;
  }

  public OauthBearerSaslMechanismHandlerResponse addAnyRequiredScopeItem(String anyRequiredScopeItem) {
    if (this.anyRequiredScope == null) {
      this.anyRequiredScope = new ArrayList<>();
    }
    this.anyRequiredScope.add(anyRequiredScopeItem);
    return this;
  }

   /**
   * The set of OAuth scopes that a token may have to be allowed for authentication.
   * @return anyRequiredScope
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The set of OAuth scopes that a token may have to be allowed for authentication.")

  public List<String> getAnyRequiredScope() {
    return anyRequiredScope;
  }


  public void setAnyRequiredScope(List<String> anyRequiredScope) {
    
    
    
    this.anyRequiredScope = anyRequiredScope;
  }


  public OauthBearerSaslMechanismHandlerResponse serverFqdn(String serverFqdn) {
    
    
    
    
    this.serverFqdn = serverFqdn;
    return this;
  }

   /**
   * The fully-qualified name that clients are expected to use when communicating with the server.
   * @return serverFqdn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The fully-qualified name that clients are expected to use when communicating with the server.")

  public String getServerFqdn() {
    return serverFqdn;
  }


  public void setServerFqdn(String serverFqdn) {
    
    
    
    this.serverFqdn = serverFqdn;
  }


  public OauthBearerSaslMechanismHandlerResponse enabled(Boolean enabled) {
    
    
    
    
    this.enabled = enabled;
    return this;
  }

   /**
   * Indicates whether the SASL mechanism handler is enabled for use.
   * @return enabled
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Indicates whether the SASL mechanism handler is enabled for use.")

  public Boolean getEnabled() {
    return enabled;
  }


  public void setEnabled(Boolean enabled) {
    
    
    
    this.enabled = enabled;
  }


  public OauthBearerSaslMechanismHandlerResponse meta(MetaMeta meta) {
    
    
    
    
    this.meta = meta;
    return this;
  }

   /**
   * Get meta
   * @return meta
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public MetaMeta getMeta() {
    return meta;
  }


  public void setMeta(MetaMeta meta) {
    
    
    
    this.meta = meta;
  }


  public OauthBearerSaslMechanismHandlerResponse urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20(MetaUrnPingidentitySchemasConfigurationMessages20 urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20) {
    
    
    
    
    this.urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20 = urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20;
    return this;
  }

   /**
   * Get urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20
   * @return urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public MetaUrnPingidentitySchemasConfigurationMessages20 getUrnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20() {
    return urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20;
  }


  public void setUrnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20(MetaUrnPingidentitySchemasConfigurationMessages20 urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20) {
    
    
    
    this.urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20 = urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the OauthBearerSaslMechanismHandlerResponse instance itself
   */
  public OauthBearerSaslMechanismHandlerResponse putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OauthBearerSaslMechanismHandlerResponse oauthBearerSaslMechanismHandlerResponse = (OauthBearerSaslMechanismHandlerResponse) o;
    return Objects.equals(this.id, oauthBearerSaslMechanismHandlerResponse.id) &&
        Objects.equals(this.description, oauthBearerSaslMechanismHandlerResponse.description) &&
        Objects.equals(this.schemas, oauthBearerSaslMechanismHandlerResponse.schemas) &&
        Objects.equals(this.accessTokenValidator, oauthBearerSaslMechanismHandlerResponse.accessTokenValidator) &&
        Objects.equals(this.idTokenValidator, oauthBearerSaslMechanismHandlerResponse.idTokenValidator) &&
        Objects.equals(this.requireBothAccessTokenAndIDToken, oauthBearerSaslMechanismHandlerResponse.requireBothAccessTokenAndIDToken) &&
        Objects.equals(this.validateAccessTokenWhenIDTokenIsAlsoProvided, oauthBearerSaslMechanismHandlerResponse.validateAccessTokenWhenIDTokenIsAlsoProvided) &&
        Objects.equals(this.alternateAuthorizationIdentityMapper, oauthBearerSaslMechanismHandlerResponse.alternateAuthorizationIdentityMapper) &&
        Objects.equals(this.allRequiredScope, oauthBearerSaslMechanismHandlerResponse.allRequiredScope) &&
        Objects.equals(this.anyRequiredScope, oauthBearerSaslMechanismHandlerResponse.anyRequiredScope) &&
        Objects.equals(this.serverFqdn, oauthBearerSaslMechanismHandlerResponse.serverFqdn) &&
        Objects.equals(this.enabled, oauthBearerSaslMechanismHandlerResponse.enabled) &&
        Objects.equals(this.meta, oauthBearerSaslMechanismHandlerResponse.meta) &&
        Objects.equals(this.urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20, oauthBearerSaslMechanismHandlerResponse.urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20)&&
        Objects.equals(this.additionalProperties, oauthBearerSaslMechanismHandlerResponse.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, description, schemas, accessTokenValidator, idTokenValidator, requireBothAccessTokenAndIDToken, validateAccessTokenWhenIDTokenIsAlsoProvided, alternateAuthorizationIdentityMapper, allRequiredScope, anyRequiredScope, serverFqdn, enabled, meta, urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OauthBearerSaslMechanismHandlerResponse {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    schemas: ").append(toIndentedString(schemas)).append("\n");
    sb.append("    accessTokenValidator: ").append(toIndentedString(accessTokenValidator)).append("\n");
    sb.append("    idTokenValidator: ").append(toIndentedString(idTokenValidator)).append("\n");
    sb.append("    requireBothAccessTokenAndIDToken: ").append(toIndentedString(requireBothAccessTokenAndIDToken)).append("\n");
    sb.append("    validateAccessTokenWhenIDTokenIsAlsoProvided: ").append(toIndentedString(validateAccessTokenWhenIDTokenIsAlsoProvided)).append("\n");
    sb.append("    alternateAuthorizationIdentityMapper: ").append(toIndentedString(alternateAuthorizationIdentityMapper)).append("\n");
    sb.append("    allRequiredScope: ").append(toIndentedString(allRequiredScope)).append("\n");
    sb.append("    anyRequiredScope: ").append(toIndentedString(anyRequiredScope)).append("\n");
    sb.append("    serverFqdn: ").append(toIndentedString(serverFqdn)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    meta: ").append(toIndentedString(meta)).append("\n");
    sb.append("    urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20: ").append(toIndentedString(urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("description");
    openapiFields.add("schemas");
    openapiFields.add("accessTokenValidator");
    openapiFields.add("idTokenValidator");
    openapiFields.add("requireBothAccessTokenAndIDToken");
    openapiFields.add("validateAccessTokenWhenIDTokenIsAlsoProvided");
    openapiFields.add("alternateAuthorizationIdentityMapper");
    openapiFields.add("allRequiredScope");
    openapiFields.add("anyRequiredScope");
    openapiFields.add("serverFqdn");
    openapiFields.add("enabled");
    openapiFields.add("meta");
    openapiFields.add("urn:pingidentity:schemas:configuration:messages:2.0");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("schemas");
    openapiRequiredFields.add("enabled");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to OauthBearerSaslMechanismHandlerResponse
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!OauthBearerSaslMechanismHandlerResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OauthBearerSaslMechanismHandlerResponse is not found in the empty JSON string", OauthBearerSaslMechanismHandlerResponse.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : OauthBearerSaslMechanismHandlerResponse.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("schemas") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("schemas").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `schemas` to be an array in the JSON string but got `%s`", jsonObj.get("schemas").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("accessTokenValidator") != null && !jsonObj.get("accessTokenValidator").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `accessTokenValidator` to be an array in the JSON string but got `%s`", jsonObj.get("accessTokenValidator").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("idTokenValidator") != null && !jsonObj.get("idTokenValidator").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `idTokenValidator` to be an array in the JSON string but got `%s`", jsonObj.get("idTokenValidator").toString()));
      }
      if ((jsonObj.get("alternateAuthorizationIdentityMapper") != null && !jsonObj.get("alternateAuthorizationIdentityMapper").isJsonNull()) && !jsonObj.get("alternateAuthorizationIdentityMapper").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `alternateAuthorizationIdentityMapper` to be a primitive type in the JSON string but got `%s`", jsonObj.get("alternateAuthorizationIdentityMapper").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("allRequiredScope") != null && !jsonObj.get("allRequiredScope").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `allRequiredScope` to be an array in the JSON string but got `%s`", jsonObj.get("allRequiredScope").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("anyRequiredScope") != null && !jsonObj.get("anyRequiredScope").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `anyRequiredScope` to be an array in the JSON string but got `%s`", jsonObj.get("anyRequiredScope").toString()));
      }
      if ((jsonObj.get("serverFqdn") != null && !jsonObj.get("serverFqdn").isJsonNull()) && !jsonObj.get("serverFqdn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serverFqdn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serverFqdn").toString()));
      }
      // validate the optional field `meta`
      if (jsonObj.get("meta") != null && !jsonObj.get("meta").isJsonNull()) {
        MetaMeta.validateJsonObject(jsonObj.getAsJsonObject("meta"));
      }
      // validate the optional field `urn:pingidentity:schemas:configuration:messages:2.0`
      if (jsonObj.get("urn:pingidentity:schemas:configuration:messages:2.0") != null && !jsonObj.get("urn:pingidentity:schemas:configuration:messages:2.0").isJsonNull()) {
        MetaUrnPingidentitySchemasConfigurationMessages20.validateJsonObject(jsonObj.getAsJsonObject("urn:pingidentity:schemas:configuration:messages:2.0"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OauthBearerSaslMechanismHandlerResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OauthBearerSaslMechanismHandlerResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OauthBearerSaslMechanismHandlerResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OauthBearerSaslMechanismHandlerResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<OauthBearerSaslMechanismHandlerResponse>() {
           @Override
           public void write(JsonWriter out, OauthBearerSaslMechanismHandlerResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public OauthBearerSaslMechanismHandlerResponse read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             OauthBearerSaslMechanismHandlerResponse instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of OauthBearerSaslMechanismHandlerResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of OauthBearerSaslMechanismHandlerResponse
  * @throws IOException if the JSON string is invalid with respect to OauthBearerSaslMechanismHandlerResponse
  */
  public static OauthBearerSaslMechanismHandlerResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OauthBearerSaslMechanismHandlerResponse.class);
  }

 /**
  * Convert an instance of OauthBearerSaslMechanismHandlerResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

