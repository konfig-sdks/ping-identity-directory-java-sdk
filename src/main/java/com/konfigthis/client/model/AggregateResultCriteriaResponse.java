/*
 * PingData Config - OpenAPI 3.0
 * This is the PingData Configuration API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.EnumaggregateResultCriteriaSchemaUrn;
import com.konfigthis.client.model.MetaMeta;
import com.konfigthis.client.model.MetaUrnPingidentitySchemasConfigurationMessages20;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * AggregateResultCriteriaResponse
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class AggregateResultCriteriaResponse {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_SCHEMAS = "schemas";
  @SerializedName(SERIALIZED_NAME_SCHEMAS)
  private List<EnumaggregateResultCriteriaSchemaUrn> schemas = new ArrayList<>();

  public static final String SERIALIZED_NAME_ALL_INCLUDED_RESULT_CRITERIA = "allIncludedResultCriteria";
  @SerializedName(SERIALIZED_NAME_ALL_INCLUDED_RESULT_CRITERIA)
  private List<String> allIncludedResultCriteria = null;

  public static final String SERIALIZED_NAME_ANY_INCLUDED_RESULT_CRITERIA = "anyIncludedResultCriteria";
  @SerializedName(SERIALIZED_NAME_ANY_INCLUDED_RESULT_CRITERIA)
  private List<String> anyIncludedResultCriteria = null;

  public static final String SERIALIZED_NAME_NOT_ALL_INCLUDED_RESULT_CRITERIA = "notAllIncludedResultCriteria";
  @SerializedName(SERIALIZED_NAME_NOT_ALL_INCLUDED_RESULT_CRITERIA)
  private List<String> notAllIncludedResultCriteria = null;

  public static final String SERIALIZED_NAME_NONE_INCLUDED_RESULT_CRITERIA = "noneIncludedResultCriteria";
  @SerializedName(SERIALIZED_NAME_NONE_INCLUDED_RESULT_CRITERIA)
  private List<String> noneIncludedResultCriteria = null;

  public static final String SERIALIZED_NAME_META = "meta";
  @SerializedName(SERIALIZED_NAME_META)
  private MetaMeta meta;

  public static final String SERIALIZED_NAME_URN_COLON_PINGIDENTITY_COLON_SCHEMAS_COLON_CONFIGURATION_COLON_MESSAGES_COLON20 = "urn:pingidentity:schemas:configuration:messages:2.0";
  @SerializedName(SERIALIZED_NAME_URN_COLON_PINGIDENTITY_COLON_SCHEMAS_COLON_CONFIGURATION_COLON_MESSAGES_COLON20)
  private MetaUrnPingidentitySchemasConfigurationMessages20 urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20;

  public AggregateResultCriteriaResponse() {
  }

  public AggregateResultCriteriaResponse id(String id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * Name of the Result Criteria
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Name of the Result Criteria")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    
    
    
    this.id = id;
  }


  public AggregateResultCriteriaResponse description(String description) {
    
    
    
    
    this.description = description;
    return this;
  }

   /**
   * A description for this Result Criteria
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A description for this Result Criteria")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    
    
    
    this.description = description;
  }


  public AggregateResultCriteriaResponse schemas(List<EnumaggregateResultCriteriaSchemaUrn> schemas) {
    
    
    
    
    this.schemas = schemas;
    return this;
  }

  public AggregateResultCriteriaResponse addSchemasItem(EnumaggregateResultCriteriaSchemaUrn schemasItem) {
    this.schemas.add(schemasItem);
    return this;
  }

   /**
   * Get schemas
   * @return schemas
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<EnumaggregateResultCriteriaSchemaUrn> getSchemas() {
    return schemas;
  }


  public void setSchemas(List<EnumaggregateResultCriteriaSchemaUrn> schemas) {
    
    
    
    this.schemas = schemas;
  }


  public AggregateResultCriteriaResponse allIncludedResultCriteria(List<String> allIncludedResultCriteria) {
    
    
    
    
    this.allIncludedResultCriteria = allIncludedResultCriteria;
    return this;
  }

  public AggregateResultCriteriaResponse addAllIncludedResultCriteriaItem(String allIncludedResultCriteriaItem) {
    if (this.allIncludedResultCriteria == null) {
      this.allIncludedResultCriteria = new ArrayList<>();
    }
    this.allIncludedResultCriteria.add(allIncludedResultCriteriaItem);
    return this;
  }

   /**
   * Specifies a result criteria object that must match the associated operation result in order to match the aggregate result criteria. If one or more all-included result criteria objects are provided, then an operation result must match all of them in order to match the aggregate result criteria.
   * @return allIncludedResultCriteria
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies a result criteria object that must match the associated operation result in order to match the aggregate result criteria. If one or more all-included result criteria objects are provided, then an operation result must match all of them in order to match the aggregate result criteria.")

  public List<String> getAllIncludedResultCriteria() {
    return allIncludedResultCriteria;
  }


  public void setAllIncludedResultCriteria(List<String> allIncludedResultCriteria) {
    
    
    
    this.allIncludedResultCriteria = allIncludedResultCriteria;
  }


  public AggregateResultCriteriaResponse anyIncludedResultCriteria(List<String> anyIncludedResultCriteria) {
    
    
    
    
    this.anyIncludedResultCriteria = anyIncludedResultCriteria;
    return this;
  }

  public AggregateResultCriteriaResponse addAnyIncludedResultCriteriaItem(String anyIncludedResultCriteriaItem) {
    if (this.anyIncludedResultCriteria == null) {
      this.anyIncludedResultCriteria = new ArrayList<>();
    }
    this.anyIncludedResultCriteria.add(anyIncludedResultCriteriaItem);
    return this;
  }

   /**
   * Specifies a result criteria object that may match the associated operation result in order to match the aggregate result criteria. If one or more any-included result criteria objects are provided, then an operation result must match at least one of them in order to match the aggregate result criteria.
   * @return anyIncludedResultCriteria
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies a result criteria object that may match the associated operation result in order to match the aggregate result criteria. If one or more any-included result criteria objects are provided, then an operation result must match at least one of them in order to match the aggregate result criteria.")

  public List<String> getAnyIncludedResultCriteria() {
    return anyIncludedResultCriteria;
  }


  public void setAnyIncludedResultCriteria(List<String> anyIncludedResultCriteria) {
    
    
    
    this.anyIncludedResultCriteria = anyIncludedResultCriteria;
  }


  public AggregateResultCriteriaResponse notAllIncludedResultCriteria(List<String> notAllIncludedResultCriteria) {
    
    
    
    
    this.notAllIncludedResultCriteria = notAllIncludedResultCriteria;
    return this;
  }

  public AggregateResultCriteriaResponse addNotAllIncludedResultCriteriaItem(String notAllIncludedResultCriteriaItem) {
    if (this.notAllIncludedResultCriteria == null) {
      this.notAllIncludedResultCriteria = new ArrayList<>();
    }
    this.notAllIncludedResultCriteria.add(notAllIncludedResultCriteriaItem);
    return this;
  }

   /**
   * Specifies a result criteria object that should not match the associated operation result in order to match the aggregate result criteria. If one or more not-all-included result criteria objects are provided, then an operation result must not match all of them (that is, it may match zero or more of them, but it must not match all of them) in order to match the aggregate result criteria.
   * @return notAllIncludedResultCriteria
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies a result criteria object that should not match the associated operation result in order to match the aggregate result criteria. If one or more not-all-included result criteria objects are provided, then an operation result must not match all of them (that is, it may match zero or more of them, but it must not match all of them) in order to match the aggregate result criteria.")

  public List<String> getNotAllIncludedResultCriteria() {
    return notAllIncludedResultCriteria;
  }


  public void setNotAllIncludedResultCriteria(List<String> notAllIncludedResultCriteria) {
    
    
    
    this.notAllIncludedResultCriteria = notAllIncludedResultCriteria;
  }


  public AggregateResultCriteriaResponse noneIncludedResultCriteria(List<String> noneIncludedResultCriteria) {
    
    
    
    
    this.noneIncludedResultCriteria = noneIncludedResultCriteria;
    return this;
  }

  public AggregateResultCriteriaResponse addNoneIncludedResultCriteriaItem(String noneIncludedResultCriteriaItem) {
    if (this.noneIncludedResultCriteria == null) {
      this.noneIncludedResultCriteria = new ArrayList<>();
    }
    this.noneIncludedResultCriteria.add(noneIncludedResultCriteriaItem);
    return this;
  }

   /**
   * Specifies a result criteria object that must not match the associated operation result in order to match the aggregate result criteria. If one or more none-included result criteria objects are provided, then an operation result must not match any of them in order to match the aggregate result criteria.
   * @return noneIncludedResultCriteria
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies a result criteria object that must not match the associated operation result in order to match the aggregate result criteria. If one or more none-included result criteria objects are provided, then an operation result must not match any of them in order to match the aggregate result criteria.")

  public List<String> getNoneIncludedResultCriteria() {
    return noneIncludedResultCriteria;
  }


  public void setNoneIncludedResultCriteria(List<String> noneIncludedResultCriteria) {
    
    
    
    this.noneIncludedResultCriteria = noneIncludedResultCriteria;
  }


  public AggregateResultCriteriaResponse meta(MetaMeta meta) {
    
    
    
    
    this.meta = meta;
    return this;
  }

   /**
   * Get meta
   * @return meta
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public MetaMeta getMeta() {
    return meta;
  }


  public void setMeta(MetaMeta meta) {
    
    
    
    this.meta = meta;
  }


  public AggregateResultCriteriaResponse urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20(MetaUrnPingidentitySchemasConfigurationMessages20 urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20) {
    
    
    
    
    this.urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20 = urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20;
    return this;
  }

   /**
   * Get urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20
   * @return urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public MetaUrnPingidentitySchemasConfigurationMessages20 getUrnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20() {
    return urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20;
  }


  public void setUrnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20(MetaUrnPingidentitySchemasConfigurationMessages20 urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20) {
    
    
    
    this.urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20 = urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the AggregateResultCriteriaResponse instance itself
   */
  public AggregateResultCriteriaResponse putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AggregateResultCriteriaResponse aggregateResultCriteriaResponse = (AggregateResultCriteriaResponse) o;
    return Objects.equals(this.id, aggregateResultCriteriaResponse.id) &&
        Objects.equals(this.description, aggregateResultCriteriaResponse.description) &&
        Objects.equals(this.schemas, aggregateResultCriteriaResponse.schemas) &&
        Objects.equals(this.allIncludedResultCriteria, aggregateResultCriteriaResponse.allIncludedResultCriteria) &&
        Objects.equals(this.anyIncludedResultCriteria, aggregateResultCriteriaResponse.anyIncludedResultCriteria) &&
        Objects.equals(this.notAllIncludedResultCriteria, aggregateResultCriteriaResponse.notAllIncludedResultCriteria) &&
        Objects.equals(this.noneIncludedResultCriteria, aggregateResultCriteriaResponse.noneIncludedResultCriteria) &&
        Objects.equals(this.meta, aggregateResultCriteriaResponse.meta) &&
        Objects.equals(this.urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20, aggregateResultCriteriaResponse.urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20)&&
        Objects.equals(this.additionalProperties, aggregateResultCriteriaResponse.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, description, schemas, allIncludedResultCriteria, anyIncludedResultCriteria, notAllIncludedResultCriteria, noneIncludedResultCriteria, meta, urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AggregateResultCriteriaResponse {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    schemas: ").append(toIndentedString(schemas)).append("\n");
    sb.append("    allIncludedResultCriteria: ").append(toIndentedString(allIncludedResultCriteria)).append("\n");
    sb.append("    anyIncludedResultCriteria: ").append(toIndentedString(anyIncludedResultCriteria)).append("\n");
    sb.append("    notAllIncludedResultCriteria: ").append(toIndentedString(notAllIncludedResultCriteria)).append("\n");
    sb.append("    noneIncludedResultCriteria: ").append(toIndentedString(noneIncludedResultCriteria)).append("\n");
    sb.append("    meta: ").append(toIndentedString(meta)).append("\n");
    sb.append("    urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20: ").append(toIndentedString(urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("description");
    openapiFields.add("schemas");
    openapiFields.add("allIncludedResultCriteria");
    openapiFields.add("anyIncludedResultCriteria");
    openapiFields.add("notAllIncludedResultCriteria");
    openapiFields.add("noneIncludedResultCriteria");
    openapiFields.add("meta");
    openapiFields.add("urn:pingidentity:schemas:configuration:messages:2.0");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("schemas");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to AggregateResultCriteriaResponse
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!AggregateResultCriteriaResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AggregateResultCriteriaResponse is not found in the empty JSON string", AggregateResultCriteriaResponse.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : AggregateResultCriteriaResponse.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("schemas") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("schemas").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `schemas` to be an array in the JSON string but got `%s`", jsonObj.get("schemas").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("allIncludedResultCriteria") != null && !jsonObj.get("allIncludedResultCriteria").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `allIncludedResultCriteria` to be an array in the JSON string but got `%s`", jsonObj.get("allIncludedResultCriteria").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("anyIncludedResultCriteria") != null && !jsonObj.get("anyIncludedResultCriteria").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `anyIncludedResultCriteria` to be an array in the JSON string but got `%s`", jsonObj.get("anyIncludedResultCriteria").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("notAllIncludedResultCriteria") != null && !jsonObj.get("notAllIncludedResultCriteria").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `notAllIncludedResultCriteria` to be an array in the JSON string but got `%s`", jsonObj.get("notAllIncludedResultCriteria").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("noneIncludedResultCriteria") != null && !jsonObj.get("noneIncludedResultCriteria").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `noneIncludedResultCriteria` to be an array in the JSON string but got `%s`", jsonObj.get("noneIncludedResultCriteria").toString()));
      }
      // validate the optional field `meta`
      if (jsonObj.get("meta") != null && !jsonObj.get("meta").isJsonNull()) {
        MetaMeta.validateJsonObject(jsonObj.getAsJsonObject("meta"));
      }
      // validate the optional field `urn:pingidentity:schemas:configuration:messages:2.0`
      if (jsonObj.get("urn:pingidentity:schemas:configuration:messages:2.0") != null && !jsonObj.get("urn:pingidentity:schemas:configuration:messages:2.0").isJsonNull()) {
        MetaUrnPingidentitySchemasConfigurationMessages20.validateJsonObject(jsonObj.getAsJsonObject("urn:pingidentity:schemas:configuration:messages:2.0"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AggregateResultCriteriaResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AggregateResultCriteriaResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AggregateResultCriteriaResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AggregateResultCriteriaResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<AggregateResultCriteriaResponse>() {
           @Override
           public void write(JsonWriter out, AggregateResultCriteriaResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public AggregateResultCriteriaResponse read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             AggregateResultCriteriaResponse instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AggregateResultCriteriaResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AggregateResultCriteriaResponse
  * @throws IOException if the JSON string is invalid with respect to AggregateResultCriteriaResponse
  */
  public static AggregateResultCriteriaResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AggregateResultCriteriaResponse.class);
  }

 /**
  * Convert an instance of AggregateResultCriteriaResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

