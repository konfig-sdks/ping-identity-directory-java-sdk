/*
 * PingData Config - OpenAPI 3.0
 * This is the PingData Configuration API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.EnumresultCriteriaMissingAnyPrivilegeProp;
import com.konfigthis.client.model.EnumresultCriteriaMissingPrivilegeProp;
import com.konfigthis.client.model.EnumresultCriteriaProcessingTimeCriteriaProp;
import com.konfigthis.client.model.EnumresultCriteriaQueueTimeCriteriaProp;
import com.konfigthis.client.model.EnumresultCriteriaReferralReturnedProp;
import com.konfigthis.client.model.EnumresultCriteriaResultCodeCriteriaProp;
import com.konfigthis.client.model.EnumresultCriteriaResultCodeValueProp;
import com.konfigthis.client.model.EnumresultCriteriaRetiredPasswordUsedForBindProp;
import com.konfigthis.client.model.EnumresultCriteriaSearchEntryReturnedCriteriaProp;
import com.konfigthis.client.model.EnumresultCriteriaSearchIndexedCriteriaProp;
import com.konfigthis.client.model.EnumresultCriteriaSearchReferenceReturnedCriteriaProp;
import com.konfigthis.client.model.EnumresultCriteriaUsedAlternateAuthzidProp;
import com.konfigthis.client.model.EnumresultCriteriaUsedAnyPrivilegeProp;
import com.konfigthis.client.model.EnumresultCriteriaUsedPrivilegeProp;
import com.konfigthis.client.model.EnumsimpleResultCriteriaSchemaUrn;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * AddSimpleResultCriteriaRequest
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class AddSimpleResultCriteriaRequest {
  public static final String SERIALIZED_NAME_CRITERIA_NAME = "criteriaName";
  @SerializedName(SERIALIZED_NAME_CRITERIA_NAME)
  private String criteriaName;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_SCHEMAS = "schemas";
  @SerializedName(SERIALIZED_NAME_SCHEMAS)
  private List<EnumsimpleResultCriteriaSchemaUrn> schemas = new ArrayList<>();

  public static final String SERIALIZED_NAME_REQUEST_CRITERIA = "requestCriteria";
  @SerializedName(SERIALIZED_NAME_REQUEST_CRITERIA)
  private String requestCriteria;

  public static final String SERIALIZED_NAME_RESULT_CODE_CRITERIA = "resultCodeCriteria";
  @SerializedName(SERIALIZED_NAME_RESULT_CODE_CRITERIA)
  private EnumresultCriteriaResultCodeCriteriaProp resultCodeCriteria;

  public static final String SERIALIZED_NAME_RESULT_CODE_VALUE = "resultCodeValue";
  @SerializedName(SERIALIZED_NAME_RESULT_CODE_VALUE)
  private List<EnumresultCriteriaResultCodeValueProp> resultCodeValue = null;

  public static final String SERIALIZED_NAME_PROCESSING_TIME_CRITERIA = "processingTimeCriteria";
  @SerializedName(SERIALIZED_NAME_PROCESSING_TIME_CRITERIA)
  private EnumresultCriteriaProcessingTimeCriteriaProp processingTimeCriteria;

  public static final String SERIALIZED_NAME_PROCESSING_TIME_VALUE = "processingTimeValue";
  @SerializedName(SERIALIZED_NAME_PROCESSING_TIME_VALUE)
  private String processingTimeValue;

  public static final String SERIALIZED_NAME_QUEUE_TIME_CRITERIA = "queueTimeCriteria";
  @SerializedName(SERIALIZED_NAME_QUEUE_TIME_CRITERIA)
  private EnumresultCriteriaQueueTimeCriteriaProp queueTimeCriteria;

  public static final String SERIALIZED_NAME_QUEUE_TIME_VALUE = "queueTimeValue";
  @SerializedName(SERIALIZED_NAME_QUEUE_TIME_VALUE)
  private String queueTimeValue;

  public static final String SERIALIZED_NAME_REFERRAL_RETURNED = "referralReturned";
  @SerializedName(SERIALIZED_NAME_REFERRAL_RETURNED)
  private EnumresultCriteriaReferralReturnedProp referralReturned;

  public static final String SERIALIZED_NAME_ALL_INCLUDED_RESPONSE_CONTROL = "allIncludedResponseControl";
  @SerializedName(SERIALIZED_NAME_ALL_INCLUDED_RESPONSE_CONTROL)
  private List<String> allIncludedResponseControl = null;

  public static final String SERIALIZED_NAME_ANY_INCLUDED_RESPONSE_CONTROL = "anyIncludedResponseControl";
  @SerializedName(SERIALIZED_NAME_ANY_INCLUDED_RESPONSE_CONTROL)
  private List<String> anyIncludedResponseControl = null;

  public static final String SERIALIZED_NAME_NOT_ALL_INCLUDED_RESPONSE_CONTROL = "notAllIncludedResponseControl";
  @SerializedName(SERIALIZED_NAME_NOT_ALL_INCLUDED_RESPONSE_CONTROL)
  private List<String> notAllIncludedResponseControl = null;

  public static final String SERIALIZED_NAME_NONE_INCLUDED_RESPONSE_CONTROL = "noneIncludedResponseControl";
  @SerializedName(SERIALIZED_NAME_NONE_INCLUDED_RESPONSE_CONTROL)
  private List<String> noneIncludedResponseControl = null;

  public static final String SERIALIZED_NAME_USED_ALTERNATE_AUTHZID = "usedAlternateAuthzid";
  @SerializedName(SERIALIZED_NAME_USED_ALTERNATE_AUTHZID)
  private EnumresultCriteriaUsedAlternateAuthzidProp usedAlternateAuthzid;

  public static final String SERIALIZED_NAME_USED_ANY_PRIVILEGE = "usedAnyPrivilege";
  @SerializedName(SERIALIZED_NAME_USED_ANY_PRIVILEGE)
  private EnumresultCriteriaUsedAnyPrivilegeProp usedAnyPrivilege;

  public static final String SERIALIZED_NAME_USED_PRIVILEGE = "usedPrivilege";
  @SerializedName(SERIALIZED_NAME_USED_PRIVILEGE)
  private List<EnumresultCriteriaUsedPrivilegeProp> usedPrivilege = null;

  public static final String SERIALIZED_NAME_MISSING_ANY_PRIVILEGE = "missingAnyPrivilege";
  @SerializedName(SERIALIZED_NAME_MISSING_ANY_PRIVILEGE)
  private EnumresultCriteriaMissingAnyPrivilegeProp missingAnyPrivilege;

  public static final String SERIALIZED_NAME_MISSING_PRIVILEGE = "missingPrivilege";
  @SerializedName(SERIALIZED_NAME_MISSING_PRIVILEGE)
  private List<EnumresultCriteriaMissingPrivilegeProp> missingPrivilege = null;

  public static final String SERIALIZED_NAME_RETIRED_PASSWORD_USED_FOR_BIND = "retiredPasswordUsedForBind";
  @SerializedName(SERIALIZED_NAME_RETIRED_PASSWORD_USED_FOR_BIND)
  private EnumresultCriteriaRetiredPasswordUsedForBindProp retiredPasswordUsedForBind;

  public static final String SERIALIZED_NAME_SEARCH_ENTRY_RETURNED_CRITERIA = "searchEntryReturnedCriteria";
  @SerializedName(SERIALIZED_NAME_SEARCH_ENTRY_RETURNED_CRITERIA)
  private EnumresultCriteriaSearchEntryReturnedCriteriaProp searchEntryReturnedCriteria;

  public static final String SERIALIZED_NAME_SEARCH_ENTRY_RETURNED_COUNT = "searchEntryReturnedCount";
  @SerializedName(SERIALIZED_NAME_SEARCH_ENTRY_RETURNED_COUNT)
  private Integer searchEntryReturnedCount;

  public static final String SERIALIZED_NAME_SEARCH_REFERENCE_RETURNED_CRITERIA = "searchReferenceReturnedCriteria";
  @SerializedName(SERIALIZED_NAME_SEARCH_REFERENCE_RETURNED_CRITERIA)
  private EnumresultCriteriaSearchReferenceReturnedCriteriaProp searchReferenceReturnedCriteria;

  public static final String SERIALIZED_NAME_SEARCH_REFERENCE_RETURNED_COUNT = "searchReferenceReturnedCount";
  @SerializedName(SERIALIZED_NAME_SEARCH_REFERENCE_RETURNED_COUNT)
  private Integer searchReferenceReturnedCount;

  public static final String SERIALIZED_NAME_SEARCH_INDEXED_CRITERIA = "searchIndexedCriteria";
  @SerializedName(SERIALIZED_NAME_SEARCH_INDEXED_CRITERIA)
  private EnumresultCriteriaSearchIndexedCriteriaProp searchIndexedCriteria;

  public static final String SERIALIZED_NAME_INCLUDED_AUTHZ_USER_BASE_D_N = "includedAuthzUserBaseDN";
  @SerializedName(SERIALIZED_NAME_INCLUDED_AUTHZ_USER_BASE_D_N)
  private List<String> includedAuthzUserBaseDN = null;

  public static final String SERIALIZED_NAME_EXCLUDED_AUTHZ_USER_BASE_D_N = "excludedAuthzUserBaseDN";
  @SerializedName(SERIALIZED_NAME_EXCLUDED_AUTHZ_USER_BASE_D_N)
  private List<String> excludedAuthzUserBaseDN = null;

  public static final String SERIALIZED_NAME_ALL_INCLUDED_AUTHZ_USER_GROUP_D_N = "allIncludedAuthzUserGroupDN";
  @SerializedName(SERIALIZED_NAME_ALL_INCLUDED_AUTHZ_USER_GROUP_D_N)
  private List<String> allIncludedAuthzUserGroupDN = null;

  public static final String SERIALIZED_NAME_ANY_INCLUDED_AUTHZ_USER_GROUP_D_N = "anyIncludedAuthzUserGroupDN";
  @SerializedName(SERIALIZED_NAME_ANY_INCLUDED_AUTHZ_USER_GROUP_D_N)
  private List<String> anyIncludedAuthzUserGroupDN = null;

  public static final String SERIALIZED_NAME_NOT_ALL_INCLUDED_AUTHZ_USER_GROUP_D_N = "notAllIncludedAuthzUserGroupDN";
  @SerializedName(SERIALIZED_NAME_NOT_ALL_INCLUDED_AUTHZ_USER_GROUP_D_N)
  private List<String> notAllIncludedAuthzUserGroupDN = null;

  public static final String SERIALIZED_NAME_NONE_INCLUDED_AUTHZ_USER_GROUP_D_N = "noneIncludedAuthzUserGroupDN";
  @SerializedName(SERIALIZED_NAME_NONE_INCLUDED_AUTHZ_USER_GROUP_D_N)
  private List<String> noneIncludedAuthzUserGroupDN = null;

  public AddSimpleResultCriteriaRequest() {
  }

  public AddSimpleResultCriteriaRequest criteriaName(String criteriaName) {
    
    
    
    
    this.criteriaName = criteriaName;
    return this;
  }

   /**
   * Name of the new Result Criteria
   * @return criteriaName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Name of the new Result Criteria")

  public String getCriteriaName() {
    return criteriaName;
  }


  public void setCriteriaName(String criteriaName) {
    
    
    
    this.criteriaName = criteriaName;
  }


  public AddSimpleResultCriteriaRequest description(String description) {
    
    
    
    
    this.description = description;
    return this;
  }

   /**
   * A description for this Result Criteria
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A description for this Result Criteria")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    
    
    
    this.description = description;
  }


  public AddSimpleResultCriteriaRequest schemas(List<EnumsimpleResultCriteriaSchemaUrn> schemas) {
    
    
    
    
    this.schemas = schemas;
    return this;
  }

  public AddSimpleResultCriteriaRequest addSchemasItem(EnumsimpleResultCriteriaSchemaUrn schemasItem) {
    this.schemas.add(schemasItem);
    return this;
  }

   /**
   * Get schemas
   * @return schemas
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<EnumsimpleResultCriteriaSchemaUrn> getSchemas() {
    return schemas;
  }


  public void setSchemas(List<EnumsimpleResultCriteriaSchemaUrn> schemas) {
    
    
    
    this.schemas = schemas;
  }


  public AddSimpleResultCriteriaRequest requestCriteria(String requestCriteria) {
    
    
    
    
    this.requestCriteria = requestCriteria;
    return this;
  }

   /**
   * Specifies a request criteria object that must match the associated request for operations included in this Simple Result Criteria.
   * @return requestCriteria
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies a request criteria object that must match the associated request for operations included in this Simple Result Criteria.")

  public String getRequestCriteria() {
    return requestCriteria;
  }


  public void setRequestCriteria(String requestCriteria) {
    
    
    
    this.requestCriteria = requestCriteria;
  }


  public AddSimpleResultCriteriaRequest resultCodeCriteria(EnumresultCriteriaResultCodeCriteriaProp resultCodeCriteria) {
    
    
    
    
    this.resultCodeCriteria = resultCodeCriteria;
    return this;
  }

   /**
   * Get resultCodeCriteria
   * @return resultCodeCriteria
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EnumresultCriteriaResultCodeCriteriaProp getResultCodeCriteria() {
    return resultCodeCriteria;
  }


  public void setResultCodeCriteria(EnumresultCriteriaResultCodeCriteriaProp resultCodeCriteria) {
    
    
    
    this.resultCodeCriteria = resultCodeCriteria;
  }


  public AddSimpleResultCriteriaRequest resultCodeValue(List<EnumresultCriteriaResultCodeValueProp> resultCodeValue) {
    
    
    
    
    this.resultCodeValue = resultCodeValue;
    return this;
  }

  public AddSimpleResultCriteriaRequest addResultCodeValueItem(EnumresultCriteriaResultCodeValueProp resultCodeValueItem) {
    if (this.resultCodeValue == null) {
      this.resultCodeValue = new ArrayList<>();
    }
    this.resultCodeValue.add(resultCodeValueItem);
    return this;
  }

   /**
   * Get resultCodeValue
   * @return resultCodeValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<EnumresultCriteriaResultCodeValueProp> getResultCodeValue() {
    return resultCodeValue;
  }


  public void setResultCodeValue(List<EnumresultCriteriaResultCodeValueProp> resultCodeValue) {
    
    
    
    this.resultCodeValue = resultCodeValue;
  }


  public AddSimpleResultCriteriaRequest processingTimeCriteria(EnumresultCriteriaProcessingTimeCriteriaProp processingTimeCriteria) {
    
    
    
    
    this.processingTimeCriteria = processingTimeCriteria;
    return this;
  }

   /**
   * Get processingTimeCriteria
   * @return processingTimeCriteria
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EnumresultCriteriaProcessingTimeCriteriaProp getProcessingTimeCriteria() {
    return processingTimeCriteria;
  }


  public void setProcessingTimeCriteria(EnumresultCriteriaProcessingTimeCriteriaProp processingTimeCriteria) {
    
    
    
    this.processingTimeCriteria = processingTimeCriteria;
  }


  public AddSimpleResultCriteriaRequest processingTimeValue(String processingTimeValue) {
    
    
    
    
    this.processingTimeValue = processingTimeValue;
    return this;
  }

   /**
   * Specifies the boundary value to use for the operation processing time when determining whether to include that operation in this Simple Result Criteria. This will be ignored if the \&quot;processing-time-criteria\&quot; property has a value of \&quot;any\&quot;.
   * @return processingTimeValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the boundary value to use for the operation processing time when determining whether to include that operation in this Simple Result Criteria. This will be ignored if the \"processing-time-criteria\" property has a value of \"any\".")

  public String getProcessingTimeValue() {
    return processingTimeValue;
  }


  public void setProcessingTimeValue(String processingTimeValue) {
    
    
    
    this.processingTimeValue = processingTimeValue;
  }


  public AddSimpleResultCriteriaRequest queueTimeCriteria(EnumresultCriteriaQueueTimeCriteriaProp queueTimeCriteria) {
    
    
    
    
    this.queueTimeCriteria = queueTimeCriteria;
    return this;
  }

   /**
   * Get queueTimeCriteria
   * @return queueTimeCriteria
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EnumresultCriteriaQueueTimeCriteriaProp getQueueTimeCriteria() {
    return queueTimeCriteria;
  }


  public void setQueueTimeCriteria(EnumresultCriteriaQueueTimeCriteriaProp queueTimeCriteria) {
    
    
    
    this.queueTimeCriteria = queueTimeCriteria;
  }


  public AddSimpleResultCriteriaRequest queueTimeValue(String queueTimeValue) {
    
    
    
    
    this.queueTimeValue = queueTimeValue;
    return this;
  }

   /**
   * Specifies the boundary value to use for the time an operation spent on the work queue when determining whether to include that operation in this Simple Result Criteria. This will be ignored if the \&quot;queue-time-criteria\&quot; property has a value of \&quot;any\&quot;.
   * @return queueTimeValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the boundary value to use for the time an operation spent on the work queue when determining whether to include that operation in this Simple Result Criteria. This will be ignored if the \"queue-time-criteria\" property has a value of \"any\".")

  public String getQueueTimeValue() {
    return queueTimeValue;
  }


  public void setQueueTimeValue(String queueTimeValue) {
    
    
    
    this.queueTimeValue = queueTimeValue;
  }


  public AddSimpleResultCriteriaRequest referralReturned(EnumresultCriteriaReferralReturnedProp referralReturned) {
    
    
    
    
    this.referralReturned = referralReturned;
    return this;
  }

   /**
   * Get referralReturned
   * @return referralReturned
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EnumresultCriteriaReferralReturnedProp getReferralReturned() {
    return referralReturned;
  }


  public void setReferralReturned(EnumresultCriteriaReferralReturnedProp referralReturned) {
    
    
    
    this.referralReturned = referralReturned;
  }


  public AddSimpleResultCriteriaRequest allIncludedResponseControl(List<String> allIncludedResponseControl) {
    
    
    
    
    this.allIncludedResponseControl = allIncludedResponseControl;
    return this;
  }

  public AddSimpleResultCriteriaRequest addAllIncludedResponseControlItem(String allIncludedResponseControlItem) {
    if (this.allIncludedResponseControl == null) {
      this.allIncludedResponseControl = new ArrayList<>();
    }
    this.allIncludedResponseControl.add(allIncludedResponseControlItem);
    return this;
  }

   /**
   * Specifies the OID of a control that must be present in the response to the client for operations included in this Simple Result Criteria. If any control OIDs are provided, then the response must contain all of those controls.
   * @return allIncludedResponseControl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the OID of a control that must be present in the response to the client for operations included in this Simple Result Criteria. If any control OIDs are provided, then the response must contain all of those controls.")

  public List<String> getAllIncludedResponseControl() {
    return allIncludedResponseControl;
  }


  public void setAllIncludedResponseControl(List<String> allIncludedResponseControl) {
    
    
    
    this.allIncludedResponseControl = allIncludedResponseControl;
  }


  public AddSimpleResultCriteriaRequest anyIncludedResponseControl(List<String> anyIncludedResponseControl) {
    
    
    
    
    this.anyIncludedResponseControl = anyIncludedResponseControl;
    return this;
  }

  public AddSimpleResultCriteriaRequest addAnyIncludedResponseControlItem(String anyIncludedResponseControlItem) {
    if (this.anyIncludedResponseControl == null) {
      this.anyIncludedResponseControl = new ArrayList<>();
    }
    this.anyIncludedResponseControl.add(anyIncludedResponseControlItem);
    return this;
  }

   /**
   * Specifies the OID of a control that may be present in the response to the client for operations included in this Simple Result Criteria. If any control OIDs are provided, then the response must contain at least one of those controls.
   * @return anyIncludedResponseControl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the OID of a control that may be present in the response to the client for operations included in this Simple Result Criteria. If any control OIDs are provided, then the response must contain at least one of those controls.")

  public List<String> getAnyIncludedResponseControl() {
    return anyIncludedResponseControl;
  }


  public void setAnyIncludedResponseControl(List<String> anyIncludedResponseControl) {
    
    
    
    this.anyIncludedResponseControl = anyIncludedResponseControl;
  }


  public AddSimpleResultCriteriaRequest notAllIncludedResponseControl(List<String> notAllIncludedResponseControl) {
    
    
    
    
    this.notAllIncludedResponseControl = notAllIncludedResponseControl;
    return this;
  }

  public AddSimpleResultCriteriaRequest addNotAllIncludedResponseControlItem(String notAllIncludedResponseControlItem) {
    if (this.notAllIncludedResponseControl == null) {
      this.notAllIncludedResponseControl = new ArrayList<>();
    }
    this.notAllIncludedResponseControl.add(notAllIncludedResponseControlItem);
    return this;
  }

   /**
   * Specifies the OID of a control that should not be present in the response to the client for operations included in this Simple Result Criteria. If any control OIDs are provided, then the response must not contain at least one of those controls (that is, the response may contain zero or more of those controls, but not all of them).
   * @return notAllIncludedResponseControl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the OID of a control that should not be present in the response to the client for operations included in this Simple Result Criteria. If any control OIDs are provided, then the response must not contain at least one of those controls (that is, the response may contain zero or more of those controls, but not all of them).")

  public List<String> getNotAllIncludedResponseControl() {
    return notAllIncludedResponseControl;
  }


  public void setNotAllIncludedResponseControl(List<String> notAllIncludedResponseControl) {
    
    
    
    this.notAllIncludedResponseControl = notAllIncludedResponseControl;
  }


  public AddSimpleResultCriteriaRequest noneIncludedResponseControl(List<String> noneIncludedResponseControl) {
    
    
    
    
    this.noneIncludedResponseControl = noneIncludedResponseControl;
    return this;
  }

  public AddSimpleResultCriteriaRequest addNoneIncludedResponseControlItem(String noneIncludedResponseControlItem) {
    if (this.noneIncludedResponseControl == null) {
      this.noneIncludedResponseControl = new ArrayList<>();
    }
    this.noneIncludedResponseControl.add(noneIncludedResponseControlItem);
    return this;
  }

   /**
   * Specifies the OID of a control that must not be present in the response to the client for operations included in this Simple Result Criteria. If any control OIDs are provided, then the response must not contain any of those controls.
   * @return noneIncludedResponseControl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the OID of a control that must not be present in the response to the client for operations included in this Simple Result Criteria. If any control OIDs are provided, then the response must not contain any of those controls.")

  public List<String> getNoneIncludedResponseControl() {
    return noneIncludedResponseControl;
  }


  public void setNoneIncludedResponseControl(List<String> noneIncludedResponseControl) {
    
    
    
    this.noneIncludedResponseControl = noneIncludedResponseControl;
  }


  public AddSimpleResultCriteriaRequest usedAlternateAuthzid(EnumresultCriteriaUsedAlternateAuthzidProp usedAlternateAuthzid) {
    
    
    
    
    this.usedAlternateAuthzid = usedAlternateAuthzid;
    return this;
  }

   /**
   * Get usedAlternateAuthzid
   * @return usedAlternateAuthzid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EnumresultCriteriaUsedAlternateAuthzidProp getUsedAlternateAuthzid() {
    return usedAlternateAuthzid;
  }


  public void setUsedAlternateAuthzid(EnumresultCriteriaUsedAlternateAuthzidProp usedAlternateAuthzid) {
    
    
    
    this.usedAlternateAuthzid = usedAlternateAuthzid;
  }


  public AddSimpleResultCriteriaRequest usedAnyPrivilege(EnumresultCriteriaUsedAnyPrivilegeProp usedAnyPrivilege) {
    
    
    
    
    this.usedAnyPrivilege = usedAnyPrivilege;
    return this;
  }

   /**
   * Get usedAnyPrivilege
   * @return usedAnyPrivilege
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EnumresultCriteriaUsedAnyPrivilegeProp getUsedAnyPrivilege() {
    return usedAnyPrivilege;
  }


  public void setUsedAnyPrivilege(EnumresultCriteriaUsedAnyPrivilegeProp usedAnyPrivilege) {
    
    
    
    this.usedAnyPrivilege = usedAnyPrivilege;
  }


  public AddSimpleResultCriteriaRequest usedPrivilege(List<EnumresultCriteriaUsedPrivilegeProp> usedPrivilege) {
    
    
    
    
    this.usedPrivilege = usedPrivilege;
    return this;
  }

  public AddSimpleResultCriteriaRequest addUsedPrivilegeItem(EnumresultCriteriaUsedPrivilegeProp usedPrivilegeItem) {
    if (this.usedPrivilege == null) {
      this.usedPrivilege = new ArrayList<>();
    }
    this.usedPrivilege.add(usedPrivilegeItem);
    return this;
  }

   /**
   * Get usedPrivilege
   * @return usedPrivilege
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<EnumresultCriteriaUsedPrivilegeProp> getUsedPrivilege() {
    return usedPrivilege;
  }


  public void setUsedPrivilege(List<EnumresultCriteriaUsedPrivilegeProp> usedPrivilege) {
    
    
    
    this.usedPrivilege = usedPrivilege;
  }


  public AddSimpleResultCriteriaRequest missingAnyPrivilege(EnumresultCriteriaMissingAnyPrivilegeProp missingAnyPrivilege) {
    
    
    
    
    this.missingAnyPrivilege = missingAnyPrivilege;
    return this;
  }

   /**
   * Get missingAnyPrivilege
   * @return missingAnyPrivilege
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EnumresultCriteriaMissingAnyPrivilegeProp getMissingAnyPrivilege() {
    return missingAnyPrivilege;
  }


  public void setMissingAnyPrivilege(EnumresultCriteriaMissingAnyPrivilegeProp missingAnyPrivilege) {
    
    
    
    this.missingAnyPrivilege = missingAnyPrivilege;
  }


  public AddSimpleResultCriteriaRequest missingPrivilege(List<EnumresultCriteriaMissingPrivilegeProp> missingPrivilege) {
    
    
    
    
    this.missingPrivilege = missingPrivilege;
    return this;
  }

  public AddSimpleResultCriteriaRequest addMissingPrivilegeItem(EnumresultCriteriaMissingPrivilegeProp missingPrivilegeItem) {
    if (this.missingPrivilege == null) {
      this.missingPrivilege = new ArrayList<>();
    }
    this.missingPrivilege.add(missingPrivilegeItem);
    return this;
  }

   /**
   * Get missingPrivilege
   * @return missingPrivilege
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<EnumresultCriteriaMissingPrivilegeProp> getMissingPrivilege() {
    return missingPrivilege;
  }


  public void setMissingPrivilege(List<EnumresultCriteriaMissingPrivilegeProp> missingPrivilege) {
    
    
    
    this.missingPrivilege = missingPrivilege;
  }


  public AddSimpleResultCriteriaRequest retiredPasswordUsedForBind(EnumresultCriteriaRetiredPasswordUsedForBindProp retiredPasswordUsedForBind) {
    
    
    
    
    this.retiredPasswordUsedForBind = retiredPasswordUsedForBind;
    return this;
  }

   /**
   * Get retiredPasswordUsedForBind
   * @return retiredPasswordUsedForBind
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EnumresultCriteriaRetiredPasswordUsedForBindProp getRetiredPasswordUsedForBind() {
    return retiredPasswordUsedForBind;
  }


  public void setRetiredPasswordUsedForBind(EnumresultCriteriaRetiredPasswordUsedForBindProp retiredPasswordUsedForBind) {
    
    
    
    this.retiredPasswordUsedForBind = retiredPasswordUsedForBind;
  }


  public AddSimpleResultCriteriaRequest searchEntryReturnedCriteria(EnumresultCriteriaSearchEntryReturnedCriteriaProp searchEntryReturnedCriteria) {
    
    
    
    
    this.searchEntryReturnedCriteria = searchEntryReturnedCriteria;
    return this;
  }

   /**
   * Get searchEntryReturnedCriteria
   * @return searchEntryReturnedCriteria
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EnumresultCriteriaSearchEntryReturnedCriteriaProp getSearchEntryReturnedCriteria() {
    return searchEntryReturnedCriteria;
  }


  public void setSearchEntryReturnedCriteria(EnumresultCriteriaSearchEntryReturnedCriteriaProp searchEntryReturnedCriteria) {
    
    
    
    this.searchEntryReturnedCriteria = searchEntryReturnedCriteria;
  }


  public AddSimpleResultCriteriaRequest searchEntryReturnedCount(Integer searchEntryReturnedCount) {
    
    
    
    
    this.searchEntryReturnedCount = searchEntryReturnedCount;
    return this;
  }

   /**
   * Specifies the target number of entries returned for use when determining whether a search operation should be included in this Simple Result Criteria. This will be ignored for all operations other than search, and it will be ignored for search operations if the \&quot;search-entry-criteria\&quot; property has a value of \&quot;any\&quot;.
   * @return searchEntryReturnedCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the target number of entries returned for use when determining whether a search operation should be included in this Simple Result Criteria. This will be ignored for all operations other than search, and it will be ignored for search operations if the \"search-entry-criteria\" property has a value of \"any\".")

  public Integer getSearchEntryReturnedCount() {
    return searchEntryReturnedCount;
  }


  public void setSearchEntryReturnedCount(Integer searchEntryReturnedCount) {
    
    
    
    this.searchEntryReturnedCount = searchEntryReturnedCount;
  }


  public AddSimpleResultCriteriaRequest searchReferenceReturnedCriteria(EnumresultCriteriaSearchReferenceReturnedCriteriaProp searchReferenceReturnedCriteria) {
    
    
    
    
    this.searchReferenceReturnedCriteria = searchReferenceReturnedCriteria;
    return this;
  }

   /**
   * Get searchReferenceReturnedCriteria
   * @return searchReferenceReturnedCriteria
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EnumresultCriteriaSearchReferenceReturnedCriteriaProp getSearchReferenceReturnedCriteria() {
    return searchReferenceReturnedCriteria;
  }


  public void setSearchReferenceReturnedCriteria(EnumresultCriteriaSearchReferenceReturnedCriteriaProp searchReferenceReturnedCriteria) {
    
    
    
    this.searchReferenceReturnedCriteria = searchReferenceReturnedCriteria;
  }


  public AddSimpleResultCriteriaRequest searchReferenceReturnedCount(Integer searchReferenceReturnedCount) {
    
    
    
    
    this.searchReferenceReturnedCount = searchReferenceReturnedCount;
    return this;
  }

   /**
   * Specifies the target number of references returned for use when determining whether a search operation should be included in this Simple Result Criteria. This will be ignored for all operations other than search, and it will be ignored for search operations if the \&quot;search-reference-criteria\&quot; property has a value of \&quot;any\&quot;.
   * @return searchReferenceReturnedCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the target number of references returned for use when determining whether a search operation should be included in this Simple Result Criteria. This will be ignored for all operations other than search, and it will be ignored for search operations if the \"search-reference-criteria\" property has a value of \"any\".")

  public Integer getSearchReferenceReturnedCount() {
    return searchReferenceReturnedCount;
  }


  public void setSearchReferenceReturnedCount(Integer searchReferenceReturnedCount) {
    
    
    
    this.searchReferenceReturnedCount = searchReferenceReturnedCount;
  }


  public AddSimpleResultCriteriaRequest searchIndexedCriteria(EnumresultCriteriaSearchIndexedCriteriaProp searchIndexedCriteria) {
    
    
    
    
    this.searchIndexedCriteria = searchIndexedCriteria;
    return this;
  }

   /**
   * Get searchIndexedCriteria
   * @return searchIndexedCriteria
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EnumresultCriteriaSearchIndexedCriteriaProp getSearchIndexedCriteria() {
    return searchIndexedCriteria;
  }


  public void setSearchIndexedCriteria(EnumresultCriteriaSearchIndexedCriteriaProp searchIndexedCriteria) {
    
    
    
    this.searchIndexedCriteria = searchIndexedCriteria;
  }


  public AddSimpleResultCriteriaRequest includedAuthzUserBaseDN(List<String> includedAuthzUserBaseDN) {
    
    
    
    
    this.includedAuthzUserBaseDN = includedAuthzUserBaseDN;
    return this;
  }

  public AddSimpleResultCriteriaRequest addIncludedAuthzUserBaseDNItem(String includedAuthzUserBaseDNItem) {
    if (this.includedAuthzUserBaseDN == null) {
      this.includedAuthzUserBaseDN = new ArrayList<>();
    }
    this.includedAuthzUserBaseDN.add(includedAuthzUserBaseDNItem);
    return this;
  }

   /**
   * Specifies a base DN below which authorization user entries may exist for operations included in this Simple Result Criteria. The authorization user could be the currently authenticated user on the connection (the user that performed the Bind operation), or different if proxied authorization was used to request that the operation be performed under the authorization of another user (as is the case for operations that come through a Directory Proxy Server). This property will be ignored for operations where no authentication or authorization has been performed.
   * @return includedAuthzUserBaseDN
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies a base DN below which authorization user entries may exist for operations included in this Simple Result Criteria. The authorization user could be the currently authenticated user on the connection (the user that performed the Bind operation), or different if proxied authorization was used to request that the operation be performed under the authorization of another user (as is the case for operations that come through a Directory Proxy Server). This property will be ignored for operations where no authentication or authorization has been performed.")

  public List<String> getIncludedAuthzUserBaseDN() {
    return includedAuthzUserBaseDN;
  }


  public void setIncludedAuthzUserBaseDN(List<String> includedAuthzUserBaseDN) {
    
    
    
    this.includedAuthzUserBaseDN = includedAuthzUserBaseDN;
  }


  public AddSimpleResultCriteriaRequest excludedAuthzUserBaseDN(List<String> excludedAuthzUserBaseDN) {
    
    
    
    
    this.excludedAuthzUserBaseDN = excludedAuthzUserBaseDN;
    return this;
  }

  public AddSimpleResultCriteriaRequest addExcludedAuthzUserBaseDNItem(String excludedAuthzUserBaseDNItem) {
    if (this.excludedAuthzUserBaseDN == null) {
      this.excludedAuthzUserBaseDN = new ArrayList<>();
    }
    this.excludedAuthzUserBaseDN.add(excludedAuthzUserBaseDNItem);
    return this;
  }

   /**
   * Specifies a base DN below which authorization user entries may exist for operations excluded from this Simple Result Criteria. The authorization user could be the currently authenticated user on the connection (the user that performed the Bind operation), or different if proxied authorization was used to request that the operation be performed under the authorization of another user (as is the case for operations that come through a Directory Proxy Server). This property will be ignored for operations where no authentication or authorization has been performed.
   * @return excludedAuthzUserBaseDN
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies a base DN below which authorization user entries may exist for operations excluded from this Simple Result Criteria. The authorization user could be the currently authenticated user on the connection (the user that performed the Bind operation), or different if proxied authorization was used to request that the operation be performed under the authorization of another user (as is the case for operations that come through a Directory Proxy Server). This property will be ignored for operations where no authentication or authorization has been performed.")

  public List<String> getExcludedAuthzUserBaseDN() {
    return excludedAuthzUserBaseDN;
  }


  public void setExcludedAuthzUserBaseDN(List<String> excludedAuthzUserBaseDN) {
    
    
    
    this.excludedAuthzUserBaseDN = excludedAuthzUserBaseDN;
  }


  public AddSimpleResultCriteriaRequest allIncludedAuthzUserGroupDN(List<String> allIncludedAuthzUserGroupDN) {
    
    
    
    
    this.allIncludedAuthzUserGroupDN = allIncludedAuthzUserGroupDN;
    return this;
  }

  public AddSimpleResultCriteriaRequest addAllIncludedAuthzUserGroupDNItem(String allIncludedAuthzUserGroupDNItem) {
    if (this.allIncludedAuthzUserGroupDN == null) {
      this.allIncludedAuthzUserGroupDN = new ArrayList<>();
    }
    this.allIncludedAuthzUserGroupDN.add(allIncludedAuthzUserGroupDNItem);
    return this;
  }

   /**
   * Specifies the DN of a group in which authorization users must exist for operations included in this Simple Result Criteria. If any group DNs are provided, then the authorization user must be a member of all of those groups. The authorization user could be the currently authenticated user on the connection (the user that performed the Bind operation), or different if proxied authorization was used to request that the operation be performed under the authorization of another user (as is the case for operations that come through a Directory Proxy Server). This property will be ignored for operations where no authentication or authorization has been performed.
   * @return allIncludedAuthzUserGroupDN
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the DN of a group in which authorization users must exist for operations included in this Simple Result Criteria. If any group DNs are provided, then the authorization user must be a member of all of those groups. The authorization user could be the currently authenticated user on the connection (the user that performed the Bind operation), or different if proxied authorization was used to request that the operation be performed under the authorization of another user (as is the case for operations that come through a Directory Proxy Server). This property will be ignored for operations where no authentication or authorization has been performed.")

  public List<String> getAllIncludedAuthzUserGroupDN() {
    return allIncludedAuthzUserGroupDN;
  }


  public void setAllIncludedAuthzUserGroupDN(List<String> allIncludedAuthzUserGroupDN) {
    
    
    
    this.allIncludedAuthzUserGroupDN = allIncludedAuthzUserGroupDN;
  }


  public AddSimpleResultCriteriaRequest anyIncludedAuthzUserGroupDN(List<String> anyIncludedAuthzUserGroupDN) {
    
    
    
    
    this.anyIncludedAuthzUserGroupDN = anyIncludedAuthzUserGroupDN;
    return this;
  }

  public AddSimpleResultCriteriaRequest addAnyIncludedAuthzUserGroupDNItem(String anyIncludedAuthzUserGroupDNItem) {
    if (this.anyIncludedAuthzUserGroupDN == null) {
      this.anyIncludedAuthzUserGroupDN = new ArrayList<>();
    }
    this.anyIncludedAuthzUserGroupDN.add(anyIncludedAuthzUserGroupDNItem);
    return this;
  }

   /**
   * Specifies the DN of a group in which authorization users may exist for operations included in this Simple Result Criteria. If any group DNs are provided, then the authorization user must be a member of at least one of those groups. The authorization user could be the currently authenticated user on the connection (the user that performed the Bind operation), or different if proxied authorization was used to request that the operation be performed under the authorization of another user (as is the case for operations that come through a Directory Proxy Server). This property will be ignored for operations where no authentication or authorization has been performed.
   * @return anyIncludedAuthzUserGroupDN
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the DN of a group in which authorization users may exist for operations included in this Simple Result Criteria. If any group DNs are provided, then the authorization user must be a member of at least one of those groups. The authorization user could be the currently authenticated user on the connection (the user that performed the Bind operation), or different if proxied authorization was used to request that the operation be performed under the authorization of another user (as is the case for operations that come through a Directory Proxy Server). This property will be ignored for operations where no authentication or authorization has been performed.")

  public List<String> getAnyIncludedAuthzUserGroupDN() {
    return anyIncludedAuthzUserGroupDN;
  }


  public void setAnyIncludedAuthzUserGroupDN(List<String> anyIncludedAuthzUserGroupDN) {
    
    
    
    this.anyIncludedAuthzUserGroupDN = anyIncludedAuthzUserGroupDN;
  }


  public AddSimpleResultCriteriaRequest notAllIncludedAuthzUserGroupDN(List<String> notAllIncludedAuthzUserGroupDN) {
    
    
    
    
    this.notAllIncludedAuthzUserGroupDN = notAllIncludedAuthzUserGroupDN;
    return this;
  }

  public AddSimpleResultCriteriaRequest addNotAllIncludedAuthzUserGroupDNItem(String notAllIncludedAuthzUserGroupDNItem) {
    if (this.notAllIncludedAuthzUserGroupDN == null) {
      this.notAllIncludedAuthzUserGroupDN = new ArrayList<>();
    }
    this.notAllIncludedAuthzUserGroupDN.add(notAllIncludedAuthzUserGroupDNItem);
    return this;
  }

   /**
   * Specifies the DN of a group in which authorization users should not exist for operations included in this Simple Result Criteria. If any group DNs are provided, then the authorization user must not be a member of at least one of those groups (that is, the user may be a member of zero or more of those groups, but not of all of them). The authorization user could be the currently authenticated user on the connection (the user that performed the Bind operation), or different if proxied authorization was used to request that the operation be performed under the authorization of another user (as is the case for operations that come through a Directory Proxy Server). This property will be ignored for operations where no authentication or authorization has been performed.
   * @return notAllIncludedAuthzUserGroupDN
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the DN of a group in which authorization users should not exist for operations included in this Simple Result Criteria. If any group DNs are provided, then the authorization user must not be a member of at least one of those groups (that is, the user may be a member of zero or more of those groups, but not of all of them). The authorization user could be the currently authenticated user on the connection (the user that performed the Bind operation), or different if proxied authorization was used to request that the operation be performed under the authorization of another user (as is the case for operations that come through a Directory Proxy Server). This property will be ignored for operations where no authentication or authorization has been performed.")

  public List<String> getNotAllIncludedAuthzUserGroupDN() {
    return notAllIncludedAuthzUserGroupDN;
  }


  public void setNotAllIncludedAuthzUserGroupDN(List<String> notAllIncludedAuthzUserGroupDN) {
    
    
    
    this.notAllIncludedAuthzUserGroupDN = notAllIncludedAuthzUserGroupDN;
  }


  public AddSimpleResultCriteriaRequest noneIncludedAuthzUserGroupDN(List<String> noneIncludedAuthzUserGroupDN) {
    
    
    
    
    this.noneIncludedAuthzUserGroupDN = noneIncludedAuthzUserGroupDN;
    return this;
  }

  public AddSimpleResultCriteriaRequest addNoneIncludedAuthzUserGroupDNItem(String noneIncludedAuthzUserGroupDNItem) {
    if (this.noneIncludedAuthzUserGroupDN == null) {
      this.noneIncludedAuthzUserGroupDN = new ArrayList<>();
    }
    this.noneIncludedAuthzUserGroupDN.add(noneIncludedAuthzUserGroupDNItem);
    return this;
  }

   /**
   * Specifies the DN of a group in which authorization users must not exist for operations included in this Simple Result Criteria. If any group DNs are provided, then the authorization user must not be a member any of those groups. The authorization user could be the currently authenticated user on the connection (the user that performed the Bind operation), or different if proxied authorization was used to request that the operation be performed under the authorization of another user (as is the case for operations that come through a Directory Proxy Server). This property will be ignored for operations where no authentication or authorization has been performed.
   * @return noneIncludedAuthzUserGroupDN
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the DN of a group in which authorization users must not exist for operations included in this Simple Result Criteria. If any group DNs are provided, then the authorization user must not be a member any of those groups. The authorization user could be the currently authenticated user on the connection (the user that performed the Bind operation), or different if proxied authorization was used to request that the operation be performed under the authorization of another user (as is the case for operations that come through a Directory Proxy Server). This property will be ignored for operations where no authentication or authorization has been performed.")

  public List<String> getNoneIncludedAuthzUserGroupDN() {
    return noneIncludedAuthzUserGroupDN;
  }


  public void setNoneIncludedAuthzUserGroupDN(List<String> noneIncludedAuthzUserGroupDN) {
    
    
    
    this.noneIncludedAuthzUserGroupDN = noneIncludedAuthzUserGroupDN;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the AddSimpleResultCriteriaRequest instance itself
   */
  public AddSimpleResultCriteriaRequest putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AddSimpleResultCriteriaRequest addSimpleResultCriteriaRequest = (AddSimpleResultCriteriaRequest) o;
    return Objects.equals(this.criteriaName, addSimpleResultCriteriaRequest.criteriaName) &&
        Objects.equals(this.description, addSimpleResultCriteriaRequest.description) &&
        Objects.equals(this.schemas, addSimpleResultCriteriaRequest.schemas) &&
        Objects.equals(this.requestCriteria, addSimpleResultCriteriaRequest.requestCriteria) &&
        Objects.equals(this.resultCodeCriteria, addSimpleResultCriteriaRequest.resultCodeCriteria) &&
        Objects.equals(this.resultCodeValue, addSimpleResultCriteriaRequest.resultCodeValue) &&
        Objects.equals(this.processingTimeCriteria, addSimpleResultCriteriaRequest.processingTimeCriteria) &&
        Objects.equals(this.processingTimeValue, addSimpleResultCriteriaRequest.processingTimeValue) &&
        Objects.equals(this.queueTimeCriteria, addSimpleResultCriteriaRequest.queueTimeCriteria) &&
        Objects.equals(this.queueTimeValue, addSimpleResultCriteriaRequest.queueTimeValue) &&
        Objects.equals(this.referralReturned, addSimpleResultCriteriaRequest.referralReturned) &&
        Objects.equals(this.allIncludedResponseControl, addSimpleResultCriteriaRequest.allIncludedResponseControl) &&
        Objects.equals(this.anyIncludedResponseControl, addSimpleResultCriteriaRequest.anyIncludedResponseControl) &&
        Objects.equals(this.notAllIncludedResponseControl, addSimpleResultCriteriaRequest.notAllIncludedResponseControl) &&
        Objects.equals(this.noneIncludedResponseControl, addSimpleResultCriteriaRequest.noneIncludedResponseControl) &&
        Objects.equals(this.usedAlternateAuthzid, addSimpleResultCriteriaRequest.usedAlternateAuthzid) &&
        Objects.equals(this.usedAnyPrivilege, addSimpleResultCriteriaRequest.usedAnyPrivilege) &&
        Objects.equals(this.usedPrivilege, addSimpleResultCriteriaRequest.usedPrivilege) &&
        Objects.equals(this.missingAnyPrivilege, addSimpleResultCriteriaRequest.missingAnyPrivilege) &&
        Objects.equals(this.missingPrivilege, addSimpleResultCriteriaRequest.missingPrivilege) &&
        Objects.equals(this.retiredPasswordUsedForBind, addSimpleResultCriteriaRequest.retiredPasswordUsedForBind) &&
        Objects.equals(this.searchEntryReturnedCriteria, addSimpleResultCriteriaRequest.searchEntryReturnedCriteria) &&
        Objects.equals(this.searchEntryReturnedCount, addSimpleResultCriteriaRequest.searchEntryReturnedCount) &&
        Objects.equals(this.searchReferenceReturnedCriteria, addSimpleResultCriteriaRequest.searchReferenceReturnedCriteria) &&
        Objects.equals(this.searchReferenceReturnedCount, addSimpleResultCriteriaRequest.searchReferenceReturnedCount) &&
        Objects.equals(this.searchIndexedCriteria, addSimpleResultCriteriaRequest.searchIndexedCriteria) &&
        Objects.equals(this.includedAuthzUserBaseDN, addSimpleResultCriteriaRequest.includedAuthzUserBaseDN) &&
        Objects.equals(this.excludedAuthzUserBaseDN, addSimpleResultCriteriaRequest.excludedAuthzUserBaseDN) &&
        Objects.equals(this.allIncludedAuthzUserGroupDN, addSimpleResultCriteriaRequest.allIncludedAuthzUserGroupDN) &&
        Objects.equals(this.anyIncludedAuthzUserGroupDN, addSimpleResultCriteriaRequest.anyIncludedAuthzUserGroupDN) &&
        Objects.equals(this.notAllIncludedAuthzUserGroupDN, addSimpleResultCriteriaRequest.notAllIncludedAuthzUserGroupDN) &&
        Objects.equals(this.noneIncludedAuthzUserGroupDN, addSimpleResultCriteriaRequest.noneIncludedAuthzUserGroupDN)&&
        Objects.equals(this.additionalProperties, addSimpleResultCriteriaRequest.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(criteriaName, description, schemas, requestCriteria, resultCodeCriteria, resultCodeValue, processingTimeCriteria, processingTimeValue, queueTimeCriteria, queueTimeValue, referralReturned, allIncludedResponseControl, anyIncludedResponseControl, notAllIncludedResponseControl, noneIncludedResponseControl, usedAlternateAuthzid, usedAnyPrivilege, usedPrivilege, missingAnyPrivilege, missingPrivilege, retiredPasswordUsedForBind, searchEntryReturnedCriteria, searchEntryReturnedCount, searchReferenceReturnedCriteria, searchReferenceReturnedCount, searchIndexedCriteria, includedAuthzUserBaseDN, excludedAuthzUserBaseDN, allIncludedAuthzUserGroupDN, anyIncludedAuthzUserGroupDN, notAllIncludedAuthzUserGroupDN, noneIncludedAuthzUserGroupDN, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AddSimpleResultCriteriaRequest {\n");
    sb.append("    criteriaName: ").append(toIndentedString(criteriaName)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    schemas: ").append(toIndentedString(schemas)).append("\n");
    sb.append("    requestCriteria: ").append(toIndentedString(requestCriteria)).append("\n");
    sb.append("    resultCodeCriteria: ").append(toIndentedString(resultCodeCriteria)).append("\n");
    sb.append("    resultCodeValue: ").append(toIndentedString(resultCodeValue)).append("\n");
    sb.append("    processingTimeCriteria: ").append(toIndentedString(processingTimeCriteria)).append("\n");
    sb.append("    processingTimeValue: ").append(toIndentedString(processingTimeValue)).append("\n");
    sb.append("    queueTimeCriteria: ").append(toIndentedString(queueTimeCriteria)).append("\n");
    sb.append("    queueTimeValue: ").append(toIndentedString(queueTimeValue)).append("\n");
    sb.append("    referralReturned: ").append(toIndentedString(referralReturned)).append("\n");
    sb.append("    allIncludedResponseControl: ").append(toIndentedString(allIncludedResponseControl)).append("\n");
    sb.append("    anyIncludedResponseControl: ").append(toIndentedString(anyIncludedResponseControl)).append("\n");
    sb.append("    notAllIncludedResponseControl: ").append(toIndentedString(notAllIncludedResponseControl)).append("\n");
    sb.append("    noneIncludedResponseControl: ").append(toIndentedString(noneIncludedResponseControl)).append("\n");
    sb.append("    usedAlternateAuthzid: ").append(toIndentedString(usedAlternateAuthzid)).append("\n");
    sb.append("    usedAnyPrivilege: ").append(toIndentedString(usedAnyPrivilege)).append("\n");
    sb.append("    usedPrivilege: ").append(toIndentedString(usedPrivilege)).append("\n");
    sb.append("    missingAnyPrivilege: ").append(toIndentedString(missingAnyPrivilege)).append("\n");
    sb.append("    missingPrivilege: ").append(toIndentedString(missingPrivilege)).append("\n");
    sb.append("    retiredPasswordUsedForBind: ").append(toIndentedString(retiredPasswordUsedForBind)).append("\n");
    sb.append("    searchEntryReturnedCriteria: ").append(toIndentedString(searchEntryReturnedCriteria)).append("\n");
    sb.append("    searchEntryReturnedCount: ").append(toIndentedString(searchEntryReturnedCount)).append("\n");
    sb.append("    searchReferenceReturnedCriteria: ").append(toIndentedString(searchReferenceReturnedCriteria)).append("\n");
    sb.append("    searchReferenceReturnedCount: ").append(toIndentedString(searchReferenceReturnedCount)).append("\n");
    sb.append("    searchIndexedCriteria: ").append(toIndentedString(searchIndexedCriteria)).append("\n");
    sb.append("    includedAuthzUserBaseDN: ").append(toIndentedString(includedAuthzUserBaseDN)).append("\n");
    sb.append("    excludedAuthzUserBaseDN: ").append(toIndentedString(excludedAuthzUserBaseDN)).append("\n");
    sb.append("    allIncludedAuthzUserGroupDN: ").append(toIndentedString(allIncludedAuthzUserGroupDN)).append("\n");
    sb.append("    anyIncludedAuthzUserGroupDN: ").append(toIndentedString(anyIncludedAuthzUserGroupDN)).append("\n");
    sb.append("    notAllIncludedAuthzUserGroupDN: ").append(toIndentedString(notAllIncludedAuthzUserGroupDN)).append("\n");
    sb.append("    noneIncludedAuthzUserGroupDN: ").append(toIndentedString(noneIncludedAuthzUserGroupDN)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("criteriaName");
    openapiFields.add("description");
    openapiFields.add("schemas");
    openapiFields.add("requestCriteria");
    openapiFields.add("resultCodeCriteria");
    openapiFields.add("resultCodeValue");
    openapiFields.add("processingTimeCriteria");
    openapiFields.add("processingTimeValue");
    openapiFields.add("queueTimeCriteria");
    openapiFields.add("queueTimeValue");
    openapiFields.add("referralReturned");
    openapiFields.add("allIncludedResponseControl");
    openapiFields.add("anyIncludedResponseControl");
    openapiFields.add("notAllIncludedResponseControl");
    openapiFields.add("noneIncludedResponseControl");
    openapiFields.add("usedAlternateAuthzid");
    openapiFields.add("usedAnyPrivilege");
    openapiFields.add("usedPrivilege");
    openapiFields.add("missingAnyPrivilege");
    openapiFields.add("missingPrivilege");
    openapiFields.add("retiredPasswordUsedForBind");
    openapiFields.add("searchEntryReturnedCriteria");
    openapiFields.add("searchEntryReturnedCount");
    openapiFields.add("searchReferenceReturnedCriteria");
    openapiFields.add("searchReferenceReturnedCount");
    openapiFields.add("searchIndexedCriteria");
    openapiFields.add("includedAuthzUserBaseDN");
    openapiFields.add("excludedAuthzUserBaseDN");
    openapiFields.add("allIncludedAuthzUserGroupDN");
    openapiFields.add("anyIncludedAuthzUserGroupDN");
    openapiFields.add("notAllIncludedAuthzUserGroupDN");
    openapiFields.add("noneIncludedAuthzUserGroupDN");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("criteriaName");
    openapiRequiredFields.add("schemas");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to AddSimpleResultCriteriaRequest
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!AddSimpleResultCriteriaRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AddSimpleResultCriteriaRequest is not found in the empty JSON string", AddSimpleResultCriteriaRequest.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : AddSimpleResultCriteriaRequest.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("criteriaName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `criteriaName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("criteriaName").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("schemas") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("schemas").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `schemas` to be an array in the JSON string but got `%s`", jsonObj.get("schemas").toString()));
      }
      if ((jsonObj.get("requestCriteria") != null && !jsonObj.get("requestCriteria").isJsonNull()) && !jsonObj.get("requestCriteria").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `requestCriteria` to be a primitive type in the JSON string but got `%s`", jsonObj.get("requestCriteria").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("resultCodeValue") != null && !jsonObj.get("resultCodeValue").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `resultCodeValue` to be an array in the JSON string but got `%s`", jsonObj.get("resultCodeValue").toString()));
      }
      if ((jsonObj.get("processingTimeValue") != null && !jsonObj.get("processingTimeValue").isJsonNull()) && !jsonObj.get("processingTimeValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `processingTimeValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("processingTimeValue").toString()));
      }
      if ((jsonObj.get("queueTimeValue") != null && !jsonObj.get("queueTimeValue").isJsonNull()) && !jsonObj.get("queueTimeValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `queueTimeValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("queueTimeValue").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("allIncludedResponseControl") != null && !jsonObj.get("allIncludedResponseControl").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `allIncludedResponseControl` to be an array in the JSON string but got `%s`", jsonObj.get("allIncludedResponseControl").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("anyIncludedResponseControl") != null && !jsonObj.get("anyIncludedResponseControl").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `anyIncludedResponseControl` to be an array in the JSON string but got `%s`", jsonObj.get("anyIncludedResponseControl").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("notAllIncludedResponseControl") != null && !jsonObj.get("notAllIncludedResponseControl").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `notAllIncludedResponseControl` to be an array in the JSON string but got `%s`", jsonObj.get("notAllIncludedResponseControl").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("noneIncludedResponseControl") != null && !jsonObj.get("noneIncludedResponseControl").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `noneIncludedResponseControl` to be an array in the JSON string but got `%s`", jsonObj.get("noneIncludedResponseControl").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("usedPrivilege") != null && !jsonObj.get("usedPrivilege").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `usedPrivilege` to be an array in the JSON string but got `%s`", jsonObj.get("usedPrivilege").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("missingPrivilege") != null && !jsonObj.get("missingPrivilege").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `missingPrivilege` to be an array in the JSON string but got `%s`", jsonObj.get("missingPrivilege").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("includedAuthzUserBaseDN") != null && !jsonObj.get("includedAuthzUserBaseDN").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `includedAuthzUserBaseDN` to be an array in the JSON string but got `%s`", jsonObj.get("includedAuthzUserBaseDN").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("excludedAuthzUserBaseDN") != null && !jsonObj.get("excludedAuthzUserBaseDN").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `excludedAuthzUserBaseDN` to be an array in the JSON string but got `%s`", jsonObj.get("excludedAuthzUserBaseDN").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("allIncludedAuthzUserGroupDN") != null && !jsonObj.get("allIncludedAuthzUserGroupDN").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `allIncludedAuthzUserGroupDN` to be an array in the JSON string but got `%s`", jsonObj.get("allIncludedAuthzUserGroupDN").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("anyIncludedAuthzUserGroupDN") != null && !jsonObj.get("anyIncludedAuthzUserGroupDN").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `anyIncludedAuthzUserGroupDN` to be an array in the JSON string but got `%s`", jsonObj.get("anyIncludedAuthzUserGroupDN").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("notAllIncludedAuthzUserGroupDN") != null && !jsonObj.get("notAllIncludedAuthzUserGroupDN").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `notAllIncludedAuthzUserGroupDN` to be an array in the JSON string but got `%s`", jsonObj.get("notAllIncludedAuthzUserGroupDN").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("noneIncludedAuthzUserGroupDN") != null && !jsonObj.get("noneIncludedAuthzUserGroupDN").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `noneIncludedAuthzUserGroupDN` to be an array in the JSON string but got `%s`", jsonObj.get("noneIncludedAuthzUserGroupDN").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AddSimpleResultCriteriaRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AddSimpleResultCriteriaRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AddSimpleResultCriteriaRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AddSimpleResultCriteriaRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<AddSimpleResultCriteriaRequest>() {
           @Override
           public void write(JsonWriter out, AddSimpleResultCriteriaRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public AddSimpleResultCriteriaRequest read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             AddSimpleResultCriteriaRequest instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AddSimpleResultCriteriaRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AddSimpleResultCriteriaRequest
  * @throws IOException if the JSON string is invalid with respect to AddSimpleResultCriteriaRequest
  */
  public static AddSimpleResultCriteriaRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AddSimpleResultCriteriaRequest.class);
  }

 /**
  * Convert an instance of AddSimpleResultCriteriaRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

