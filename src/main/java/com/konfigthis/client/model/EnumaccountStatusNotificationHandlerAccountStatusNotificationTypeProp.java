/*
 * PingData Config - OpenAPI 3.0
 * This is the PingData Configuration API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * The types of account status notifications that should result in administrative alerts.
 */
@JsonAdapter(EnumaccountStatusNotificationHandlerAccountStatusNotificationTypeProp.Adapter.class)public enum EnumaccountStatusNotificationHandlerAccountStatusNotificationTypeProp {
  
  ACCOUNT_TEMPORARILY_LOCKED("account-temporarily-locked"),
  
  ACCOUNT_PERMANENTLY_LOCKED("account-permanently-locked"),
  
  ACCOUNT_UNLOCKED("account-unlocked"),
  
  ACCOUNT_IDLE_LOCKED("account-idle-locked"),
  
  ACCOUNT_RESET_LOCKED("account-reset-locked"),
  
  ACCOUNT_DISABLED("account-disabled"),
  
  ACCOUNT_ENABLED("account-enabled"),
  
  ACCOUNT_NOT_YET_ACTIVE("account-not-yet-active"),
  
  ACCOUNT_EXPIRED("account-expired"),
  
  PASSWORD_EXPIRED("password-expired"),
  
  PASSWORD_EXPIRING("password-expiring"),
  
  PASSWORD_RESET("password-reset"),
  
  PASSWORD_CHANGED("password-changed"),
  
  ACCOUNT_AUTHENTICATED("account-authenticated"),
  
  ACCOUNT_CREATED("account-created"),
  
  ACCOUNT_DELETED("account-deleted"),
  
  ACCOUNT_UPDATED("account-updated"),
  
  BIND_PASSWORD_FAILED_VALIDATION("bind-password-failed-validation"),
  
  MUST_CHANGE_PASSWORD("must-change-password");

  private String value;

  EnumaccountStatusNotificationHandlerAccountStatusNotificationTypeProp(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static EnumaccountStatusNotificationHandlerAccountStatusNotificationTypeProp fromValue(String value) {
    for (EnumaccountStatusNotificationHandlerAccountStatusNotificationTypeProp b : EnumaccountStatusNotificationHandlerAccountStatusNotificationTypeProp.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<EnumaccountStatusNotificationHandlerAccountStatusNotificationTypeProp> {
    @Override
    public void write(final JsonWriter jsonWriter, final EnumaccountStatusNotificationHandlerAccountStatusNotificationTypeProp enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public EnumaccountStatusNotificationHandlerAccountStatusNotificationTypeProp read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return EnumaccountStatusNotificationHandlerAccountStatusNotificationTypeProp.fromValue(value);
    }
  }
}

