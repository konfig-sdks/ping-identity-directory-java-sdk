/*
 * PingData Config - OpenAPI 3.0
 * This is the PingData Configuration API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * The default behavior that the server should exhibit for fields for which no explicit behavior is defined. If no default behavior is defined, the server will fall back to using the default behavior configured for the syntax used for each log field.
 */
@JsonAdapter(EnumlogFieldBehaviorDefaultBehaviorProp.Adapter.class)public enum EnumlogFieldBehaviorDefaultBehaviorProp {
  
  PRESERVE("preserve"),
  
  OMIT("omit"),
  
  REDACT_ENTIRE_VALUE("redact-entire-value"),
  
  REDACT_VALUE_COMPONENTS("redact-value-components"),
  
  TOKENIZE_ENTIRE_VALUE("tokenize-entire-value"),
  
  TOKENIZE_VALUE_COMPONENTS("tokenize-value-components");

  private String value;

  EnumlogFieldBehaviorDefaultBehaviorProp(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static EnumlogFieldBehaviorDefaultBehaviorProp fromValue(String value) {
    for (EnumlogFieldBehaviorDefaultBehaviorProp b : EnumlogFieldBehaviorDefaultBehaviorProp.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<EnumlogFieldBehaviorDefaultBehaviorProp> {
    @Override
    public void write(final JsonWriter jsonWriter, final EnumlogFieldBehaviorDefaultBehaviorProp enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public EnumlogFieldBehaviorDefaultBehaviorProp read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return EnumlogFieldBehaviorDefaultBehaviorProp.fromValue(value);
    }
  }
}

