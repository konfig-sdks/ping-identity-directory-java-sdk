/*
 * PingData Config - OpenAPI 3.0
 * This is the PingData Configuration API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.EnumlogFieldBehaviorDefaultBehaviorProp;
import com.konfigthis.client.model.EnumlogFieldBehaviorTextAccessOmitFieldProp;
import com.konfigthis.client.model.EnumlogFieldBehaviorTextAccessPreserveFieldProp;
import com.konfigthis.client.model.EnumlogFieldBehaviorTextAccessRedactEntireValueFieldProp;
import com.konfigthis.client.model.EnumlogFieldBehaviorTextAccessRedactValueComponentsFieldProp;
import com.konfigthis.client.model.EnumlogFieldBehaviorTextAccessTokenizeEntireValueFieldProp;
import com.konfigthis.client.model.EnumlogFieldBehaviorTextAccessTokenizeValueComponentsFieldProp;
import com.konfigthis.client.model.EnumtextAccessLogFieldBehaviorSchemaUrn;
import com.konfigthis.client.model.MetaMeta;
import com.konfigthis.client.model.MetaUrnPingidentitySchemasConfigurationMessages20;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * TextAccessLogFieldBehaviorResponse
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class TextAccessLogFieldBehaviorResponse {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_SCHEMAS = "schemas";
  @SerializedName(SERIALIZED_NAME_SCHEMAS)
  private List<EnumtextAccessLogFieldBehaviorSchemaUrn> schemas = new ArrayList<>();

  public static final String SERIALIZED_NAME_PRESERVE_FIELD = "preserveField";
  @SerializedName(SERIALIZED_NAME_PRESERVE_FIELD)
  private List<EnumlogFieldBehaviorTextAccessPreserveFieldProp> preserveField = null;

  public static final String SERIALIZED_NAME_PRESERVE_FIELD_NAME = "preserveFieldName";
  @SerializedName(SERIALIZED_NAME_PRESERVE_FIELD_NAME)
  private List<String> preserveFieldName = null;

  public static final String SERIALIZED_NAME_OMIT_FIELD = "omitField";
  @SerializedName(SERIALIZED_NAME_OMIT_FIELD)
  private List<EnumlogFieldBehaviorTextAccessOmitFieldProp> omitField = null;

  public static final String SERIALIZED_NAME_OMIT_FIELD_NAME = "omitFieldName";
  @SerializedName(SERIALIZED_NAME_OMIT_FIELD_NAME)
  private List<String> omitFieldName = null;

  public static final String SERIALIZED_NAME_REDACT_ENTIRE_VALUE_FIELD = "redactEntireValueField";
  @SerializedName(SERIALIZED_NAME_REDACT_ENTIRE_VALUE_FIELD)
  private List<EnumlogFieldBehaviorTextAccessRedactEntireValueFieldProp> redactEntireValueField = null;

  public static final String SERIALIZED_NAME_REDACT_ENTIRE_VALUE_FIELD_NAME = "redactEntireValueFieldName";
  @SerializedName(SERIALIZED_NAME_REDACT_ENTIRE_VALUE_FIELD_NAME)
  private List<String> redactEntireValueFieldName = null;

  public static final String SERIALIZED_NAME_REDACT_VALUE_COMPONENTS_FIELD = "redactValueComponentsField";
  @SerializedName(SERIALIZED_NAME_REDACT_VALUE_COMPONENTS_FIELD)
  private List<EnumlogFieldBehaviorTextAccessRedactValueComponentsFieldProp> redactValueComponentsField = null;

  public static final String SERIALIZED_NAME_REDACT_VALUE_COMPONENTS_FIELD_NAME = "redactValueComponentsFieldName";
  @SerializedName(SERIALIZED_NAME_REDACT_VALUE_COMPONENTS_FIELD_NAME)
  private List<String> redactValueComponentsFieldName = null;

  public static final String SERIALIZED_NAME_TOKENIZE_ENTIRE_VALUE_FIELD = "tokenizeEntireValueField";
  @SerializedName(SERIALIZED_NAME_TOKENIZE_ENTIRE_VALUE_FIELD)
  private List<EnumlogFieldBehaviorTextAccessTokenizeEntireValueFieldProp> tokenizeEntireValueField = null;

  public static final String SERIALIZED_NAME_TOKENIZE_ENTIRE_VALUE_FIELD_NAME = "tokenizeEntireValueFieldName";
  @SerializedName(SERIALIZED_NAME_TOKENIZE_ENTIRE_VALUE_FIELD_NAME)
  private List<String> tokenizeEntireValueFieldName = null;

  public static final String SERIALIZED_NAME_TOKENIZE_VALUE_COMPONENTS_FIELD = "tokenizeValueComponentsField";
  @SerializedName(SERIALIZED_NAME_TOKENIZE_VALUE_COMPONENTS_FIELD)
  private List<EnumlogFieldBehaviorTextAccessTokenizeValueComponentsFieldProp> tokenizeValueComponentsField = null;

  public static final String SERIALIZED_NAME_TOKENIZE_VALUE_COMPONENTS_FIELD_NAME = "tokenizeValueComponentsFieldName";
  @SerializedName(SERIALIZED_NAME_TOKENIZE_VALUE_COMPONENTS_FIELD_NAME)
  private List<String> tokenizeValueComponentsFieldName = null;

  public static final String SERIALIZED_NAME_DEFAULT_BEHAVIOR = "defaultBehavior";
  @SerializedName(SERIALIZED_NAME_DEFAULT_BEHAVIOR)
  private EnumlogFieldBehaviorDefaultBehaviorProp defaultBehavior;

  public static final String SERIALIZED_NAME_META = "meta";
  @SerializedName(SERIALIZED_NAME_META)
  private MetaMeta meta;

  public static final String SERIALIZED_NAME_URN_COLON_PINGIDENTITY_COLON_SCHEMAS_COLON_CONFIGURATION_COLON_MESSAGES_COLON20 = "urn:pingidentity:schemas:configuration:messages:2.0";
  @SerializedName(SERIALIZED_NAME_URN_COLON_PINGIDENTITY_COLON_SCHEMAS_COLON_CONFIGURATION_COLON_MESSAGES_COLON20)
  private MetaUrnPingidentitySchemasConfigurationMessages20 urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20;

  public TextAccessLogFieldBehaviorResponse() {
  }

  public TextAccessLogFieldBehaviorResponse id(String id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * Name of the Log Field Behavior
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Name of the Log Field Behavior")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    
    
    
    this.id = id;
  }


  public TextAccessLogFieldBehaviorResponse description(String description) {
    
    
    
    
    this.description = description;
    return this;
  }

   /**
   * A description for this Log Field Behavior
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A description for this Log Field Behavior")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    
    
    
    this.description = description;
  }


  public TextAccessLogFieldBehaviorResponse schemas(List<EnumtextAccessLogFieldBehaviorSchemaUrn> schemas) {
    
    
    
    
    this.schemas = schemas;
    return this;
  }

  public TextAccessLogFieldBehaviorResponse addSchemasItem(EnumtextAccessLogFieldBehaviorSchemaUrn schemasItem) {
    this.schemas.add(schemasItem);
    return this;
  }

   /**
   * Get schemas
   * @return schemas
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<EnumtextAccessLogFieldBehaviorSchemaUrn> getSchemas() {
    return schemas;
  }


  public void setSchemas(List<EnumtextAccessLogFieldBehaviorSchemaUrn> schemas) {
    
    
    
    this.schemas = schemas;
  }


  public TextAccessLogFieldBehaviorResponse preserveField(List<EnumlogFieldBehaviorTextAccessPreserveFieldProp> preserveField) {
    
    
    
    
    this.preserveField = preserveField;
    return this;
  }

  public TextAccessLogFieldBehaviorResponse addPreserveFieldItem(EnumlogFieldBehaviorTextAccessPreserveFieldProp preserveFieldItem) {
    if (this.preserveField == null) {
      this.preserveField = new ArrayList<>();
    }
    this.preserveField.add(preserveFieldItem);
    return this;
  }

   /**
   * Get preserveField
   * @return preserveField
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<EnumlogFieldBehaviorTextAccessPreserveFieldProp> getPreserveField() {
    return preserveField;
  }


  public void setPreserveField(List<EnumlogFieldBehaviorTextAccessPreserveFieldProp> preserveField) {
    
    
    
    this.preserveField = preserveField;
  }


  public TextAccessLogFieldBehaviorResponse preserveFieldName(List<String> preserveFieldName) {
    
    
    
    
    this.preserveFieldName = preserveFieldName;
    return this;
  }

  public TextAccessLogFieldBehaviorResponse addPreserveFieldNameItem(String preserveFieldNameItem) {
    if (this.preserveFieldName == null) {
      this.preserveFieldName = new ArrayList<>();
    }
    this.preserveFieldName.add(preserveFieldNameItem);
    return this;
  }

   /**
   * The names of any custom fields whose values should be preserved. This should generally only be used for fields that are not available through the preserve-field property (for example, custom log fields defined in Server SDK extensions).
   * @return preserveFieldName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The names of any custom fields whose values should be preserved. This should generally only be used for fields that are not available through the preserve-field property (for example, custom log fields defined in Server SDK extensions).")

  public List<String> getPreserveFieldName() {
    return preserveFieldName;
  }


  public void setPreserveFieldName(List<String> preserveFieldName) {
    
    
    
    this.preserveFieldName = preserveFieldName;
  }


  public TextAccessLogFieldBehaviorResponse omitField(List<EnumlogFieldBehaviorTextAccessOmitFieldProp> omitField) {
    
    
    
    
    this.omitField = omitField;
    return this;
  }

  public TextAccessLogFieldBehaviorResponse addOmitFieldItem(EnumlogFieldBehaviorTextAccessOmitFieldProp omitFieldItem) {
    if (this.omitField == null) {
      this.omitField = new ArrayList<>();
    }
    this.omitField.add(omitFieldItem);
    return this;
  }

   /**
   * Get omitField
   * @return omitField
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<EnumlogFieldBehaviorTextAccessOmitFieldProp> getOmitField() {
    return omitField;
  }


  public void setOmitField(List<EnumlogFieldBehaviorTextAccessOmitFieldProp> omitField) {
    
    
    
    this.omitField = omitField;
  }


  public TextAccessLogFieldBehaviorResponse omitFieldName(List<String> omitFieldName) {
    
    
    
    
    this.omitFieldName = omitFieldName;
    return this;
  }

  public TextAccessLogFieldBehaviorResponse addOmitFieldNameItem(String omitFieldNameItem) {
    if (this.omitFieldName == null) {
      this.omitFieldName = new ArrayList<>();
    }
    this.omitFieldName.add(omitFieldNameItem);
    return this;
  }

   /**
   * The names of any custom fields that should be omitted from log messages. This should generally only be used for fields that are not available through the omit-field property (for example, custom log fields defined in Server SDK extensions).
   * @return omitFieldName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The names of any custom fields that should be omitted from log messages. This should generally only be used for fields that are not available through the omit-field property (for example, custom log fields defined in Server SDK extensions).")

  public List<String> getOmitFieldName() {
    return omitFieldName;
  }


  public void setOmitFieldName(List<String> omitFieldName) {
    
    
    
    this.omitFieldName = omitFieldName;
  }


  public TextAccessLogFieldBehaviorResponse redactEntireValueField(List<EnumlogFieldBehaviorTextAccessRedactEntireValueFieldProp> redactEntireValueField) {
    
    
    
    
    this.redactEntireValueField = redactEntireValueField;
    return this;
  }

  public TextAccessLogFieldBehaviorResponse addRedactEntireValueFieldItem(EnumlogFieldBehaviorTextAccessRedactEntireValueFieldProp redactEntireValueFieldItem) {
    if (this.redactEntireValueField == null) {
      this.redactEntireValueField = new ArrayList<>();
    }
    this.redactEntireValueField.add(redactEntireValueFieldItem);
    return this;
  }

   /**
   * Get redactEntireValueField
   * @return redactEntireValueField
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<EnumlogFieldBehaviorTextAccessRedactEntireValueFieldProp> getRedactEntireValueField() {
    return redactEntireValueField;
  }


  public void setRedactEntireValueField(List<EnumlogFieldBehaviorTextAccessRedactEntireValueFieldProp> redactEntireValueField) {
    
    
    
    this.redactEntireValueField = redactEntireValueField;
  }


  public TextAccessLogFieldBehaviorResponse redactEntireValueFieldName(List<String> redactEntireValueFieldName) {
    
    
    
    
    this.redactEntireValueFieldName = redactEntireValueFieldName;
    return this;
  }

  public TextAccessLogFieldBehaviorResponse addRedactEntireValueFieldNameItem(String redactEntireValueFieldNameItem) {
    if (this.redactEntireValueFieldName == null) {
      this.redactEntireValueFieldName = new ArrayList<>();
    }
    this.redactEntireValueFieldName.add(redactEntireValueFieldNameItem);
    return this;
  }

   /**
   * The names of any custom fields whose values should be completely redacted. This should generally only be used for fields that are not available through the redact-entire-value-field property (for example, custom log fields defined in Server SDK extensions).
   * @return redactEntireValueFieldName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The names of any custom fields whose values should be completely redacted. This should generally only be used for fields that are not available through the redact-entire-value-field property (for example, custom log fields defined in Server SDK extensions).")

  public List<String> getRedactEntireValueFieldName() {
    return redactEntireValueFieldName;
  }


  public void setRedactEntireValueFieldName(List<String> redactEntireValueFieldName) {
    
    
    
    this.redactEntireValueFieldName = redactEntireValueFieldName;
  }


  public TextAccessLogFieldBehaviorResponse redactValueComponentsField(List<EnumlogFieldBehaviorTextAccessRedactValueComponentsFieldProp> redactValueComponentsField) {
    
    
    
    
    this.redactValueComponentsField = redactValueComponentsField;
    return this;
  }

  public TextAccessLogFieldBehaviorResponse addRedactValueComponentsFieldItem(EnumlogFieldBehaviorTextAccessRedactValueComponentsFieldProp redactValueComponentsFieldItem) {
    if (this.redactValueComponentsField == null) {
      this.redactValueComponentsField = new ArrayList<>();
    }
    this.redactValueComponentsField.add(redactValueComponentsFieldItem);
    return this;
  }

   /**
   * Get redactValueComponentsField
   * @return redactValueComponentsField
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<EnumlogFieldBehaviorTextAccessRedactValueComponentsFieldProp> getRedactValueComponentsField() {
    return redactValueComponentsField;
  }


  public void setRedactValueComponentsField(List<EnumlogFieldBehaviorTextAccessRedactValueComponentsFieldProp> redactValueComponentsField) {
    
    
    
    this.redactValueComponentsField = redactValueComponentsField;
  }


  public TextAccessLogFieldBehaviorResponse redactValueComponentsFieldName(List<String> redactValueComponentsFieldName) {
    
    
    
    
    this.redactValueComponentsFieldName = redactValueComponentsFieldName;
    return this;
  }

  public TextAccessLogFieldBehaviorResponse addRedactValueComponentsFieldNameItem(String redactValueComponentsFieldNameItem) {
    if (this.redactValueComponentsFieldName == null) {
      this.redactValueComponentsFieldName = new ArrayList<>();
    }
    this.redactValueComponentsFieldName.add(redactValueComponentsFieldNameItem);
    return this;
  }

   /**
   * The names of any custom fields for which to redact components within the value. This should generally only be used for fields that are not available through the redact-value-components-field property (for example, custom log fields defined in Server SDK extensions).
   * @return redactValueComponentsFieldName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The names of any custom fields for which to redact components within the value. This should generally only be used for fields that are not available through the redact-value-components-field property (for example, custom log fields defined in Server SDK extensions).")

  public List<String> getRedactValueComponentsFieldName() {
    return redactValueComponentsFieldName;
  }


  public void setRedactValueComponentsFieldName(List<String> redactValueComponentsFieldName) {
    
    
    
    this.redactValueComponentsFieldName = redactValueComponentsFieldName;
  }


  public TextAccessLogFieldBehaviorResponse tokenizeEntireValueField(List<EnumlogFieldBehaviorTextAccessTokenizeEntireValueFieldProp> tokenizeEntireValueField) {
    
    
    
    
    this.tokenizeEntireValueField = tokenizeEntireValueField;
    return this;
  }

  public TextAccessLogFieldBehaviorResponse addTokenizeEntireValueFieldItem(EnumlogFieldBehaviorTextAccessTokenizeEntireValueFieldProp tokenizeEntireValueFieldItem) {
    if (this.tokenizeEntireValueField == null) {
      this.tokenizeEntireValueField = new ArrayList<>();
    }
    this.tokenizeEntireValueField.add(tokenizeEntireValueFieldItem);
    return this;
  }

   /**
   * Get tokenizeEntireValueField
   * @return tokenizeEntireValueField
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<EnumlogFieldBehaviorTextAccessTokenizeEntireValueFieldProp> getTokenizeEntireValueField() {
    return tokenizeEntireValueField;
  }


  public void setTokenizeEntireValueField(List<EnumlogFieldBehaviorTextAccessTokenizeEntireValueFieldProp> tokenizeEntireValueField) {
    
    
    
    this.tokenizeEntireValueField = tokenizeEntireValueField;
  }


  public TextAccessLogFieldBehaviorResponse tokenizeEntireValueFieldName(List<String> tokenizeEntireValueFieldName) {
    
    
    
    
    this.tokenizeEntireValueFieldName = tokenizeEntireValueFieldName;
    return this;
  }

  public TextAccessLogFieldBehaviorResponse addTokenizeEntireValueFieldNameItem(String tokenizeEntireValueFieldNameItem) {
    if (this.tokenizeEntireValueFieldName == null) {
      this.tokenizeEntireValueFieldName = new ArrayList<>();
    }
    this.tokenizeEntireValueFieldName.add(tokenizeEntireValueFieldNameItem);
    return this;
  }

   /**
   * The names of any custom fields whose values should be completely tokenized. This should generally only be used for fields that are not available through the tokenize-entire-value-field property (for example, custom log fields defined in Server SDK extensions).
   * @return tokenizeEntireValueFieldName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The names of any custom fields whose values should be completely tokenized. This should generally only be used for fields that are not available through the tokenize-entire-value-field property (for example, custom log fields defined in Server SDK extensions).")

  public List<String> getTokenizeEntireValueFieldName() {
    return tokenizeEntireValueFieldName;
  }


  public void setTokenizeEntireValueFieldName(List<String> tokenizeEntireValueFieldName) {
    
    
    
    this.tokenizeEntireValueFieldName = tokenizeEntireValueFieldName;
  }


  public TextAccessLogFieldBehaviorResponse tokenizeValueComponentsField(List<EnumlogFieldBehaviorTextAccessTokenizeValueComponentsFieldProp> tokenizeValueComponentsField) {
    
    
    
    
    this.tokenizeValueComponentsField = tokenizeValueComponentsField;
    return this;
  }

  public TextAccessLogFieldBehaviorResponse addTokenizeValueComponentsFieldItem(EnumlogFieldBehaviorTextAccessTokenizeValueComponentsFieldProp tokenizeValueComponentsFieldItem) {
    if (this.tokenizeValueComponentsField == null) {
      this.tokenizeValueComponentsField = new ArrayList<>();
    }
    this.tokenizeValueComponentsField.add(tokenizeValueComponentsFieldItem);
    return this;
  }

   /**
   * Get tokenizeValueComponentsField
   * @return tokenizeValueComponentsField
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<EnumlogFieldBehaviorTextAccessTokenizeValueComponentsFieldProp> getTokenizeValueComponentsField() {
    return tokenizeValueComponentsField;
  }


  public void setTokenizeValueComponentsField(List<EnumlogFieldBehaviorTextAccessTokenizeValueComponentsFieldProp> tokenizeValueComponentsField) {
    
    
    
    this.tokenizeValueComponentsField = tokenizeValueComponentsField;
  }


  public TextAccessLogFieldBehaviorResponse tokenizeValueComponentsFieldName(List<String> tokenizeValueComponentsFieldName) {
    
    
    
    
    this.tokenizeValueComponentsFieldName = tokenizeValueComponentsFieldName;
    return this;
  }

  public TextAccessLogFieldBehaviorResponse addTokenizeValueComponentsFieldNameItem(String tokenizeValueComponentsFieldNameItem) {
    if (this.tokenizeValueComponentsFieldName == null) {
      this.tokenizeValueComponentsFieldName = new ArrayList<>();
    }
    this.tokenizeValueComponentsFieldName.add(tokenizeValueComponentsFieldNameItem);
    return this;
  }

   /**
   * The names of any custom fields for which to tokenize components within the value. This should generally only be used for fields that are not available through the tokenize-value-components-field property (for example, custom log fields defined in Server SDK extensions).
   * @return tokenizeValueComponentsFieldName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The names of any custom fields for which to tokenize components within the value. This should generally only be used for fields that are not available through the tokenize-value-components-field property (for example, custom log fields defined in Server SDK extensions).")

  public List<String> getTokenizeValueComponentsFieldName() {
    return tokenizeValueComponentsFieldName;
  }


  public void setTokenizeValueComponentsFieldName(List<String> tokenizeValueComponentsFieldName) {
    
    
    
    this.tokenizeValueComponentsFieldName = tokenizeValueComponentsFieldName;
  }


  public TextAccessLogFieldBehaviorResponse defaultBehavior(EnumlogFieldBehaviorDefaultBehaviorProp defaultBehavior) {
    
    
    
    
    this.defaultBehavior = defaultBehavior;
    return this;
  }

   /**
   * Get defaultBehavior
   * @return defaultBehavior
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EnumlogFieldBehaviorDefaultBehaviorProp getDefaultBehavior() {
    return defaultBehavior;
  }


  public void setDefaultBehavior(EnumlogFieldBehaviorDefaultBehaviorProp defaultBehavior) {
    
    
    
    this.defaultBehavior = defaultBehavior;
  }


  public TextAccessLogFieldBehaviorResponse meta(MetaMeta meta) {
    
    
    
    
    this.meta = meta;
    return this;
  }

   /**
   * Get meta
   * @return meta
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public MetaMeta getMeta() {
    return meta;
  }


  public void setMeta(MetaMeta meta) {
    
    
    
    this.meta = meta;
  }


  public TextAccessLogFieldBehaviorResponse urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20(MetaUrnPingidentitySchemasConfigurationMessages20 urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20) {
    
    
    
    
    this.urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20 = urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20;
    return this;
  }

   /**
   * Get urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20
   * @return urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public MetaUrnPingidentitySchemasConfigurationMessages20 getUrnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20() {
    return urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20;
  }


  public void setUrnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20(MetaUrnPingidentitySchemasConfigurationMessages20 urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20) {
    
    
    
    this.urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20 = urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the TextAccessLogFieldBehaviorResponse instance itself
   */
  public TextAccessLogFieldBehaviorResponse putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TextAccessLogFieldBehaviorResponse textAccessLogFieldBehaviorResponse = (TextAccessLogFieldBehaviorResponse) o;
    return Objects.equals(this.id, textAccessLogFieldBehaviorResponse.id) &&
        Objects.equals(this.description, textAccessLogFieldBehaviorResponse.description) &&
        Objects.equals(this.schemas, textAccessLogFieldBehaviorResponse.schemas) &&
        Objects.equals(this.preserveField, textAccessLogFieldBehaviorResponse.preserveField) &&
        Objects.equals(this.preserveFieldName, textAccessLogFieldBehaviorResponse.preserveFieldName) &&
        Objects.equals(this.omitField, textAccessLogFieldBehaviorResponse.omitField) &&
        Objects.equals(this.omitFieldName, textAccessLogFieldBehaviorResponse.omitFieldName) &&
        Objects.equals(this.redactEntireValueField, textAccessLogFieldBehaviorResponse.redactEntireValueField) &&
        Objects.equals(this.redactEntireValueFieldName, textAccessLogFieldBehaviorResponse.redactEntireValueFieldName) &&
        Objects.equals(this.redactValueComponentsField, textAccessLogFieldBehaviorResponse.redactValueComponentsField) &&
        Objects.equals(this.redactValueComponentsFieldName, textAccessLogFieldBehaviorResponse.redactValueComponentsFieldName) &&
        Objects.equals(this.tokenizeEntireValueField, textAccessLogFieldBehaviorResponse.tokenizeEntireValueField) &&
        Objects.equals(this.tokenizeEntireValueFieldName, textAccessLogFieldBehaviorResponse.tokenizeEntireValueFieldName) &&
        Objects.equals(this.tokenizeValueComponentsField, textAccessLogFieldBehaviorResponse.tokenizeValueComponentsField) &&
        Objects.equals(this.tokenizeValueComponentsFieldName, textAccessLogFieldBehaviorResponse.tokenizeValueComponentsFieldName) &&
        Objects.equals(this.defaultBehavior, textAccessLogFieldBehaviorResponse.defaultBehavior) &&
        Objects.equals(this.meta, textAccessLogFieldBehaviorResponse.meta) &&
        Objects.equals(this.urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20, textAccessLogFieldBehaviorResponse.urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20)&&
        Objects.equals(this.additionalProperties, textAccessLogFieldBehaviorResponse.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, description, schemas, preserveField, preserveFieldName, omitField, omitFieldName, redactEntireValueField, redactEntireValueFieldName, redactValueComponentsField, redactValueComponentsFieldName, tokenizeEntireValueField, tokenizeEntireValueFieldName, tokenizeValueComponentsField, tokenizeValueComponentsFieldName, defaultBehavior, meta, urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TextAccessLogFieldBehaviorResponse {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    schemas: ").append(toIndentedString(schemas)).append("\n");
    sb.append("    preserveField: ").append(toIndentedString(preserveField)).append("\n");
    sb.append("    preserveFieldName: ").append(toIndentedString(preserveFieldName)).append("\n");
    sb.append("    omitField: ").append(toIndentedString(omitField)).append("\n");
    sb.append("    omitFieldName: ").append(toIndentedString(omitFieldName)).append("\n");
    sb.append("    redactEntireValueField: ").append(toIndentedString(redactEntireValueField)).append("\n");
    sb.append("    redactEntireValueFieldName: ").append(toIndentedString(redactEntireValueFieldName)).append("\n");
    sb.append("    redactValueComponentsField: ").append(toIndentedString(redactValueComponentsField)).append("\n");
    sb.append("    redactValueComponentsFieldName: ").append(toIndentedString(redactValueComponentsFieldName)).append("\n");
    sb.append("    tokenizeEntireValueField: ").append(toIndentedString(tokenizeEntireValueField)).append("\n");
    sb.append("    tokenizeEntireValueFieldName: ").append(toIndentedString(tokenizeEntireValueFieldName)).append("\n");
    sb.append("    tokenizeValueComponentsField: ").append(toIndentedString(tokenizeValueComponentsField)).append("\n");
    sb.append("    tokenizeValueComponentsFieldName: ").append(toIndentedString(tokenizeValueComponentsFieldName)).append("\n");
    sb.append("    defaultBehavior: ").append(toIndentedString(defaultBehavior)).append("\n");
    sb.append("    meta: ").append(toIndentedString(meta)).append("\n");
    sb.append("    urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20: ").append(toIndentedString(urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("description");
    openapiFields.add("schemas");
    openapiFields.add("preserveField");
    openapiFields.add("preserveFieldName");
    openapiFields.add("omitField");
    openapiFields.add("omitFieldName");
    openapiFields.add("redactEntireValueField");
    openapiFields.add("redactEntireValueFieldName");
    openapiFields.add("redactValueComponentsField");
    openapiFields.add("redactValueComponentsFieldName");
    openapiFields.add("tokenizeEntireValueField");
    openapiFields.add("tokenizeEntireValueFieldName");
    openapiFields.add("tokenizeValueComponentsField");
    openapiFields.add("tokenizeValueComponentsFieldName");
    openapiFields.add("defaultBehavior");
    openapiFields.add("meta");
    openapiFields.add("urn:pingidentity:schemas:configuration:messages:2.0");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("schemas");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to TextAccessLogFieldBehaviorResponse
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!TextAccessLogFieldBehaviorResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TextAccessLogFieldBehaviorResponse is not found in the empty JSON string", TextAccessLogFieldBehaviorResponse.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : TextAccessLogFieldBehaviorResponse.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("schemas") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("schemas").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `schemas` to be an array in the JSON string but got `%s`", jsonObj.get("schemas").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("preserveField") != null && !jsonObj.get("preserveField").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `preserveField` to be an array in the JSON string but got `%s`", jsonObj.get("preserveField").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("preserveFieldName") != null && !jsonObj.get("preserveFieldName").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `preserveFieldName` to be an array in the JSON string but got `%s`", jsonObj.get("preserveFieldName").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("omitField") != null && !jsonObj.get("omitField").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `omitField` to be an array in the JSON string but got `%s`", jsonObj.get("omitField").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("omitFieldName") != null && !jsonObj.get("omitFieldName").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `omitFieldName` to be an array in the JSON string but got `%s`", jsonObj.get("omitFieldName").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("redactEntireValueField") != null && !jsonObj.get("redactEntireValueField").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `redactEntireValueField` to be an array in the JSON string but got `%s`", jsonObj.get("redactEntireValueField").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("redactEntireValueFieldName") != null && !jsonObj.get("redactEntireValueFieldName").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `redactEntireValueFieldName` to be an array in the JSON string but got `%s`", jsonObj.get("redactEntireValueFieldName").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("redactValueComponentsField") != null && !jsonObj.get("redactValueComponentsField").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `redactValueComponentsField` to be an array in the JSON string but got `%s`", jsonObj.get("redactValueComponentsField").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("redactValueComponentsFieldName") != null && !jsonObj.get("redactValueComponentsFieldName").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `redactValueComponentsFieldName` to be an array in the JSON string but got `%s`", jsonObj.get("redactValueComponentsFieldName").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("tokenizeEntireValueField") != null && !jsonObj.get("tokenizeEntireValueField").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `tokenizeEntireValueField` to be an array in the JSON string but got `%s`", jsonObj.get("tokenizeEntireValueField").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("tokenizeEntireValueFieldName") != null && !jsonObj.get("tokenizeEntireValueFieldName").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `tokenizeEntireValueFieldName` to be an array in the JSON string but got `%s`", jsonObj.get("tokenizeEntireValueFieldName").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("tokenizeValueComponentsField") != null && !jsonObj.get("tokenizeValueComponentsField").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `tokenizeValueComponentsField` to be an array in the JSON string but got `%s`", jsonObj.get("tokenizeValueComponentsField").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("tokenizeValueComponentsFieldName") != null && !jsonObj.get("tokenizeValueComponentsFieldName").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `tokenizeValueComponentsFieldName` to be an array in the JSON string but got `%s`", jsonObj.get("tokenizeValueComponentsFieldName").toString()));
      }
      // validate the optional field `meta`
      if (jsonObj.get("meta") != null && !jsonObj.get("meta").isJsonNull()) {
        MetaMeta.validateJsonObject(jsonObj.getAsJsonObject("meta"));
      }
      // validate the optional field `urn:pingidentity:schemas:configuration:messages:2.0`
      if (jsonObj.get("urn:pingidentity:schemas:configuration:messages:2.0") != null && !jsonObj.get("urn:pingidentity:schemas:configuration:messages:2.0").isJsonNull()) {
        MetaUrnPingidentitySchemasConfigurationMessages20.validateJsonObject(jsonObj.getAsJsonObject("urn:pingidentity:schemas:configuration:messages:2.0"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TextAccessLogFieldBehaviorResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TextAccessLogFieldBehaviorResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TextAccessLogFieldBehaviorResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TextAccessLogFieldBehaviorResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<TextAccessLogFieldBehaviorResponse>() {
           @Override
           public void write(JsonWriter out, TextAccessLogFieldBehaviorResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public TextAccessLogFieldBehaviorResponse read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             TextAccessLogFieldBehaviorResponse instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of TextAccessLogFieldBehaviorResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of TextAccessLogFieldBehaviorResponse
  * @throws IOException if the JSON string is invalid with respect to TextAccessLogFieldBehaviorResponse
  */
  public static TextAccessLogFieldBehaviorResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TextAccessLogFieldBehaviorResponse.class);
  }

 /**
  * Convert an instance of TextAccessLogFieldBehaviorResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

