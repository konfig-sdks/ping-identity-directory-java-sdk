/*
 * PingData Config - OpenAPI 3.0
 * This is the PingData Configuration API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.EnumclientConnectionPolicyAllowedAuthTypeProp;
import com.konfigthis.client.model.EnumclientConnectionPolicyAllowedFilterTypeProp;
import com.konfigthis.client.model.EnumclientConnectionPolicyAllowedOperationProp;
import com.konfigthis.client.model.EnumclientConnectionPolicyConnectionOperationRateExceededBehaviorProp;
import com.konfigthis.client.model.EnumclientConnectionPolicyMaximumConcurrentOperationsPerConnectionExceededBehaviorProp;
import com.konfigthis.client.model.EnumclientConnectionPolicyPolicyOperationRateExceededBehaviorProp;
import com.konfigthis.client.model.EnumclientConnectionPolicySchemaUrn;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * AddClientConnectionPolicyRequest
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class AddClientConnectionPolicyRequest {
  public static final String SERIALIZED_NAME_POLICY_NAME = "policyName";
  @SerializedName(SERIALIZED_NAME_POLICY_NAME)
  private String policyName;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_SCHEMAS = "schemas";
  @SerializedName(SERIALIZED_NAME_SCHEMAS)
  private List<EnumclientConnectionPolicySchemaUrn> schemas = null;

  public static final String SERIALIZED_NAME_POLICY_I_D = "policyID";
  @SerializedName(SERIALIZED_NAME_POLICY_I_D)
  private String policyID;

  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled;

  public static final String SERIALIZED_NAME_EVALUATION_ORDER_INDEX = "evaluationOrderIndex";
  @SerializedName(SERIALIZED_NAME_EVALUATION_ORDER_INDEX)
  private Integer evaluationOrderIndex;

  public static final String SERIALIZED_NAME_CONNECTION_CRITERIA = "connectionCriteria";
  @SerializedName(SERIALIZED_NAME_CONNECTION_CRITERIA)
  private String connectionCriteria;

  public static final String SERIALIZED_NAME_TERMINATE_CONNECTION = "terminateConnection";
  @SerializedName(SERIALIZED_NAME_TERMINATE_CONNECTION)
  private Boolean terminateConnection;

  public static final String SERIALIZED_NAME_SENSITIVE_ATTRIBUTE = "sensitiveAttribute";
  @SerializedName(SERIALIZED_NAME_SENSITIVE_ATTRIBUTE)
  private List<String> sensitiveAttribute = null;

  public static final String SERIALIZED_NAME_EXCLUDE_GLOBAL_SENSITIVE_ATTRIBUTE = "excludeGlobalSensitiveAttribute";
  @SerializedName(SERIALIZED_NAME_EXCLUDE_GLOBAL_SENSITIVE_ATTRIBUTE)
  private List<String> excludeGlobalSensitiveAttribute = null;

  public static final String SERIALIZED_NAME_RESULT_CODE_MAP = "resultCodeMap";
  @SerializedName(SERIALIZED_NAME_RESULT_CODE_MAP)
  private String resultCodeMap;

  public static final String SERIALIZED_NAME_INCLUDED_BACKEND_BASE_D_N = "includedBackendBaseDN";
  @SerializedName(SERIALIZED_NAME_INCLUDED_BACKEND_BASE_D_N)
  private List<String> includedBackendBaseDN = null;

  public static final String SERIALIZED_NAME_EXCLUDED_BACKEND_BASE_D_N = "excludedBackendBaseDN";
  @SerializedName(SERIALIZED_NAME_EXCLUDED_BACKEND_BASE_D_N)
  private List<String> excludedBackendBaseDN = null;

  public static final String SERIALIZED_NAME_ALLOWED_OPERATION = "allowedOperation";
  @SerializedName(SERIALIZED_NAME_ALLOWED_OPERATION)
  private List<EnumclientConnectionPolicyAllowedOperationProp> allowedOperation = null;

  public static final String SERIALIZED_NAME_REQUIRED_OPERATION_REQUEST_CRITERIA = "requiredOperationRequestCriteria";
  @SerializedName(SERIALIZED_NAME_REQUIRED_OPERATION_REQUEST_CRITERIA)
  private String requiredOperationRequestCriteria;

  public static final String SERIALIZED_NAME_PROHIBITED_OPERATION_REQUEST_CRITERIA = "prohibitedOperationRequestCriteria";
  @SerializedName(SERIALIZED_NAME_PROHIBITED_OPERATION_REQUEST_CRITERIA)
  private String prohibitedOperationRequestCriteria;

  public static final String SERIALIZED_NAME_ALLOWED_REQUEST_CONTROL = "allowedRequestControl";
  @SerializedName(SERIALIZED_NAME_ALLOWED_REQUEST_CONTROL)
  private List<String> allowedRequestControl = null;

  public static final String SERIALIZED_NAME_DENIED_REQUEST_CONTROL = "deniedRequestControl";
  @SerializedName(SERIALIZED_NAME_DENIED_REQUEST_CONTROL)
  private List<String> deniedRequestControl = null;

  public static final String SERIALIZED_NAME_ALLOWED_EXTENDED_OPERATION = "allowedExtendedOperation";
  @SerializedName(SERIALIZED_NAME_ALLOWED_EXTENDED_OPERATION)
  private List<String> allowedExtendedOperation = null;

  public static final String SERIALIZED_NAME_DENIED_EXTENDED_OPERATION = "deniedExtendedOperation";
  @SerializedName(SERIALIZED_NAME_DENIED_EXTENDED_OPERATION)
  private List<String> deniedExtendedOperation = null;

  public static final String SERIALIZED_NAME_ALLOWED_AUTH_TYPE = "allowedAuthType";
  @SerializedName(SERIALIZED_NAME_ALLOWED_AUTH_TYPE)
  private List<EnumclientConnectionPolicyAllowedAuthTypeProp> allowedAuthType = null;

  public static final String SERIALIZED_NAME_ALLOWED_S_A_S_L_MECHANISM = "allowedSASLMechanism";
  @SerializedName(SERIALIZED_NAME_ALLOWED_S_A_S_L_MECHANISM)
  private List<String> allowedSASLMechanism = null;

  public static final String SERIALIZED_NAME_DENIED_S_A_S_L_MECHANISM = "deniedSASLMechanism";
  @SerializedName(SERIALIZED_NAME_DENIED_S_A_S_L_MECHANISM)
  private List<String> deniedSASLMechanism = null;

  public static final String SERIALIZED_NAME_ALLOWED_FILTER_TYPE = "allowedFilterType";
  @SerializedName(SERIALIZED_NAME_ALLOWED_FILTER_TYPE)
  private List<EnumclientConnectionPolicyAllowedFilterTypeProp> allowedFilterType = null;

  public static final String SERIALIZED_NAME_ALLOW_UNINDEXED_SEARCHES = "allowUnindexedSearches";
  @SerializedName(SERIALIZED_NAME_ALLOW_UNINDEXED_SEARCHES)
  private Boolean allowUnindexedSearches;

  public static final String SERIALIZED_NAME_ALLOW_UNINDEXED_SEARCHES_WITH_CONTROL = "allowUnindexedSearchesWithControl";
  @SerializedName(SERIALIZED_NAME_ALLOW_UNINDEXED_SEARCHES_WITH_CONTROL)
  private Boolean allowUnindexedSearchesWithControl;

  public static final String SERIALIZED_NAME_MINIMUM_SUBSTRING_LENGTH = "minimumSubstringLength";
  @SerializedName(SERIALIZED_NAME_MINIMUM_SUBSTRING_LENGTH)
  private Integer minimumSubstringLength;

  public static final String SERIALIZED_NAME_MAXIMUM_CONCURRENT_CONNECTIONS = "maximumConcurrentConnections";
  @SerializedName(SERIALIZED_NAME_MAXIMUM_CONCURRENT_CONNECTIONS)
  private Integer maximumConcurrentConnections;

  public static final String SERIALIZED_NAME_MAXIMUM_CONNECTION_DURATION = "maximumConnectionDuration";
  @SerializedName(SERIALIZED_NAME_MAXIMUM_CONNECTION_DURATION)
  private String maximumConnectionDuration;

  public static final String SERIALIZED_NAME_MAXIMUM_IDLE_CONNECTION_DURATION = "maximumIdleConnectionDuration";
  @SerializedName(SERIALIZED_NAME_MAXIMUM_IDLE_CONNECTION_DURATION)
  private String maximumIdleConnectionDuration;

  public static final String SERIALIZED_NAME_MAXIMUM_OPERATION_COUNT_PER_CONNECTION = "maximumOperationCountPerConnection";
  @SerializedName(SERIALIZED_NAME_MAXIMUM_OPERATION_COUNT_PER_CONNECTION)
  private Integer maximumOperationCountPerConnection;

  public static final String SERIALIZED_NAME_MAXIMUM_CONCURRENT_OPERATIONS_PER_CONNECTION = "maximumConcurrentOperationsPerConnection";
  @SerializedName(SERIALIZED_NAME_MAXIMUM_CONCURRENT_OPERATIONS_PER_CONNECTION)
  private Integer maximumConcurrentOperationsPerConnection;

  public static final String SERIALIZED_NAME_MAXIMUM_CONCURRENT_OPERATION_WAIT_TIME_BEFORE_REJECTING = "maximumConcurrentOperationWaitTimeBeforeRejecting";
  @SerializedName(SERIALIZED_NAME_MAXIMUM_CONCURRENT_OPERATION_WAIT_TIME_BEFORE_REJECTING)
  private String maximumConcurrentOperationWaitTimeBeforeRejecting;

  public static final String SERIALIZED_NAME_MAXIMUM_CONCURRENT_OPERATIONS_PER_CONNECTION_EXCEEDED_BEHAVIOR = "maximumConcurrentOperationsPerConnectionExceededBehavior";
  @SerializedName(SERIALIZED_NAME_MAXIMUM_CONCURRENT_OPERATIONS_PER_CONNECTION_EXCEEDED_BEHAVIOR)
  private EnumclientConnectionPolicyMaximumConcurrentOperationsPerConnectionExceededBehaviorProp maximumConcurrentOperationsPerConnectionExceededBehavior;

  public static final String SERIALIZED_NAME_MAXIMUM_CONNECTION_OPERATION_RATE = "maximumConnectionOperationRate";
  @SerializedName(SERIALIZED_NAME_MAXIMUM_CONNECTION_OPERATION_RATE)
  private List<String> maximumConnectionOperationRate = null;

  public static final String SERIALIZED_NAME_CONNECTION_OPERATION_RATE_EXCEEDED_BEHAVIOR = "connectionOperationRateExceededBehavior";
  @SerializedName(SERIALIZED_NAME_CONNECTION_OPERATION_RATE_EXCEEDED_BEHAVIOR)
  private EnumclientConnectionPolicyConnectionOperationRateExceededBehaviorProp connectionOperationRateExceededBehavior;

  public static final String SERIALIZED_NAME_MAXIMUM_POLICY_OPERATION_RATE = "maximumPolicyOperationRate";
  @SerializedName(SERIALIZED_NAME_MAXIMUM_POLICY_OPERATION_RATE)
  private List<String> maximumPolicyOperationRate = null;

  public static final String SERIALIZED_NAME_POLICY_OPERATION_RATE_EXCEEDED_BEHAVIOR = "policyOperationRateExceededBehavior";
  @SerializedName(SERIALIZED_NAME_POLICY_OPERATION_RATE_EXCEEDED_BEHAVIOR)
  private EnumclientConnectionPolicyPolicyOperationRateExceededBehaviorProp policyOperationRateExceededBehavior;

  public static final String SERIALIZED_NAME_MAXIMUM_SEARCH_SIZE_LIMIT = "maximumSearchSizeLimit";
  @SerializedName(SERIALIZED_NAME_MAXIMUM_SEARCH_SIZE_LIMIT)
  private Integer maximumSearchSizeLimit;

  public static final String SERIALIZED_NAME_MAXIMUM_SEARCH_TIME_LIMIT = "maximumSearchTimeLimit";
  @SerializedName(SERIALIZED_NAME_MAXIMUM_SEARCH_TIME_LIMIT)
  private String maximumSearchTimeLimit;

  public static final String SERIALIZED_NAME_MAXIMUM_SEARCH_LOOKTHROUGH_LIMIT = "maximumSearchLookthroughLimit";
  @SerializedName(SERIALIZED_NAME_MAXIMUM_SEARCH_LOOKTHROUGH_LIMIT)
  private Integer maximumSearchLookthroughLimit;

  public static final String SERIALIZED_NAME_MAXIMUM_L_D_A_P_JOIN_SIZE_LIMIT = "maximumLDAPJoinSizeLimit";
  @SerializedName(SERIALIZED_NAME_MAXIMUM_L_D_A_P_JOIN_SIZE_LIMIT)
  private Integer maximumLDAPJoinSizeLimit;

  public static final String SERIALIZED_NAME_MAXIMUM_SORT_SIZE_LIMIT_WITHOUT_V_L_V_INDEX = "maximumSortSizeLimitWithoutVLVIndex";
  @SerializedName(SERIALIZED_NAME_MAXIMUM_SORT_SIZE_LIMIT_WITHOUT_V_L_V_INDEX)
  private Integer maximumSortSizeLimitWithoutVLVIndex;

  public AddClientConnectionPolicyRequest() {
  }

  public AddClientConnectionPolicyRequest policyName(String policyName) {
    
    
    
    
    this.policyName = policyName;
    return this;
  }

   /**
   * Name of the new Client Connection Policy
   * @return policyName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Name of the new Client Connection Policy")

  public String getPolicyName() {
    return policyName;
  }


  public void setPolicyName(String policyName) {
    
    
    
    this.policyName = policyName;
  }


  public AddClientConnectionPolicyRequest description(String description) {
    
    
    
    
    this.description = description;
    return this;
  }

   /**
   * A description for this Client Connection Policy
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A description for this Client Connection Policy")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    
    
    
    this.description = description;
  }


  public AddClientConnectionPolicyRequest schemas(List<EnumclientConnectionPolicySchemaUrn> schemas) {
    
    
    
    
    this.schemas = schemas;
    return this;
  }

  public AddClientConnectionPolicyRequest addSchemasItem(EnumclientConnectionPolicySchemaUrn schemasItem) {
    if (this.schemas == null) {
      this.schemas = new ArrayList<>();
    }
    this.schemas.add(schemasItem);
    return this;
  }

   /**
   * Get schemas
   * @return schemas
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<EnumclientConnectionPolicySchemaUrn> getSchemas() {
    return schemas;
  }


  public void setSchemas(List<EnumclientConnectionPolicySchemaUrn> schemas) {
    
    
    
    this.schemas = schemas;
  }


  public AddClientConnectionPolicyRequest policyID(String policyID) {
    
    
    
    
    this.policyID = policyID;
    return this;
  }

   /**
   * Specifies a name which uniquely identifies this Client Connection Policy in the server.
   * @return policyID
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Specifies a name which uniquely identifies this Client Connection Policy in the server.")

  public String getPolicyID() {
    return policyID;
  }


  public void setPolicyID(String policyID) {
    
    
    
    this.policyID = policyID;
  }


  public AddClientConnectionPolicyRequest enabled(Boolean enabled) {
    
    
    
    
    this.enabled = enabled;
    return this;
  }

   /**
   * Indicates whether this Client Connection Policy is enabled for use in the server. If a Client Connection Policy is disabled, then no new client connections will be associated with it.
   * @return enabled
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Indicates whether this Client Connection Policy is enabled for use in the server. If a Client Connection Policy is disabled, then no new client connections will be associated with it.")

  public Boolean getEnabled() {
    return enabled;
  }


  public void setEnabled(Boolean enabled) {
    
    
    
    this.enabled = enabled;
  }


  public AddClientConnectionPolicyRequest evaluationOrderIndex(Integer evaluationOrderIndex) {
    
    
    
    
    this.evaluationOrderIndex = evaluationOrderIndex;
    return this;
  }

   /**
   * Specifies the order in which Client Connection Policy definitions will be evaluated. A Client Connection Policy with a lower index will be evaluated before one with a higher index, and the first Client Connection Policy evaluated which may apply to a client connection will be used for that connection. Each Client Connection Policy must be assigned a unique evaluation order index value.
   * @return evaluationOrderIndex
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Specifies the order in which Client Connection Policy definitions will be evaluated. A Client Connection Policy with a lower index will be evaluated before one with a higher index, and the first Client Connection Policy evaluated which may apply to a client connection will be used for that connection. Each Client Connection Policy must be assigned a unique evaluation order index value.")

  public Integer getEvaluationOrderIndex() {
    return evaluationOrderIndex;
  }


  public void setEvaluationOrderIndex(Integer evaluationOrderIndex) {
    
    
    
    this.evaluationOrderIndex = evaluationOrderIndex;
  }


  public AddClientConnectionPolicyRequest connectionCriteria(String connectionCriteria) {
    
    
    
    
    this.connectionCriteria = connectionCriteria;
    return this;
  }

   /**
   * Specifies a set of connection criteria that must match the associated client connection for it to be associated with this Client Connection Policy.
   * @return connectionCriteria
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies a set of connection criteria that must match the associated client connection for it to be associated with this Client Connection Policy.")

  public String getConnectionCriteria() {
    return connectionCriteria;
  }


  public void setConnectionCriteria(String connectionCriteria) {
    
    
    
    this.connectionCriteria = connectionCriteria;
  }


  public AddClientConnectionPolicyRequest terminateConnection(Boolean terminateConnection) {
    
    
    
    
    this.terminateConnection = terminateConnection;
    return this;
  }

   /**
   * Indicates whether any client connection for which this Client Connection Policy is selected should be terminated. This makes it possible to define fine-grained criteria for clients that should not be allowed to connect to this Directory Server.
   * @return terminateConnection
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether any client connection for which this Client Connection Policy is selected should be terminated. This makes it possible to define fine-grained criteria for clients that should not be allowed to connect to this Directory Server.")

  public Boolean getTerminateConnection() {
    return terminateConnection;
  }


  public void setTerminateConnection(Boolean terminateConnection) {
    
    
    
    this.terminateConnection = terminateConnection;
  }


  public AddClientConnectionPolicyRequest sensitiveAttribute(List<String> sensitiveAttribute) {
    
    
    
    
    this.sensitiveAttribute = sensitiveAttribute;
    return this;
  }

  public AddClientConnectionPolicyRequest addSensitiveAttributeItem(String sensitiveAttributeItem) {
    if (this.sensitiveAttribute == null) {
      this.sensitiveAttribute = new ArrayList<>();
    }
    this.sensitiveAttribute.add(sensitiveAttributeItem);
    return this;
  }

   /**
   * Provides the ability to indicate that some attributes should be considered sensitive and additional protection should be in place when interacting with those attributes.
   * @return sensitiveAttribute
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Provides the ability to indicate that some attributes should be considered sensitive and additional protection should be in place when interacting with those attributes.")

  public List<String> getSensitiveAttribute() {
    return sensitiveAttribute;
  }


  public void setSensitiveAttribute(List<String> sensitiveAttribute) {
    
    
    
    this.sensitiveAttribute = sensitiveAttribute;
  }


  public AddClientConnectionPolicyRequest excludeGlobalSensitiveAttribute(List<String> excludeGlobalSensitiveAttribute) {
    
    
    
    
    this.excludeGlobalSensitiveAttribute = excludeGlobalSensitiveAttribute;
    return this;
  }

  public AddClientConnectionPolicyRequest addExcludeGlobalSensitiveAttributeItem(String excludeGlobalSensitiveAttributeItem) {
    if (this.excludeGlobalSensitiveAttribute == null) {
      this.excludeGlobalSensitiveAttribute = new ArrayList<>();
    }
    this.excludeGlobalSensitiveAttribute.add(excludeGlobalSensitiveAttributeItem);
    return this;
  }

   /**
   * Specifies the set of global sensitive attribute definitions that should not apply to this client connection policy.
   * @return excludeGlobalSensitiveAttribute
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the set of global sensitive attribute definitions that should not apply to this client connection policy.")

  public List<String> getExcludeGlobalSensitiveAttribute() {
    return excludeGlobalSensitiveAttribute;
  }


  public void setExcludeGlobalSensitiveAttribute(List<String> excludeGlobalSensitiveAttribute) {
    
    
    
    this.excludeGlobalSensitiveAttribute = excludeGlobalSensitiveAttribute;
  }


  public AddClientConnectionPolicyRequest resultCodeMap(String resultCodeMap) {
    
    
    
    
    this.resultCodeMap = resultCodeMap;
    return this;
  }

   /**
   * Specifies the result code map that should be used for clients associated with this Client Connection Policy. If a value is defined for this property, then it will override any result code map referenced in the global configuration.
   * @return resultCodeMap
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the result code map that should be used for clients associated with this Client Connection Policy. If a value is defined for this property, then it will override any result code map referenced in the global configuration.")

  public String getResultCodeMap() {
    return resultCodeMap;
  }


  public void setResultCodeMap(String resultCodeMap) {
    
    
    
    this.resultCodeMap = resultCodeMap;
  }


  public AddClientConnectionPolicyRequest includedBackendBaseDN(List<String> includedBackendBaseDN) {
    
    
    
    
    this.includedBackendBaseDN = includedBackendBaseDN;
    return this;
  }

  public AddClientConnectionPolicyRequest addIncludedBackendBaseDNItem(String includedBackendBaseDNItem) {
    if (this.includedBackendBaseDN == null) {
      this.includedBackendBaseDN = new ArrayList<>();
    }
    this.includedBackendBaseDN.add(includedBackendBaseDNItem);
    return this;
  }

   /**
   * Specifies the set of backend base DNs for which subtree views should be included in this Client Connection Policy.
   * @return includedBackendBaseDN
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the set of backend base DNs for which subtree views should be included in this Client Connection Policy.")

  public List<String> getIncludedBackendBaseDN() {
    return includedBackendBaseDN;
  }


  public void setIncludedBackendBaseDN(List<String> includedBackendBaseDN) {
    
    
    
    this.includedBackendBaseDN = includedBackendBaseDN;
  }


  public AddClientConnectionPolicyRequest excludedBackendBaseDN(List<String> excludedBackendBaseDN) {
    
    
    
    
    this.excludedBackendBaseDN = excludedBackendBaseDN;
    return this;
  }

  public AddClientConnectionPolicyRequest addExcludedBackendBaseDNItem(String excludedBackendBaseDNItem) {
    if (this.excludedBackendBaseDN == null) {
      this.excludedBackendBaseDN = new ArrayList<>();
    }
    this.excludedBackendBaseDN.add(excludedBackendBaseDNItem);
    return this;
  }

   /**
   * Specifies the set of backend base DNs for which subtree views should be excluded from this Client Connection Policy.
   * @return excludedBackendBaseDN
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the set of backend base DNs for which subtree views should be excluded from this Client Connection Policy.")

  public List<String> getExcludedBackendBaseDN() {
    return excludedBackendBaseDN;
  }


  public void setExcludedBackendBaseDN(List<String> excludedBackendBaseDN) {
    
    
    
    this.excludedBackendBaseDN = excludedBackendBaseDN;
  }


  public AddClientConnectionPolicyRequest allowedOperation(List<EnumclientConnectionPolicyAllowedOperationProp> allowedOperation) {
    
    
    
    
    this.allowedOperation = allowedOperation;
    return this;
  }

  public AddClientConnectionPolicyRequest addAllowedOperationItem(EnumclientConnectionPolicyAllowedOperationProp allowedOperationItem) {
    if (this.allowedOperation == null) {
      this.allowedOperation = new ArrayList<>();
    }
    this.allowedOperation.add(allowedOperationItem);
    return this;
  }

   /**
   * Get allowedOperation
   * @return allowedOperation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<EnumclientConnectionPolicyAllowedOperationProp> getAllowedOperation() {
    return allowedOperation;
  }


  public void setAllowedOperation(List<EnumclientConnectionPolicyAllowedOperationProp> allowedOperation) {
    
    
    
    this.allowedOperation = allowedOperation;
  }


  public AddClientConnectionPolicyRequest requiredOperationRequestCriteria(String requiredOperationRequestCriteria) {
    
    
    
    
    this.requiredOperationRequestCriteria = requiredOperationRequestCriteria;
    return this;
  }

   /**
   * Specifies a request criteria object that will be required to match all requests submitted by clients associated with this Client Connection Policy. If a client submits a request that does not satisfy this request criteria object, then that request will be rejected.
   * @return requiredOperationRequestCriteria
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies a request criteria object that will be required to match all requests submitted by clients associated with this Client Connection Policy. If a client submits a request that does not satisfy this request criteria object, then that request will be rejected.")

  public String getRequiredOperationRequestCriteria() {
    return requiredOperationRequestCriteria;
  }


  public void setRequiredOperationRequestCriteria(String requiredOperationRequestCriteria) {
    
    
    
    this.requiredOperationRequestCriteria = requiredOperationRequestCriteria;
  }


  public AddClientConnectionPolicyRequest prohibitedOperationRequestCriteria(String prohibitedOperationRequestCriteria) {
    
    
    
    
    this.prohibitedOperationRequestCriteria = prohibitedOperationRequestCriteria;
    return this;
  }

   /**
   * Specifies a request criteria object that must not match any requests submitted by clients associated with this Client Connection Policy. If a client submits a request that satisfies this request criteria object, then that request will be rejected.
   * @return prohibitedOperationRequestCriteria
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies a request criteria object that must not match any requests submitted by clients associated with this Client Connection Policy. If a client submits a request that satisfies this request criteria object, then that request will be rejected.")

  public String getProhibitedOperationRequestCriteria() {
    return prohibitedOperationRequestCriteria;
  }


  public void setProhibitedOperationRequestCriteria(String prohibitedOperationRequestCriteria) {
    
    
    
    this.prohibitedOperationRequestCriteria = prohibitedOperationRequestCriteria;
  }


  public AddClientConnectionPolicyRequest allowedRequestControl(List<String> allowedRequestControl) {
    
    
    
    
    this.allowedRequestControl = allowedRequestControl;
    return this;
  }

  public AddClientConnectionPolicyRequest addAllowedRequestControlItem(String allowedRequestControlItem) {
    if (this.allowedRequestControl == null) {
      this.allowedRequestControl = new ArrayList<>();
    }
    this.allowedRequestControl.add(allowedRequestControlItem);
    return this;
  }

   /**
   * Specifies the OIDs of the controls that clients associated with this Client Connection Policy will be allowed to include in requests.
   * @return allowedRequestControl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the OIDs of the controls that clients associated with this Client Connection Policy will be allowed to include in requests.")

  public List<String> getAllowedRequestControl() {
    return allowedRequestControl;
  }


  public void setAllowedRequestControl(List<String> allowedRequestControl) {
    
    
    
    this.allowedRequestControl = allowedRequestControl;
  }


  public AddClientConnectionPolicyRequest deniedRequestControl(List<String> deniedRequestControl) {
    
    
    
    
    this.deniedRequestControl = deniedRequestControl;
    return this;
  }

  public AddClientConnectionPolicyRequest addDeniedRequestControlItem(String deniedRequestControlItem) {
    if (this.deniedRequestControl == null) {
      this.deniedRequestControl = new ArrayList<>();
    }
    this.deniedRequestControl.add(deniedRequestControlItem);
    return this;
  }

   /**
   * Specifies the OIDs of the controls that clients associated with this Client Connection Policy will not be allowed to include in requests.
   * @return deniedRequestControl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the OIDs of the controls that clients associated with this Client Connection Policy will not be allowed to include in requests.")

  public List<String> getDeniedRequestControl() {
    return deniedRequestControl;
  }


  public void setDeniedRequestControl(List<String> deniedRequestControl) {
    
    
    
    this.deniedRequestControl = deniedRequestControl;
  }


  public AddClientConnectionPolicyRequest allowedExtendedOperation(List<String> allowedExtendedOperation) {
    
    
    
    
    this.allowedExtendedOperation = allowedExtendedOperation;
    return this;
  }

  public AddClientConnectionPolicyRequest addAllowedExtendedOperationItem(String allowedExtendedOperationItem) {
    if (this.allowedExtendedOperation == null) {
      this.allowedExtendedOperation = new ArrayList<>();
    }
    this.allowedExtendedOperation.add(allowedExtendedOperationItem);
    return this;
  }

   /**
   * Specifies the OIDs of the extended operations that clients associated with this Client Connection Policy will be allowed to request.
   * @return allowedExtendedOperation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the OIDs of the extended operations that clients associated with this Client Connection Policy will be allowed to request.")

  public List<String> getAllowedExtendedOperation() {
    return allowedExtendedOperation;
  }


  public void setAllowedExtendedOperation(List<String> allowedExtendedOperation) {
    
    
    
    this.allowedExtendedOperation = allowedExtendedOperation;
  }


  public AddClientConnectionPolicyRequest deniedExtendedOperation(List<String> deniedExtendedOperation) {
    
    
    
    
    this.deniedExtendedOperation = deniedExtendedOperation;
    return this;
  }

  public AddClientConnectionPolicyRequest addDeniedExtendedOperationItem(String deniedExtendedOperationItem) {
    if (this.deniedExtendedOperation == null) {
      this.deniedExtendedOperation = new ArrayList<>();
    }
    this.deniedExtendedOperation.add(deniedExtendedOperationItem);
    return this;
  }

   /**
   * Specifies the OIDs of the extended operations that clients associated with this Client Connection Policy will not be allowed to request.
   * @return deniedExtendedOperation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the OIDs of the extended operations that clients associated with this Client Connection Policy will not be allowed to request.")

  public List<String> getDeniedExtendedOperation() {
    return deniedExtendedOperation;
  }


  public void setDeniedExtendedOperation(List<String> deniedExtendedOperation) {
    
    
    
    this.deniedExtendedOperation = deniedExtendedOperation;
  }


  public AddClientConnectionPolicyRequest allowedAuthType(List<EnumclientConnectionPolicyAllowedAuthTypeProp> allowedAuthType) {
    
    
    
    
    this.allowedAuthType = allowedAuthType;
    return this;
  }

  public AddClientConnectionPolicyRequest addAllowedAuthTypeItem(EnumclientConnectionPolicyAllowedAuthTypeProp allowedAuthTypeItem) {
    if (this.allowedAuthType == null) {
      this.allowedAuthType = new ArrayList<>();
    }
    this.allowedAuthType.add(allowedAuthTypeItem);
    return this;
  }

   /**
   * Get allowedAuthType
   * @return allowedAuthType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<EnumclientConnectionPolicyAllowedAuthTypeProp> getAllowedAuthType() {
    return allowedAuthType;
  }


  public void setAllowedAuthType(List<EnumclientConnectionPolicyAllowedAuthTypeProp> allowedAuthType) {
    
    
    
    this.allowedAuthType = allowedAuthType;
  }


  public AddClientConnectionPolicyRequest allowedSASLMechanism(List<String> allowedSASLMechanism) {
    
    
    
    
    this.allowedSASLMechanism = allowedSASLMechanism;
    return this;
  }

  public AddClientConnectionPolicyRequest addAllowedSASLMechanismItem(String allowedSASLMechanismItem) {
    if (this.allowedSASLMechanism == null) {
      this.allowedSASLMechanism = new ArrayList<>();
    }
    this.allowedSASLMechanism.add(allowedSASLMechanismItem);
    return this;
  }

   /**
   * Specifies the names of the SASL mechanisms that clients associated with this Client Connection Policy will be allowed to request.
   * @return allowedSASLMechanism
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the names of the SASL mechanisms that clients associated with this Client Connection Policy will be allowed to request.")

  public List<String> getAllowedSASLMechanism() {
    return allowedSASLMechanism;
  }


  public void setAllowedSASLMechanism(List<String> allowedSASLMechanism) {
    
    
    
    this.allowedSASLMechanism = allowedSASLMechanism;
  }


  public AddClientConnectionPolicyRequest deniedSASLMechanism(List<String> deniedSASLMechanism) {
    
    
    
    
    this.deniedSASLMechanism = deniedSASLMechanism;
    return this;
  }

  public AddClientConnectionPolicyRequest addDeniedSASLMechanismItem(String deniedSASLMechanismItem) {
    if (this.deniedSASLMechanism == null) {
      this.deniedSASLMechanism = new ArrayList<>();
    }
    this.deniedSASLMechanism.add(deniedSASLMechanismItem);
    return this;
  }

   /**
   * Specifies the names of the SASL mechanisms that clients associated with this Client Connection Policy will not be allowed to request.
   * @return deniedSASLMechanism
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the names of the SASL mechanisms that clients associated with this Client Connection Policy will not be allowed to request.")

  public List<String> getDeniedSASLMechanism() {
    return deniedSASLMechanism;
  }


  public void setDeniedSASLMechanism(List<String> deniedSASLMechanism) {
    
    
    
    this.deniedSASLMechanism = deniedSASLMechanism;
  }


  public AddClientConnectionPolicyRequest allowedFilterType(List<EnumclientConnectionPolicyAllowedFilterTypeProp> allowedFilterType) {
    
    
    
    
    this.allowedFilterType = allowedFilterType;
    return this;
  }

  public AddClientConnectionPolicyRequest addAllowedFilterTypeItem(EnumclientConnectionPolicyAllowedFilterTypeProp allowedFilterTypeItem) {
    if (this.allowedFilterType == null) {
      this.allowedFilterType = new ArrayList<>();
    }
    this.allowedFilterType.add(allowedFilterTypeItem);
    return this;
  }

   /**
   * Get allowedFilterType
   * @return allowedFilterType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<EnumclientConnectionPolicyAllowedFilterTypeProp> getAllowedFilterType() {
    return allowedFilterType;
  }


  public void setAllowedFilterType(List<EnumclientConnectionPolicyAllowedFilterTypeProp> allowedFilterType) {
    
    
    
    this.allowedFilterType = allowedFilterType;
  }


  public AddClientConnectionPolicyRequest allowUnindexedSearches(Boolean allowUnindexedSearches) {
    
    
    
    
    this.allowUnindexedSearches = allowUnindexedSearches;
    return this;
  }

   /**
   * Indicates whether clients will be allowed to request search operations that cannot be efficiently processed using the set of indexes defined in the corresponding backend. Note that even if this is false, some clients may be able to request unindexed searches if the allow-unindexed-searches-with-control property has a value of true and the necessary conditions are satisfied.
   * @return allowUnindexedSearches
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether clients will be allowed to request search operations that cannot be efficiently processed using the set of indexes defined in the corresponding backend. Note that even if this is false, some clients may be able to request unindexed searches if the allow-unindexed-searches-with-control property has a value of true and the necessary conditions are satisfied.")

  public Boolean getAllowUnindexedSearches() {
    return allowUnindexedSearches;
  }


  public void setAllowUnindexedSearches(Boolean allowUnindexedSearches) {
    
    
    
    this.allowUnindexedSearches = allowUnindexedSearches;
  }


  public AddClientConnectionPolicyRequest allowUnindexedSearchesWithControl(Boolean allowUnindexedSearchesWithControl) {
    
    
    
    
    this.allowUnindexedSearchesWithControl = allowUnindexedSearchesWithControl;
    return this;
  }

   /**
   * Indicates whether clients will be allowed to request search operations that cannot be efficiently processed using the set of indexes defined in the corresponding backend, as long as the search request also includes the permit unindexed search request control and the requester has the unindexed-search-with-control privilege (or that privilege is disabled in the global configuration).
   * @return allowUnindexedSearchesWithControl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether clients will be allowed to request search operations that cannot be efficiently processed using the set of indexes defined in the corresponding backend, as long as the search request also includes the permit unindexed search request control and the requester has the unindexed-search-with-control privilege (or that privilege is disabled in the global configuration).")

  public Boolean getAllowUnindexedSearchesWithControl() {
    return allowUnindexedSearchesWithControl;
  }


  public void setAllowUnindexedSearchesWithControl(Boolean allowUnindexedSearchesWithControl) {
    
    
    
    this.allowUnindexedSearchesWithControl = allowUnindexedSearchesWithControl;
  }


  public AddClientConnectionPolicyRequest minimumSubstringLength(Integer minimumSubstringLength) {
    
    
    
    
    this.minimumSubstringLength = minimumSubstringLength;
    return this;
  }

   /**
   * Specifies the minimum number of consecutive bytes that must be present in any subInitial, subAny, or subFinal element of a substring filter component (i.e., the minimum number of consecutive bytes between wildcard characters in a substring filter). Any attempt to use a substring search with an element containing fewer than this number of bytes will be rejected.
   * @return minimumSubstringLength
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the minimum number of consecutive bytes that must be present in any subInitial, subAny, or subFinal element of a substring filter component (i.e., the minimum number of consecutive bytes between wildcard characters in a substring filter). Any attempt to use a substring search with an element containing fewer than this number of bytes will be rejected.")

  public Integer getMinimumSubstringLength() {
    return minimumSubstringLength;
  }


  public void setMinimumSubstringLength(Integer minimumSubstringLength) {
    
    
    
    this.minimumSubstringLength = minimumSubstringLength;
  }


  public AddClientConnectionPolicyRequest maximumConcurrentConnections(Integer maximumConcurrentConnections) {
    
    
    
    
    this.maximumConcurrentConnections = maximumConcurrentConnections;
    return this;
  }

   /**
   * Specifies the maximum number of client connections which may be associated with this Client Connection Policy at any given time.
   * @return maximumConcurrentConnections
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the maximum number of client connections which may be associated with this Client Connection Policy at any given time.")

  public Integer getMaximumConcurrentConnections() {
    return maximumConcurrentConnections;
  }


  public void setMaximumConcurrentConnections(Integer maximumConcurrentConnections) {
    
    
    
    this.maximumConcurrentConnections = maximumConcurrentConnections;
  }


  public AddClientConnectionPolicyRequest maximumConnectionDuration(String maximumConnectionDuration) {
    
    
    
    
    this.maximumConnectionDuration = maximumConnectionDuration;
    return this;
  }

   /**
   * Specifies the maximum length of time that a connection associated with this Client Connection Policy may be established. Any connection which is associated with this Client Connection Policy and has been established for longer than this period of time may be terminated.
   * @return maximumConnectionDuration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the maximum length of time that a connection associated with this Client Connection Policy may be established. Any connection which is associated with this Client Connection Policy and has been established for longer than this period of time may be terminated.")

  public String getMaximumConnectionDuration() {
    return maximumConnectionDuration;
  }


  public void setMaximumConnectionDuration(String maximumConnectionDuration) {
    
    
    
    this.maximumConnectionDuration = maximumConnectionDuration;
  }


  public AddClientConnectionPolicyRequest maximumIdleConnectionDuration(String maximumIdleConnectionDuration) {
    
    
    
    
    this.maximumIdleConnectionDuration = maximumIdleConnectionDuration;
    return this;
  }

   /**
   * Specifies the maximum length of time that a connection associated with this Client Connection Policy may remain established after the completion of the last operation processed on that connection. Any new operation requested on the connection will reset this timer. Any connection associated with this Client Connection Policy which has been idle for longer than this length of time may be terminated.
   * @return maximumIdleConnectionDuration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the maximum length of time that a connection associated with this Client Connection Policy may remain established after the completion of the last operation processed on that connection. Any new operation requested on the connection will reset this timer. Any connection associated with this Client Connection Policy which has been idle for longer than this length of time may be terminated.")

  public String getMaximumIdleConnectionDuration() {
    return maximumIdleConnectionDuration;
  }


  public void setMaximumIdleConnectionDuration(String maximumIdleConnectionDuration) {
    
    
    
    this.maximumIdleConnectionDuration = maximumIdleConnectionDuration;
  }


  public AddClientConnectionPolicyRequest maximumOperationCountPerConnection(Integer maximumOperationCountPerConnection) {
    
    
    
    
    this.maximumOperationCountPerConnection = maximumOperationCountPerConnection;
    return this;
  }

   /**
   * Specifies the maximum number of operations that may be requested by any client connection associated with this Client Connection Policy. If an attempt is made to process more than this number of operations on a client connection, then that connection will be terminated.
   * @return maximumOperationCountPerConnection
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the maximum number of operations that may be requested by any client connection associated with this Client Connection Policy. If an attempt is made to process more than this number of operations on a client connection, then that connection will be terminated.")

  public Integer getMaximumOperationCountPerConnection() {
    return maximumOperationCountPerConnection;
  }


  public void setMaximumOperationCountPerConnection(Integer maximumOperationCountPerConnection) {
    
    
    
    this.maximumOperationCountPerConnection = maximumOperationCountPerConnection;
  }


  public AddClientConnectionPolicyRequest maximumConcurrentOperationsPerConnection(Integer maximumConcurrentOperationsPerConnection) {
    
    
    
    
    this.maximumConcurrentOperationsPerConnection = maximumConcurrentOperationsPerConnection;
    return this;
  }

   /**
   * Specifies the maximum number of concurrent operations that can be in progress for any connection. This can help prevent a single client connection from monopolizing server processing resources by sending a large number of concurrent asynchronous requests. A value of zero indicates that no limit will be placed on the number of concurrent requests for a single client.
   * @return maximumConcurrentOperationsPerConnection
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the maximum number of concurrent operations that can be in progress for any connection. This can help prevent a single client connection from monopolizing server processing resources by sending a large number of concurrent asynchronous requests. A value of zero indicates that no limit will be placed on the number of concurrent requests for a single client.")

  public Integer getMaximumConcurrentOperationsPerConnection() {
    return maximumConcurrentOperationsPerConnection;
  }


  public void setMaximumConcurrentOperationsPerConnection(Integer maximumConcurrentOperationsPerConnection) {
    
    
    
    this.maximumConcurrentOperationsPerConnection = maximumConcurrentOperationsPerConnection;
  }


  public AddClientConnectionPolicyRequest maximumConcurrentOperationWaitTimeBeforeRejecting(String maximumConcurrentOperationWaitTimeBeforeRejecting) {
    
    
    
    
    this.maximumConcurrentOperationWaitTimeBeforeRejecting = maximumConcurrentOperationWaitTimeBeforeRejecting;
    return this;
  }

   /**
   * Specifies the maximum length of time that the server should wait for an outstanding operation to complete before rejecting a new request received when the maximum number of outstanding operations are already in progress on that connection. If an existing outstanding operation on the connection completes before this time, then the operation will be processed. Otherwise, the operation will be rejected with a \&quot;busy\&quot; result.
   * @return maximumConcurrentOperationWaitTimeBeforeRejecting
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the maximum length of time that the server should wait for an outstanding operation to complete before rejecting a new request received when the maximum number of outstanding operations are already in progress on that connection. If an existing outstanding operation on the connection completes before this time, then the operation will be processed. Otherwise, the operation will be rejected with a \"busy\" result.")

  public String getMaximumConcurrentOperationWaitTimeBeforeRejecting() {
    return maximumConcurrentOperationWaitTimeBeforeRejecting;
  }


  public void setMaximumConcurrentOperationWaitTimeBeforeRejecting(String maximumConcurrentOperationWaitTimeBeforeRejecting) {
    
    
    
    this.maximumConcurrentOperationWaitTimeBeforeRejecting = maximumConcurrentOperationWaitTimeBeforeRejecting;
  }


  public AddClientConnectionPolicyRequest maximumConcurrentOperationsPerConnectionExceededBehavior(EnumclientConnectionPolicyMaximumConcurrentOperationsPerConnectionExceededBehaviorProp maximumConcurrentOperationsPerConnectionExceededBehavior) {
    
    
    
    
    this.maximumConcurrentOperationsPerConnectionExceededBehavior = maximumConcurrentOperationsPerConnectionExceededBehavior;
    return this;
  }

   /**
   * Get maximumConcurrentOperationsPerConnectionExceededBehavior
   * @return maximumConcurrentOperationsPerConnectionExceededBehavior
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EnumclientConnectionPolicyMaximumConcurrentOperationsPerConnectionExceededBehaviorProp getMaximumConcurrentOperationsPerConnectionExceededBehavior() {
    return maximumConcurrentOperationsPerConnectionExceededBehavior;
  }


  public void setMaximumConcurrentOperationsPerConnectionExceededBehavior(EnumclientConnectionPolicyMaximumConcurrentOperationsPerConnectionExceededBehaviorProp maximumConcurrentOperationsPerConnectionExceededBehavior) {
    
    
    
    this.maximumConcurrentOperationsPerConnectionExceededBehavior = maximumConcurrentOperationsPerConnectionExceededBehavior;
  }


  public AddClientConnectionPolicyRequest maximumConnectionOperationRate(List<String> maximumConnectionOperationRate) {
    
    
    
    
    this.maximumConnectionOperationRate = maximumConnectionOperationRate;
    return this;
  }

  public AddClientConnectionPolicyRequest addMaximumConnectionOperationRateItem(String maximumConnectionOperationRateItem) {
    if (this.maximumConnectionOperationRate == null) {
      this.maximumConnectionOperationRate = new ArrayList<>();
    }
    this.maximumConnectionOperationRate.add(maximumConnectionOperationRateItem);
    return this;
  }

   /**
   * Specifies the maximum rate at which a client associated with this Client Connection Policy may issue requests to the Directory Server. If any client attempts to request operations at a rate higher than this limit, then the server will exhibit the behavior described in the connection-operation-rate-exceeded-behavior property.
   * @return maximumConnectionOperationRate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the maximum rate at which a client associated with this Client Connection Policy may issue requests to the Directory Server. If any client attempts to request operations at a rate higher than this limit, then the server will exhibit the behavior described in the connection-operation-rate-exceeded-behavior property.")

  public List<String> getMaximumConnectionOperationRate() {
    return maximumConnectionOperationRate;
  }


  public void setMaximumConnectionOperationRate(List<String> maximumConnectionOperationRate) {
    
    
    
    this.maximumConnectionOperationRate = maximumConnectionOperationRate;
  }


  public AddClientConnectionPolicyRequest connectionOperationRateExceededBehavior(EnumclientConnectionPolicyConnectionOperationRateExceededBehaviorProp connectionOperationRateExceededBehavior) {
    
    
    
    
    this.connectionOperationRateExceededBehavior = connectionOperationRateExceededBehavior;
    return this;
  }

   /**
   * Get connectionOperationRateExceededBehavior
   * @return connectionOperationRateExceededBehavior
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EnumclientConnectionPolicyConnectionOperationRateExceededBehaviorProp getConnectionOperationRateExceededBehavior() {
    return connectionOperationRateExceededBehavior;
  }


  public void setConnectionOperationRateExceededBehavior(EnumclientConnectionPolicyConnectionOperationRateExceededBehaviorProp connectionOperationRateExceededBehavior) {
    
    
    
    this.connectionOperationRateExceededBehavior = connectionOperationRateExceededBehavior;
  }


  public AddClientConnectionPolicyRequest maximumPolicyOperationRate(List<String> maximumPolicyOperationRate) {
    
    
    
    
    this.maximumPolicyOperationRate = maximumPolicyOperationRate;
    return this;
  }

  public AddClientConnectionPolicyRequest addMaximumPolicyOperationRateItem(String maximumPolicyOperationRateItem) {
    if (this.maximumPolicyOperationRate == null) {
      this.maximumPolicyOperationRate = new ArrayList<>();
    }
    this.maximumPolicyOperationRate.add(maximumPolicyOperationRateItem);
    return this;
  }

   /**
   * Specifies the maximum rate at which all clients associated with this Client Connection Policy, as a collective set, may issue requests to the Directory Server. If this limit is exceeded, then the server will exhibit the behavior described in the policy-operation-rate-exceeded-behavior property.
   * @return maximumPolicyOperationRate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the maximum rate at which all clients associated with this Client Connection Policy, as a collective set, may issue requests to the Directory Server. If this limit is exceeded, then the server will exhibit the behavior described in the policy-operation-rate-exceeded-behavior property.")

  public List<String> getMaximumPolicyOperationRate() {
    return maximumPolicyOperationRate;
  }


  public void setMaximumPolicyOperationRate(List<String> maximumPolicyOperationRate) {
    
    
    
    this.maximumPolicyOperationRate = maximumPolicyOperationRate;
  }


  public AddClientConnectionPolicyRequest policyOperationRateExceededBehavior(EnumclientConnectionPolicyPolicyOperationRateExceededBehaviorProp policyOperationRateExceededBehavior) {
    
    
    
    
    this.policyOperationRateExceededBehavior = policyOperationRateExceededBehavior;
    return this;
  }

   /**
   * Get policyOperationRateExceededBehavior
   * @return policyOperationRateExceededBehavior
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EnumclientConnectionPolicyPolicyOperationRateExceededBehaviorProp getPolicyOperationRateExceededBehavior() {
    return policyOperationRateExceededBehavior;
  }


  public void setPolicyOperationRateExceededBehavior(EnumclientConnectionPolicyPolicyOperationRateExceededBehaviorProp policyOperationRateExceededBehavior) {
    
    
    
    this.policyOperationRateExceededBehavior = policyOperationRateExceededBehavior;
  }


  public AddClientConnectionPolicyRequest maximumSearchSizeLimit(Integer maximumSearchSizeLimit) {
    
    
    
    
    this.maximumSearchSizeLimit = maximumSearchSizeLimit;
    return this;
  }

   /**
   * Specifies the maximum number of entries that may be returned for a search performed by a client associated with this Client Connection Policy.
   * @return maximumSearchSizeLimit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the maximum number of entries that may be returned for a search performed by a client associated with this Client Connection Policy.")

  public Integer getMaximumSearchSizeLimit() {
    return maximumSearchSizeLimit;
  }


  public void setMaximumSearchSizeLimit(Integer maximumSearchSizeLimit) {
    
    
    
    this.maximumSearchSizeLimit = maximumSearchSizeLimit;
  }


  public AddClientConnectionPolicyRequest maximumSearchTimeLimit(String maximumSearchTimeLimit) {
    
    
    
    
    this.maximumSearchTimeLimit = maximumSearchTimeLimit;
    return this;
  }

   /**
   * Specifies the maximum length of time that the server should spend processing search operations requested by clients associated with this Client Connection Policy.
   * @return maximumSearchTimeLimit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the maximum length of time that the server should spend processing search operations requested by clients associated with this Client Connection Policy.")

  public String getMaximumSearchTimeLimit() {
    return maximumSearchTimeLimit;
  }


  public void setMaximumSearchTimeLimit(String maximumSearchTimeLimit) {
    
    
    
    this.maximumSearchTimeLimit = maximumSearchTimeLimit;
  }


  public AddClientConnectionPolicyRequest maximumSearchLookthroughLimit(Integer maximumSearchLookthroughLimit) {
    
    
    
    
    this.maximumSearchLookthroughLimit = maximumSearchLookthroughLimit;
    return this;
  }

   /**
   * Specifies the maximum number of entries that may be examined by a backend in the course of processing a search requested by clients associated with this Client Connection Policy.
   * @return maximumSearchLookthroughLimit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the maximum number of entries that may be examined by a backend in the course of processing a search requested by clients associated with this Client Connection Policy.")

  public Integer getMaximumSearchLookthroughLimit() {
    return maximumSearchLookthroughLimit;
  }


  public void setMaximumSearchLookthroughLimit(Integer maximumSearchLookthroughLimit) {
    
    
    
    this.maximumSearchLookthroughLimit = maximumSearchLookthroughLimit;
  }


  public AddClientConnectionPolicyRequest maximumLDAPJoinSizeLimit(Integer maximumLDAPJoinSizeLimit) {
    
    
    
    
    this.maximumLDAPJoinSizeLimit = maximumLDAPJoinSizeLimit;
    return this;
  }

   /**
   * Specifies the maximum number of entries that may be joined with any single search result entry for a search request performed by a client associated with this Client Connection Policy.
   * @return maximumLDAPJoinSizeLimit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the maximum number of entries that may be joined with any single search result entry for a search request performed by a client associated with this Client Connection Policy.")

  public Integer getMaximumLDAPJoinSizeLimit() {
    return maximumLDAPJoinSizeLimit;
  }


  public void setMaximumLDAPJoinSizeLimit(Integer maximumLDAPJoinSizeLimit) {
    
    
    
    this.maximumLDAPJoinSizeLimit = maximumLDAPJoinSizeLimit;
  }


  public AddClientConnectionPolicyRequest maximumSortSizeLimitWithoutVLVIndex(Integer maximumSortSizeLimitWithoutVLVIndex) {
    
    
    
    
    this.maximumSortSizeLimitWithoutVLVIndex = maximumSortSizeLimitWithoutVLVIndex;
    return this;
  }

   /**
   * Specifies the maximum number of entries that the server will attempt to sort without the benefit of a VLV index. A value of zero indicates that no limit should be enforced.
   * @return maximumSortSizeLimitWithoutVLVIndex
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the maximum number of entries that the server will attempt to sort without the benefit of a VLV index. A value of zero indicates that no limit should be enforced.")

  public Integer getMaximumSortSizeLimitWithoutVLVIndex() {
    return maximumSortSizeLimitWithoutVLVIndex;
  }


  public void setMaximumSortSizeLimitWithoutVLVIndex(Integer maximumSortSizeLimitWithoutVLVIndex) {
    
    
    
    this.maximumSortSizeLimitWithoutVLVIndex = maximumSortSizeLimitWithoutVLVIndex;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the AddClientConnectionPolicyRequest instance itself
   */
  public AddClientConnectionPolicyRequest putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AddClientConnectionPolicyRequest addClientConnectionPolicyRequest = (AddClientConnectionPolicyRequest) o;
    return Objects.equals(this.policyName, addClientConnectionPolicyRequest.policyName) &&
        Objects.equals(this.description, addClientConnectionPolicyRequest.description) &&
        Objects.equals(this.schemas, addClientConnectionPolicyRequest.schemas) &&
        Objects.equals(this.policyID, addClientConnectionPolicyRequest.policyID) &&
        Objects.equals(this.enabled, addClientConnectionPolicyRequest.enabled) &&
        Objects.equals(this.evaluationOrderIndex, addClientConnectionPolicyRequest.evaluationOrderIndex) &&
        Objects.equals(this.connectionCriteria, addClientConnectionPolicyRequest.connectionCriteria) &&
        Objects.equals(this.terminateConnection, addClientConnectionPolicyRequest.terminateConnection) &&
        Objects.equals(this.sensitiveAttribute, addClientConnectionPolicyRequest.sensitiveAttribute) &&
        Objects.equals(this.excludeGlobalSensitiveAttribute, addClientConnectionPolicyRequest.excludeGlobalSensitiveAttribute) &&
        Objects.equals(this.resultCodeMap, addClientConnectionPolicyRequest.resultCodeMap) &&
        Objects.equals(this.includedBackendBaseDN, addClientConnectionPolicyRequest.includedBackendBaseDN) &&
        Objects.equals(this.excludedBackendBaseDN, addClientConnectionPolicyRequest.excludedBackendBaseDN) &&
        Objects.equals(this.allowedOperation, addClientConnectionPolicyRequest.allowedOperation) &&
        Objects.equals(this.requiredOperationRequestCriteria, addClientConnectionPolicyRequest.requiredOperationRequestCriteria) &&
        Objects.equals(this.prohibitedOperationRequestCriteria, addClientConnectionPolicyRequest.prohibitedOperationRequestCriteria) &&
        Objects.equals(this.allowedRequestControl, addClientConnectionPolicyRequest.allowedRequestControl) &&
        Objects.equals(this.deniedRequestControl, addClientConnectionPolicyRequest.deniedRequestControl) &&
        Objects.equals(this.allowedExtendedOperation, addClientConnectionPolicyRequest.allowedExtendedOperation) &&
        Objects.equals(this.deniedExtendedOperation, addClientConnectionPolicyRequest.deniedExtendedOperation) &&
        Objects.equals(this.allowedAuthType, addClientConnectionPolicyRequest.allowedAuthType) &&
        Objects.equals(this.allowedSASLMechanism, addClientConnectionPolicyRequest.allowedSASLMechanism) &&
        Objects.equals(this.deniedSASLMechanism, addClientConnectionPolicyRequest.deniedSASLMechanism) &&
        Objects.equals(this.allowedFilterType, addClientConnectionPolicyRequest.allowedFilterType) &&
        Objects.equals(this.allowUnindexedSearches, addClientConnectionPolicyRequest.allowUnindexedSearches) &&
        Objects.equals(this.allowUnindexedSearchesWithControl, addClientConnectionPolicyRequest.allowUnindexedSearchesWithControl) &&
        Objects.equals(this.minimumSubstringLength, addClientConnectionPolicyRequest.minimumSubstringLength) &&
        Objects.equals(this.maximumConcurrentConnections, addClientConnectionPolicyRequest.maximumConcurrentConnections) &&
        Objects.equals(this.maximumConnectionDuration, addClientConnectionPolicyRequest.maximumConnectionDuration) &&
        Objects.equals(this.maximumIdleConnectionDuration, addClientConnectionPolicyRequest.maximumIdleConnectionDuration) &&
        Objects.equals(this.maximumOperationCountPerConnection, addClientConnectionPolicyRequest.maximumOperationCountPerConnection) &&
        Objects.equals(this.maximumConcurrentOperationsPerConnection, addClientConnectionPolicyRequest.maximumConcurrentOperationsPerConnection) &&
        Objects.equals(this.maximumConcurrentOperationWaitTimeBeforeRejecting, addClientConnectionPolicyRequest.maximumConcurrentOperationWaitTimeBeforeRejecting) &&
        Objects.equals(this.maximumConcurrentOperationsPerConnectionExceededBehavior, addClientConnectionPolicyRequest.maximumConcurrentOperationsPerConnectionExceededBehavior) &&
        Objects.equals(this.maximumConnectionOperationRate, addClientConnectionPolicyRequest.maximumConnectionOperationRate) &&
        Objects.equals(this.connectionOperationRateExceededBehavior, addClientConnectionPolicyRequest.connectionOperationRateExceededBehavior) &&
        Objects.equals(this.maximumPolicyOperationRate, addClientConnectionPolicyRequest.maximumPolicyOperationRate) &&
        Objects.equals(this.policyOperationRateExceededBehavior, addClientConnectionPolicyRequest.policyOperationRateExceededBehavior) &&
        Objects.equals(this.maximumSearchSizeLimit, addClientConnectionPolicyRequest.maximumSearchSizeLimit) &&
        Objects.equals(this.maximumSearchTimeLimit, addClientConnectionPolicyRequest.maximumSearchTimeLimit) &&
        Objects.equals(this.maximumSearchLookthroughLimit, addClientConnectionPolicyRequest.maximumSearchLookthroughLimit) &&
        Objects.equals(this.maximumLDAPJoinSizeLimit, addClientConnectionPolicyRequest.maximumLDAPJoinSizeLimit) &&
        Objects.equals(this.maximumSortSizeLimitWithoutVLVIndex, addClientConnectionPolicyRequest.maximumSortSizeLimitWithoutVLVIndex)&&
        Objects.equals(this.additionalProperties, addClientConnectionPolicyRequest.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(policyName, description, schemas, policyID, enabled, evaluationOrderIndex, connectionCriteria, terminateConnection, sensitiveAttribute, excludeGlobalSensitiveAttribute, resultCodeMap, includedBackendBaseDN, excludedBackendBaseDN, allowedOperation, requiredOperationRequestCriteria, prohibitedOperationRequestCriteria, allowedRequestControl, deniedRequestControl, allowedExtendedOperation, deniedExtendedOperation, allowedAuthType, allowedSASLMechanism, deniedSASLMechanism, allowedFilterType, allowUnindexedSearches, allowUnindexedSearchesWithControl, minimumSubstringLength, maximumConcurrentConnections, maximumConnectionDuration, maximumIdleConnectionDuration, maximumOperationCountPerConnection, maximumConcurrentOperationsPerConnection, maximumConcurrentOperationWaitTimeBeforeRejecting, maximumConcurrentOperationsPerConnectionExceededBehavior, maximumConnectionOperationRate, connectionOperationRateExceededBehavior, maximumPolicyOperationRate, policyOperationRateExceededBehavior, maximumSearchSizeLimit, maximumSearchTimeLimit, maximumSearchLookthroughLimit, maximumLDAPJoinSizeLimit, maximumSortSizeLimitWithoutVLVIndex, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AddClientConnectionPolicyRequest {\n");
    sb.append("    policyName: ").append(toIndentedString(policyName)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    schemas: ").append(toIndentedString(schemas)).append("\n");
    sb.append("    policyID: ").append(toIndentedString(policyID)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    evaluationOrderIndex: ").append(toIndentedString(evaluationOrderIndex)).append("\n");
    sb.append("    connectionCriteria: ").append(toIndentedString(connectionCriteria)).append("\n");
    sb.append("    terminateConnection: ").append(toIndentedString(terminateConnection)).append("\n");
    sb.append("    sensitiveAttribute: ").append(toIndentedString(sensitiveAttribute)).append("\n");
    sb.append("    excludeGlobalSensitiveAttribute: ").append(toIndentedString(excludeGlobalSensitiveAttribute)).append("\n");
    sb.append("    resultCodeMap: ").append(toIndentedString(resultCodeMap)).append("\n");
    sb.append("    includedBackendBaseDN: ").append(toIndentedString(includedBackendBaseDN)).append("\n");
    sb.append("    excludedBackendBaseDN: ").append(toIndentedString(excludedBackendBaseDN)).append("\n");
    sb.append("    allowedOperation: ").append(toIndentedString(allowedOperation)).append("\n");
    sb.append("    requiredOperationRequestCriteria: ").append(toIndentedString(requiredOperationRequestCriteria)).append("\n");
    sb.append("    prohibitedOperationRequestCriteria: ").append(toIndentedString(prohibitedOperationRequestCriteria)).append("\n");
    sb.append("    allowedRequestControl: ").append(toIndentedString(allowedRequestControl)).append("\n");
    sb.append("    deniedRequestControl: ").append(toIndentedString(deniedRequestControl)).append("\n");
    sb.append("    allowedExtendedOperation: ").append(toIndentedString(allowedExtendedOperation)).append("\n");
    sb.append("    deniedExtendedOperation: ").append(toIndentedString(deniedExtendedOperation)).append("\n");
    sb.append("    allowedAuthType: ").append(toIndentedString(allowedAuthType)).append("\n");
    sb.append("    allowedSASLMechanism: ").append(toIndentedString(allowedSASLMechanism)).append("\n");
    sb.append("    deniedSASLMechanism: ").append(toIndentedString(deniedSASLMechanism)).append("\n");
    sb.append("    allowedFilterType: ").append(toIndentedString(allowedFilterType)).append("\n");
    sb.append("    allowUnindexedSearches: ").append(toIndentedString(allowUnindexedSearches)).append("\n");
    sb.append("    allowUnindexedSearchesWithControl: ").append(toIndentedString(allowUnindexedSearchesWithControl)).append("\n");
    sb.append("    minimumSubstringLength: ").append(toIndentedString(minimumSubstringLength)).append("\n");
    sb.append("    maximumConcurrentConnections: ").append(toIndentedString(maximumConcurrentConnections)).append("\n");
    sb.append("    maximumConnectionDuration: ").append(toIndentedString(maximumConnectionDuration)).append("\n");
    sb.append("    maximumIdleConnectionDuration: ").append(toIndentedString(maximumIdleConnectionDuration)).append("\n");
    sb.append("    maximumOperationCountPerConnection: ").append(toIndentedString(maximumOperationCountPerConnection)).append("\n");
    sb.append("    maximumConcurrentOperationsPerConnection: ").append(toIndentedString(maximumConcurrentOperationsPerConnection)).append("\n");
    sb.append("    maximumConcurrentOperationWaitTimeBeforeRejecting: ").append(toIndentedString(maximumConcurrentOperationWaitTimeBeforeRejecting)).append("\n");
    sb.append("    maximumConcurrentOperationsPerConnectionExceededBehavior: ").append(toIndentedString(maximumConcurrentOperationsPerConnectionExceededBehavior)).append("\n");
    sb.append("    maximumConnectionOperationRate: ").append(toIndentedString(maximumConnectionOperationRate)).append("\n");
    sb.append("    connectionOperationRateExceededBehavior: ").append(toIndentedString(connectionOperationRateExceededBehavior)).append("\n");
    sb.append("    maximumPolicyOperationRate: ").append(toIndentedString(maximumPolicyOperationRate)).append("\n");
    sb.append("    policyOperationRateExceededBehavior: ").append(toIndentedString(policyOperationRateExceededBehavior)).append("\n");
    sb.append("    maximumSearchSizeLimit: ").append(toIndentedString(maximumSearchSizeLimit)).append("\n");
    sb.append("    maximumSearchTimeLimit: ").append(toIndentedString(maximumSearchTimeLimit)).append("\n");
    sb.append("    maximumSearchLookthroughLimit: ").append(toIndentedString(maximumSearchLookthroughLimit)).append("\n");
    sb.append("    maximumLDAPJoinSizeLimit: ").append(toIndentedString(maximumLDAPJoinSizeLimit)).append("\n");
    sb.append("    maximumSortSizeLimitWithoutVLVIndex: ").append(toIndentedString(maximumSortSizeLimitWithoutVLVIndex)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("policyName");
    openapiFields.add("description");
    openapiFields.add("schemas");
    openapiFields.add("policyID");
    openapiFields.add("enabled");
    openapiFields.add("evaluationOrderIndex");
    openapiFields.add("connectionCriteria");
    openapiFields.add("terminateConnection");
    openapiFields.add("sensitiveAttribute");
    openapiFields.add("excludeGlobalSensitiveAttribute");
    openapiFields.add("resultCodeMap");
    openapiFields.add("includedBackendBaseDN");
    openapiFields.add("excludedBackendBaseDN");
    openapiFields.add("allowedOperation");
    openapiFields.add("requiredOperationRequestCriteria");
    openapiFields.add("prohibitedOperationRequestCriteria");
    openapiFields.add("allowedRequestControl");
    openapiFields.add("deniedRequestControl");
    openapiFields.add("allowedExtendedOperation");
    openapiFields.add("deniedExtendedOperation");
    openapiFields.add("allowedAuthType");
    openapiFields.add("allowedSASLMechanism");
    openapiFields.add("deniedSASLMechanism");
    openapiFields.add("allowedFilterType");
    openapiFields.add("allowUnindexedSearches");
    openapiFields.add("allowUnindexedSearchesWithControl");
    openapiFields.add("minimumSubstringLength");
    openapiFields.add("maximumConcurrentConnections");
    openapiFields.add("maximumConnectionDuration");
    openapiFields.add("maximumIdleConnectionDuration");
    openapiFields.add("maximumOperationCountPerConnection");
    openapiFields.add("maximumConcurrentOperationsPerConnection");
    openapiFields.add("maximumConcurrentOperationWaitTimeBeforeRejecting");
    openapiFields.add("maximumConcurrentOperationsPerConnectionExceededBehavior");
    openapiFields.add("maximumConnectionOperationRate");
    openapiFields.add("connectionOperationRateExceededBehavior");
    openapiFields.add("maximumPolicyOperationRate");
    openapiFields.add("policyOperationRateExceededBehavior");
    openapiFields.add("maximumSearchSizeLimit");
    openapiFields.add("maximumSearchTimeLimit");
    openapiFields.add("maximumSearchLookthroughLimit");
    openapiFields.add("maximumLDAPJoinSizeLimit");
    openapiFields.add("maximumSortSizeLimitWithoutVLVIndex");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("policyName");
    openapiRequiredFields.add("policyID");
    openapiRequiredFields.add("enabled");
    openapiRequiredFields.add("evaluationOrderIndex");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to AddClientConnectionPolicyRequest
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!AddClientConnectionPolicyRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AddClientConnectionPolicyRequest is not found in the empty JSON string", AddClientConnectionPolicyRequest.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : AddClientConnectionPolicyRequest.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("policyName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `policyName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("policyName").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("schemas") != null && !jsonObj.get("schemas").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `schemas` to be an array in the JSON string but got `%s`", jsonObj.get("schemas").toString()));
      }
      if (!jsonObj.get("policyID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `policyID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("policyID").toString()));
      }
      if ((jsonObj.get("connectionCriteria") != null && !jsonObj.get("connectionCriteria").isJsonNull()) && !jsonObj.get("connectionCriteria").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `connectionCriteria` to be a primitive type in the JSON string but got `%s`", jsonObj.get("connectionCriteria").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("sensitiveAttribute") != null && !jsonObj.get("sensitiveAttribute").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `sensitiveAttribute` to be an array in the JSON string but got `%s`", jsonObj.get("sensitiveAttribute").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("excludeGlobalSensitiveAttribute") != null && !jsonObj.get("excludeGlobalSensitiveAttribute").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `excludeGlobalSensitiveAttribute` to be an array in the JSON string but got `%s`", jsonObj.get("excludeGlobalSensitiveAttribute").toString()));
      }
      if ((jsonObj.get("resultCodeMap") != null && !jsonObj.get("resultCodeMap").isJsonNull()) && !jsonObj.get("resultCodeMap").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resultCodeMap` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resultCodeMap").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("includedBackendBaseDN") != null && !jsonObj.get("includedBackendBaseDN").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `includedBackendBaseDN` to be an array in the JSON string but got `%s`", jsonObj.get("includedBackendBaseDN").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("excludedBackendBaseDN") != null && !jsonObj.get("excludedBackendBaseDN").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `excludedBackendBaseDN` to be an array in the JSON string but got `%s`", jsonObj.get("excludedBackendBaseDN").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("allowedOperation") != null && !jsonObj.get("allowedOperation").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `allowedOperation` to be an array in the JSON string but got `%s`", jsonObj.get("allowedOperation").toString()));
      }
      if ((jsonObj.get("requiredOperationRequestCriteria") != null && !jsonObj.get("requiredOperationRequestCriteria").isJsonNull()) && !jsonObj.get("requiredOperationRequestCriteria").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `requiredOperationRequestCriteria` to be a primitive type in the JSON string but got `%s`", jsonObj.get("requiredOperationRequestCriteria").toString()));
      }
      if ((jsonObj.get("prohibitedOperationRequestCriteria") != null && !jsonObj.get("prohibitedOperationRequestCriteria").isJsonNull()) && !jsonObj.get("prohibitedOperationRequestCriteria").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `prohibitedOperationRequestCriteria` to be a primitive type in the JSON string but got `%s`", jsonObj.get("prohibitedOperationRequestCriteria").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("allowedRequestControl") != null && !jsonObj.get("allowedRequestControl").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `allowedRequestControl` to be an array in the JSON string but got `%s`", jsonObj.get("allowedRequestControl").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("deniedRequestControl") != null && !jsonObj.get("deniedRequestControl").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `deniedRequestControl` to be an array in the JSON string but got `%s`", jsonObj.get("deniedRequestControl").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("allowedExtendedOperation") != null && !jsonObj.get("allowedExtendedOperation").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `allowedExtendedOperation` to be an array in the JSON string but got `%s`", jsonObj.get("allowedExtendedOperation").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("deniedExtendedOperation") != null && !jsonObj.get("deniedExtendedOperation").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `deniedExtendedOperation` to be an array in the JSON string but got `%s`", jsonObj.get("deniedExtendedOperation").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("allowedAuthType") != null && !jsonObj.get("allowedAuthType").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `allowedAuthType` to be an array in the JSON string but got `%s`", jsonObj.get("allowedAuthType").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("allowedSASLMechanism") != null && !jsonObj.get("allowedSASLMechanism").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `allowedSASLMechanism` to be an array in the JSON string but got `%s`", jsonObj.get("allowedSASLMechanism").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("deniedSASLMechanism") != null && !jsonObj.get("deniedSASLMechanism").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `deniedSASLMechanism` to be an array in the JSON string but got `%s`", jsonObj.get("deniedSASLMechanism").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("allowedFilterType") != null && !jsonObj.get("allowedFilterType").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `allowedFilterType` to be an array in the JSON string but got `%s`", jsonObj.get("allowedFilterType").toString()));
      }
      if ((jsonObj.get("maximumConnectionDuration") != null && !jsonObj.get("maximumConnectionDuration").isJsonNull()) && !jsonObj.get("maximumConnectionDuration").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `maximumConnectionDuration` to be a primitive type in the JSON string but got `%s`", jsonObj.get("maximumConnectionDuration").toString()));
      }
      if ((jsonObj.get("maximumIdleConnectionDuration") != null && !jsonObj.get("maximumIdleConnectionDuration").isJsonNull()) && !jsonObj.get("maximumIdleConnectionDuration").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `maximumIdleConnectionDuration` to be a primitive type in the JSON string but got `%s`", jsonObj.get("maximumIdleConnectionDuration").toString()));
      }
      if ((jsonObj.get("maximumConcurrentOperationWaitTimeBeforeRejecting") != null && !jsonObj.get("maximumConcurrentOperationWaitTimeBeforeRejecting").isJsonNull()) && !jsonObj.get("maximumConcurrentOperationWaitTimeBeforeRejecting").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `maximumConcurrentOperationWaitTimeBeforeRejecting` to be a primitive type in the JSON string but got `%s`", jsonObj.get("maximumConcurrentOperationWaitTimeBeforeRejecting").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("maximumConnectionOperationRate") != null && !jsonObj.get("maximumConnectionOperationRate").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `maximumConnectionOperationRate` to be an array in the JSON string but got `%s`", jsonObj.get("maximumConnectionOperationRate").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("maximumPolicyOperationRate") != null && !jsonObj.get("maximumPolicyOperationRate").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `maximumPolicyOperationRate` to be an array in the JSON string but got `%s`", jsonObj.get("maximumPolicyOperationRate").toString()));
      }
      if ((jsonObj.get("maximumSearchTimeLimit") != null && !jsonObj.get("maximumSearchTimeLimit").isJsonNull()) && !jsonObj.get("maximumSearchTimeLimit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `maximumSearchTimeLimit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("maximumSearchTimeLimit").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AddClientConnectionPolicyRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AddClientConnectionPolicyRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AddClientConnectionPolicyRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AddClientConnectionPolicyRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<AddClientConnectionPolicyRequest>() {
           @Override
           public void write(JsonWriter out, AddClientConnectionPolicyRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public AddClientConnectionPolicyRequest read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             AddClientConnectionPolicyRequest instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AddClientConnectionPolicyRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AddClientConnectionPolicyRequest
  * @throws IOException if the JSON string is invalid with respect to AddClientConnectionPolicyRequest
  */
  public static AddClientConnectionPolicyRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AddClientConnectionPolicyRequest.class);
  }

 /**
  * Convert an instance of AddClientConnectionPolicyRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

