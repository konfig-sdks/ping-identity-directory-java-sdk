/*
 * PingData Config - OpenAPI 3.0
 * This is the PingData Configuration API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Specifies the names of any request controls that should be allowed by the Directory REST API. Any request that contains a critical control not in this list will be rejected. Any non-critical request control which is not supported by the Directory REST API will be removed from the request.
 */
@JsonAdapter(EnumhttpServletExtensionAllowedControlProp.Adapter.class)public enum EnumhttpServletExtensionAllowedControlProp {
  
  ACCESS_LOG_FIELD("access-log-field"),
  
  ASSERTION("assertion"),
  
  ASSURED_REPLICATION("assured-replication"),
  
  EXCLUDE_BRANCH("exclude-branch"),
  
  GENERATE_PASSWORD("generate-password"),
  
  GET_EFFECTIVE_RIGHTS("get-effective-rights"),
  
  GET_PASSWORD_POLICY_STATE_ISSUES("get-password-policy-state-issues"),
  
  GET_RECENT_LOGIN_HISTORY("get-recent-login-history"),
  
  GET_USER_RESOURCE_LIMITS("get-user-resource-limits"),
  
  IGNORE_NO_USER_MODIFICATION("ignore-no-user-modification"),
  
  INTERMEDIATE_CLIENT("intermediate-client"),
  
  JOIN("join"),
  
  MANAGE_DSA_IT("manage-dsa-it"),
  
  MATCHED_VALUES("matched-values"),
  
  MATCHING_ENTRY_COUNT("matching-entry-count"),
  
  NAME_WITH_ENTRYUUID("name-with-entryuuid"),
  
  NO_OP("no-op"),
  
  OPERATION_PURPOSE("operation-purpose"),
  
  PASSWORD_UPDATE_BEHAVIOR("password-update-behavior"),
  
  PASSWORD_VALIDATION_DETAILS("password-validation-details"),
  
  PERMISSIVE_MODIFY("permissive-modify"),
  
  PERMIT_UNINDEXED_SEARCH("permit-unindexed-search"),
  
  POST_READ("post-read"),
  
  PRE_READ("pre-read"),
  
  PROXIED_AUTHORIZATION_V1("proxied-authorization-v1"),
  
  PROXIED_AUTHORIZATION_V2("proxied-authorization-v2"),
  
  PURGE_PASSWORD("purge-password"),
  
  REAL_ATTRIBUTES_ONLY("real-attributes-only"),
  
  REJECT_UNINDEXED_SEARCH("reject-unindexed-search"),
  
  RETIRE_PASSWORD("retire-password"),
  
  SUPPRESS_REFERENTIAL_INTEGRITY("suppress-referential-integrity"),
  
  UNIQUENESS("uniqueness"),
  
  VIRTUAL_ATTRIBUTES_ONLY("virtual-attributes-only");

  private String value;

  EnumhttpServletExtensionAllowedControlProp(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static EnumhttpServletExtensionAllowedControlProp fromValue(String value) {
    for (EnumhttpServletExtensionAllowedControlProp b : EnumhttpServletExtensionAllowedControlProp.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<EnumhttpServletExtensionAllowedControlProp> {
    @Override
    public void write(final JsonWriter jsonWriter, final EnumhttpServletExtensionAllowedControlProp enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public EnumhttpServletExtensionAllowedControlProp read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return EnumhttpServletExtensionAllowedControlProp.fromValue(value);
    }
  }
}

