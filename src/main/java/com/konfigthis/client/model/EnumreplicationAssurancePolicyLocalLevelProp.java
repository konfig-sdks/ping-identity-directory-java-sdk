/*
 * PingData Config - OpenAPI 3.0
 * This is the PingData Configuration API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Specifies the assurance level used to replicate to local servers. A local server is defined as one with the same value for the location setting in the global configuration.  The local-level must be set to an assurance level at least as strict as the remote-level. In other words, if remote-level is set to \&quot;received-any-remote-location\&quot; or \&quot;received-all-remote-locations\&quot;, then local-level must be either \&quot;received-any-server\&quot; or \&quot;processed-all-servers\&quot;. If remote-level is \&quot;processed-all-remote-servers\&quot;, then local-level must be \&quot;processed-all-servers\&quot;.
 */
@JsonAdapter(EnumreplicationAssurancePolicyLocalLevelProp.Adapter.class)public enum EnumreplicationAssurancePolicyLocalLevelProp {
  
  NONE("none"),
  
  RECEIVED_ANY_SERVER("received-any-server"),
  
  PROCESSED_ALL_SERVERS("processed-all-servers");

  private String value;

  EnumreplicationAssurancePolicyLocalLevelProp(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static EnumreplicationAssurancePolicyLocalLevelProp fromValue(String value) {
    for (EnumreplicationAssurancePolicyLocalLevelProp b : EnumreplicationAssurancePolicyLocalLevelProp.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<EnumreplicationAssurancePolicyLocalLevelProp> {
    @Override
    public void write(final JsonWriter jsonWriter, final EnumreplicationAssurancePolicyLocalLevelProp enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public EnumreplicationAssurancePolicyLocalLevelProp read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return EnumreplicationAssurancePolicyLocalLevelProp.fromValue(value);
    }
  }
}

