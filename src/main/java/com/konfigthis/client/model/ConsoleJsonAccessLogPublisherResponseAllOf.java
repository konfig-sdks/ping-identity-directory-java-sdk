/*
 * PingData Config - OpenAPI 3.0
 * This is the PingData Configuration API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.EnumconsoleJsonAccessLogPublisherSchemaUrn;
import com.konfigthis.client.model.EnumlogPublisherLoggingErrorBehaviorProp;
import com.konfigthis.client.model.EnumlogPublisherOutputLocationProp;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * ConsoleJsonAccessLogPublisherResponseAllOf
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class ConsoleJsonAccessLogPublisherResponseAllOf {
  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_SCHEMAS = "schemas";
  @SerializedName(SERIALIZED_NAME_SCHEMAS)
  private List<EnumconsoleJsonAccessLogPublisherSchemaUrn> schemas = null;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled;

  public static final String SERIALIZED_NAME_WRITE_MULTI_LINE_MESSAGES = "writeMultiLineMessages";
  @SerializedName(SERIALIZED_NAME_WRITE_MULTI_LINE_MESSAGES)
  private Boolean writeMultiLineMessages;

  public static final String SERIALIZED_NAME_OUTPUT_LOCATION = "outputLocation";
  @SerializedName(SERIALIZED_NAME_OUTPUT_LOCATION)
  private EnumlogPublisherOutputLocationProp outputLocation;

  public static final String SERIALIZED_NAME_INCLUDE_PRODUCT_NAME = "includeProductName";
  @SerializedName(SERIALIZED_NAME_INCLUDE_PRODUCT_NAME)
  private Boolean includeProductName;

  public static final String SERIALIZED_NAME_INCLUDE_INSTANCE_NAME = "includeInstanceName";
  @SerializedName(SERIALIZED_NAME_INCLUDE_INSTANCE_NAME)
  private Boolean includeInstanceName;

  public static final String SERIALIZED_NAME_INCLUDE_STARTUP_I_D = "includeStartupID";
  @SerializedName(SERIALIZED_NAME_INCLUDE_STARTUP_I_D)
  private Boolean includeStartupID;

  public static final String SERIALIZED_NAME_INCLUDE_THREAD_I_D = "includeThreadID";
  @SerializedName(SERIALIZED_NAME_INCLUDE_THREAD_I_D)
  private Boolean includeThreadID;

  public static final String SERIALIZED_NAME_INCLUDE_REQUESTER_D_N = "includeRequesterDN";
  @SerializedName(SERIALIZED_NAME_INCLUDE_REQUESTER_D_N)
  private Boolean includeRequesterDN;

  public static final String SERIALIZED_NAME_INCLUDE_REQUESTER_I_P_ADDRESS = "includeRequesterIPAddress";
  @SerializedName(SERIALIZED_NAME_INCLUDE_REQUESTER_I_P_ADDRESS)
  private Boolean includeRequesterIPAddress;

  public static final String SERIALIZED_NAME_INCLUDE_REQUEST_DETAILS_IN_RESULT_MESSAGES = "includeRequestDetailsInResultMessages";
  @SerializedName(SERIALIZED_NAME_INCLUDE_REQUEST_DETAILS_IN_RESULT_MESSAGES)
  private Boolean includeRequestDetailsInResultMessages;

  public static final String SERIALIZED_NAME_INCLUDE_REQUEST_DETAILS_IN_SEARCH_ENTRY_MESSAGES = "includeRequestDetailsInSearchEntryMessages";
  @SerializedName(SERIALIZED_NAME_INCLUDE_REQUEST_DETAILS_IN_SEARCH_ENTRY_MESSAGES)
  private Boolean includeRequestDetailsInSearchEntryMessages;

  public static final String SERIALIZED_NAME_INCLUDE_REQUEST_DETAILS_IN_SEARCH_REFERENCE_MESSAGES = "includeRequestDetailsInSearchReferenceMessages";
  @SerializedName(SERIALIZED_NAME_INCLUDE_REQUEST_DETAILS_IN_SEARCH_REFERENCE_MESSAGES)
  private Boolean includeRequestDetailsInSearchReferenceMessages;

  public static final String SERIALIZED_NAME_INCLUDE_REQUEST_DETAILS_IN_INTERMEDIATE_RESPONSE_MESSAGES = "includeRequestDetailsInIntermediateResponseMessages";
  @SerializedName(SERIALIZED_NAME_INCLUDE_REQUEST_DETAILS_IN_INTERMEDIATE_RESPONSE_MESSAGES)
  private Boolean includeRequestDetailsInIntermediateResponseMessages;

  public static final String SERIALIZED_NAME_INCLUDE_RESULT_CODE_NAMES = "includeResultCodeNames";
  @SerializedName(SERIALIZED_NAME_INCLUDE_RESULT_CODE_NAMES)
  private Boolean includeResultCodeNames;

  public static final String SERIALIZED_NAME_INCLUDE_EXTENDED_SEARCH_REQUEST_DETAILS = "includeExtendedSearchRequestDetails";
  @SerializedName(SERIALIZED_NAME_INCLUDE_EXTENDED_SEARCH_REQUEST_DETAILS)
  private Boolean includeExtendedSearchRequestDetails;

  public static final String SERIALIZED_NAME_INCLUDE_ADD_ATTRIBUTE_NAMES = "includeAddAttributeNames";
  @SerializedName(SERIALIZED_NAME_INCLUDE_ADD_ATTRIBUTE_NAMES)
  private Boolean includeAddAttributeNames;

  public static final String SERIALIZED_NAME_INCLUDE_MODIFY_ATTRIBUTE_NAMES = "includeModifyAttributeNames";
  @SerializedName(SERIALIZED_NAME_INCLUDE_MODIFY_ATTRIBUTE_NAMES)
  private Boolean includeModifyAttributeNames;

  public static final String SERIALIZED_NAME_INCLUDE_SEARCH_ENTRY_ATTRIBUTE_NAMES = "includeSearchEntryAttributeNames";
  @SerializedName(SERIALIZED_NAME_INCLUDE_SEARCH_ENTRY_ATTRIBUTE_NAMES)
  private Boolean includeSearchEntryAttributeNames;

  public static final String SERIALIZED_NAME_INCLUDE_REQUEST_CONTROLS = "includeRequestControls";
  @SerializedName(SERIALIZED_NAME_INCLUDE_REQUEST_CONTROLS)
  private Boolean includeRequestControls;

  public static final String SERIALIZED_NAME_INCLUDE_RESPONSE_CONTROLS = "includeResponseControls";
  @SerializedName(SERIALIZED_NAME_INCLUDE_RESPONSE_CONTROLS)
  private Boolean includeResponseControls;

  public static final String SERIALIZED_NAME_INCLUDE_REPLICATION_CHANGE_I_D = "includeReplicationChangeID";
  @SerializedName(SERIALIZED_NAME_INCLUDE_REPLICATION_CHANGE_I_D)
  private Boolean includeReplicationChangeID;

  public static final String SERIALIZED_NAME_GENERIFY_MESSAGE_STRINGS_WHEN_POSSIBLE = "generifyMessageStringsWhenPossible";
  @SerializedName(SERIALIZED_NAME_GENERIFY_MESSAGE_STRINGS_WHEN_POSSIBLE)
  private Boolean generifyMessageStringsWhenPossible;

  public static final String SERIALIZED_NAME_MAX_STRING_LENGTH = "maxStringLength";
  @SerializedName(SERIALIZED_NAME_MAX_STRING_LENGTH)
  private Integer maxStringLength;

  public static final String SERIALIZED_NAME_LOG_FIELD_BEHAVIOR = "logFieldBehavior";
  @SerializedName(SERIALIZED_NAME_LOG_FIELD_BEHAVIOR)
  private String logFieldBehavior;

  public static final String SERIALIZED_NAME_LOG_CONNECTS = "logConnects";
  @SerializedName(SERIALIZED_NAME_LOG_CONNECTS)
  private Boolean logConnects;

  public static final String SERIALIZED_NAME_LOG_DISCONNECTS = "logDisconnects";
  @SerializedName(SERIALIZED_NAME_LOG_DISCONNECTS)
  private Boolean logDisconnects;

  public static final String SERIALIZED_NAME_LOG_SECURITY_NEGOTIATION = "logSecurityNegotiation";
  @SerializedName(SERIALIZED_NAME_LOG_SECURITY_NEGOTIATION)
  private Boolean logSecurityNegotiation;

  public static final String SERIALIZED_NAME_LOG_CLIENT_CERTIFICATES = "logClientCertificates";
  @SerializedName(SERIALIZED_NAME_LOG_CLIENT_CERTIFICATES)
  private Boolean logClientCertificates;

  public static final String SERIALIZED_NAME_LOG_REQUESTS = "logRequests";
  @SerializedName(SERIALIZED_NAME_LOG_REQUESTS)
  private Boolean logRequests;

  public static final String SERIALIZED_NAME_LOG_RESULTS = "logResults";
  @SerializedName(SERIALIZED_NAME_LOG_RESULTS)
  private Boolean logResults;

  public static final String SERIALIZED_NAME_LOG_SEARCH_ENTRIES = "logSearchEntries";
  @SerializedName(SERIALIZED_NAME_LOG_SEARCH_ENTRIES)
  private Boolean logSearchEntries;

  public static final String SERIALIZED_NAME_LOG_SEARCH_REFERENCES = "logSearchReferences";
  @SerializedName(SERIALIZED_NAME_LOG_SEARCH_REFERENCES)
  private Boolean logSearchReferences;

  public static final String SERIALIZED_NAME_LOG_INTERMEDIATE_RESPONSES = "logIntermediateResponses";
  @SerializedName(SERIALIZED_NAME_LOG_INTERMEDIATE_RESPONSES)
  private Boolean logIntermediateResponses;

  public static final String SERIALIZED_NAME_SUPPRESS_INTERNAL_OPERATIONS = "suppressInternalOperations";
  @SerializedName(SERIALIZED_NAME_SUPPRESS_INTERNAL_OPERATIONS)
  private Boolean suppressInternalOperations;

  public static final String SERIALIZED_NAME_SUPPRESS_REPLICATION_OPERATIONS = "suppressReplicationOperations";
  @SerializedName(SERIALIZED_NAME_SUPPRESS_REPLICATION_OPERATIONS)
  private Boolean suppressReplicationOperations;

  public static final String SERIALIZED_NAME_CORRELATE_REQUESTS_AND_RESULTS = "correlateRequestsAndResults";
  @SerializedName(SERIALIZED_NAME_CORRELATE_REQUESTS_AND_RESULTS)
  private Boolean correlateRequestsAndResults;

  public static final String SERIALIZED_NAME_CONNECTION_CRITERIA = "connectionCriteria";
  @SerializedName(SERIALIZED_NAME_CONNECTION_CRITERIA)
  private String connectionCriteria;

  public static final String SERIALIZED_NAME_REQUEST_CRITERIA = "requestCriteria";
  @SerializedName(SERIALIZED_NAME_REQUEST_CRITERIA)
  private String requestCriteria;

  public static final String SERIALIZED_NAME_RESULT_CRITERIA = "resultCriteria";
  @SerializedName(SERIALIZED_NAME_RESULT_CRITERIA)
  private String resultCriteria;

  public static final String SERIALIZED_NAME_SEARCH_ENTRY_CRITERIA = "searchEntryCriteria";
  @SerializedName(SERIALIZED_NAME_SEARCH_ENTRY_CRITERIA)
  private String searchEntryCriteria;

  public static final String SERIALIZED_NAME_SEARCH_REFERENCE_CRITERIA = "searchReferenceCriteria";
  @SerializedName(SERIALIZED_NAME_SEARCH_REFERENCE_CRITERIA)
  private String searchReferenceCriteria;

  public static final String SERIALIZED_NAME_LOGGING_ERROR_BEHAVIOR = "loggingErrorBehavior";
  @SerializedName(SERIALIZED_NAME_LOGGING_ERROR_BEHAVIOR)
  private EnumlogPublisherLoggingErrorBehaviorProp loggingErrorBehavior;

  public ConsoleJsonAccessLogPublisherResponseAllOf() {
  }

  public ConsoleJsonAccessLogPublisherResponseAllOf description(String description) {
    
    
    
    
    this.description = description;
    return this;
  }

   /**
   * A description for this Log Publisher
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A description for this Log Publisher")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    
    
    
    this.description = description;
  }


  public ConsoleJsonAccessLogPublisherResponseAllOf schemas(List<EnumconsoleJsonAccessLogPublisherSchemaUrn> schemas) {
    
    
    
    
    this.schemas = schemas;
    return this;
  }

  public ConsoleJsonAccessLogPublisherResponseAllOf addSchemasItem(EnumconsoleJsonAccessLogPublisherSchemaUrn schemasItem) {
    if (this.schemas == null) {
      this.schemas = new ArrayList<>();
    }
    this.schemas.add(schemasItem);
    return this;
  }

   /**
   * Get schemas
   * @return schemas
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<EnumconsoleJsonAccessLogPublisherSchemaUrn> getSchemas() {
    return schemas;
  }


  public void setSchemas(List<EnumconsoleJsonAccessLogPublisherSchemaUrn> schemas) {
    
    
    
    this.schemas = schemas;
  }


  public ConsoleJsonAccessLogPublisherResponseAllOf id(String id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * Name of the Log Publisher
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name of the Log Publisher")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    
    
    
    this.id = id;
  }


  public ConsoleJsonAccessLogPublisherResponseAllOf enabled(Boolean enabled) {
    
    
    
    
    this.enabled = enabled;
    return this;
  }

   /**
   * Indicates whether the Console JSON Access Log Publisher is enabled for use.
   * @return enabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether the Console JSON Access Log Publisher is enabled for use.")

  public Boolean getEnabled() {
    return enabled;
  }


  public void setEnabled(Boolean enabled) {
    
    
    
    this.enabled = enabled;
  }


  public ConsoleJsonAccessLogPublisherResponseAllOf writeMultiLineMessages(Boolean writeMultiLineMessages) {
    
    
    
    
    this.writeMultiLineMessages = writeMultiLineMessages;
    return this;
  }

   /**
   * Indicates whether the JSON objects should be formatted to span multiple lines with a single element on each line. The multi-line format is potentially more user friendly (if administrators may need to look at the log files), but each message will be larger because of the additional spaces and end-of-line markers.
   * @return writeMultiLineMessages
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether the JSON objects should be formatted to span multiple lines with a single element on each line. The multi-line format is potentially more user friendly (if administrators may need to look at the log files), but each message will be larger because of the additional spaces and end-of-line markers.")

  public Boolean getWriteMultiLineMessages() {
    return writeMultiLineMessages;
  }


  public void setWriteMultiLineMessages(Boolean writeMultiLineMessages) {
    
    
    
    this.writeMultiLineMessages = writeMultiLineMessages;
  }


  public ConsoleJsonAccessLogPublisherResponseAllOf outputLocation(EnumlogPublisherOutputLocationProp outputLocation) {
    
    
    
    
    this.outputLocation = outputLocation;
    return this;
  }

   /**
   * Get outputLocation
   * @return outputLocation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EnumlogPublisherOutputLocationProp getOutputLocation() {
    return outputLocation;
  }


  public void setOutputLocation(EnumlogPublisherOutputLocationProp outputLocation) {
    
    
    
    this.outputLocation = outputLocation;
  }


  public ConsoleJsonAccessLogPublisherResponseAllOf includeProductName(Boolean includeProductName) {
    
    
    
    
    this.includeProductName = includeProductName;
    return this;
  }

   /**
   * Indicates whether log messages should include the product name for the Directory Server.
   * @return includeProductName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether log messages should include the product name for the Directory Server.")

  public Boolean getIncludeProductName() {
    return includeProductName;
  }


  public void setIncludeProductName(Boolean includeProductName) {
    
    
    
    this.includeProductName = includeProductName;
  }


  public ConsoleJsonAccessLogPublisherResponseAllOf includeInstanceName(Boolean includeInstanceName) {
    
    
    
    
    this.includeInstanceName = includeInstanceName;
    return this;
  }

   /**
   * Indicates whether log messages should include the instance name for the Directory Server.
   * @return includeInstanceName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether log messages should include the instance name for the Directory Server.")

  public Boolean getIncludeInstanceName() {
    return includeInstanceName;
  }


  public void setIncludeInstanceName(Boolean includeInstanceName) {
    
    
    
    this.includeInstanceName = includeInstanceName;
  }


  public ConsoleJsonAccessLogPublisherResponseAllOf includeStartupID(Boolean includeStartupID) {
    
    
    
    
    this.includeStartupID = includeStartupID;
    return this;
  }

   /**
   * Indicates whether log messages should include the startup ID for the Directory Server, which is a value assigned to the server instance at startup and may be used to identify when the server has been restarted.
   * @return includeStartupID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether log messages should include the startup ID for the Directory Server, which is a value assigned to the server instance at startup and may be used to identify when the server has been restarted.")

  public Boolean getIncludeStartupID() {
    return includeStartupID;
  }


  public void setIncludeStartupID(Boolean includeStartupID) {
    
    
    
    this.includeStartupID = includeStartupID;
  }


  public ConsoleJsonAccessLogPublisherResponseAllOf includeThreadID(Boolean includeThreadID) {
    
    
    
    
    this.includeThreadID = includeThreadID;
    return this;
  }

   /**
   * Indicates whether log messages should include the thread ID for the Directory Server in each log message. This ID can be used to correlate log messages from the same thread within a single log as well as generated by the same thread across different types of log files. More information about the thread with a specific ID can be obtained using the cn&#x3D;JVM Stack Trace,cn&#x3D;monitor entry.
   * @return includeThreadID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether log messages should include the thread ID for the Directory Server in each log message. This ID can be used to correlate log messages from the same thread within a single log as well as generated by the same thread across different types of log files. More information about the thread with a specific ID can be obtained using the cn=JVM Stack Trace,cn=monitor entry.")

  public Boolean getIncludeThreadID() {
    return includeThreadID;
  }


  public void setIncludeThreadID(Boolean includeThreadID) {
    
    
    
    this.includeThreadID = includeThreadID;
  }


  public ConsoleJsonAccessLogPublisherResponseAllOf includeRequesterDN(Boolean includeRequesterDN) {
    
    
    
    
    this.includeRequesterDN = includeRequesterDN;
    return this;
  }

   /**
   * Indicates whether log messages for operation requests should include the DN of the authenticated user for the client connection on which the operation was requested.
   * @return includeRequesterDN
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether log messages for operation requests should include the DN of the authenticated user for the client connection on which the operation was requested.")

  public Boolean getIncludeRequesterDN() {
    return includeRequesterDN;
  }


  public void setIncludeRequesterDN(Boolean includeRequesterDN) {
    
    
    
    this.includeRequesterDN = includeRequesterDN;
  }


  public ConsoleJsonAccessLogPublisherResponseAllOf includeRequesterIPAddress(Boolean includeRequesterIPAddress) {
    
    
    
    
    this.includeRequesterIPAddress = includeRequesterIPAddress;
    return this;
  }

   /**
   * Indicates whether log messages for operation requests should include the IP address of the client that requested the operation.
   * @return includeRequesterIPAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether log messages for operation requests should include the IP address of the client that requested the operation.")

  public Boolean getIncludeRequesterIPAddress() {
    return includeRequesterIPAddress;
  }


  public void setIncludeRequesterIPAddress(Boolean includeRequesterIPAddress) {
    
    
    
    this.includeRequesterIPAddress = includeRequesterIPAddress;
  }


  public ConsoleJsonAccessLogPublisherResponseAllOf includeRequestDetailsInResultMessages(Boolean includeRequestDetailsInResultMessages) {
    
    
    
    
    this.includeRequestDetailsInResultMessages = includeRequestDetailsInResultMessages;
    return this;
  }

   /**
   * Indicates whether log messages for operation results should include information about both the request and the result.
   * @return includeRequestDetailsInResultMessages
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether log messages for operation results should include information about both the request and the result.")

  public Boolean getIncludeRequestDetailsInResultMessages() {
    return includeRequestDetailsInResultMessages;
  }


  public void setIncludeRequestDetailsInResultMessages(Boolean includeRequestDetailsInResultMessages) {
    
    
    
    this.includeRequestDetailsInResultMessages = includeRequestDetailsInResultMessages;
  }


  public ConsoleJsonAccessLogPublisherResponseAllOf includeRequestDetailsInSearchEntryMessages(Boolean includeRequestDetailsInSearchEntryMessages) {
    
    
    
    
    this.includeRequestDetailsInSearchEntryMessages = includeRequestDetailsInSearchEntryMessages;
    return this;
  }

   /**
   * Indicates whether log messages for search result entries should include information about the associated search request.
   * @return includeRequestDetailsInSearchEntryMessages
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether log messages for search result entries should include information about the associated search request.")

  public Boolean getIncludeRequestDetailsInSearchEntryMessages() {
    return includeRequestDetailsInSearchEntryMessages;
  }


  public void setIncludeRequestDetailsInSearchEntryMessages(Boolean includeRequestDetailsInSearchEntryMessages) {
    
    
    
    this.includeRequestDetailsInSearchEntryMessages = includeRequestDetailsInSearchEntryMessages;
  }


  public ConsoleJsonAccessLogPublisherResponseAllOf includeRequestDetailsInSearchReferenceMessages(Boolean includeRequestDetailsInSearchReferenceMessages) {
    
    
    
    
    this.includeRequestDetailsInSearchReferenceMessages = includeRequestDetailsInSearchReferenceMessages;
    return this;
  }

   /**
   * Indicates whether log messages for search result references should include information about the associated search request.
   * @return includeRequestDetailsInSearchReferenceMessages
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether log messages for search result references should include information about the associated search request.")

  public Boolean getIncludeRequestDetailsInSearchReferenceMessages() {
    return includeRequestDetailsInSearchReferenceMessages;
  }


  public void setIncludeRequestDetailsInSearchReferenceMessages(Boolean includeRequestDetailsInSearchReferenceMessages) {
    
    
    
    this.includeRequestDetailsInSearchReferenceMessages = includeRequestDetailsInSearchReferenceMessages;
  }


  public ConsoleJsonAccessLogPublisherResponseAllOf includeRequestDetailsInIntermediateResponseMessages(Boolean includeRequestDetailsInIntermediateResponseMessages) {
    
    
    
    
    this.includeRequestDetailsInIntermediateResponseMessages = includeRequestDetailsInIntermediateResponseMessages;
    return this;
  }

   /**
   * Indicates whether log messages for intermediate responses should include information about the associated operation request.
   * @return includeRequestDetailsInIntermediateResponseMessages
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether log messages for intermediate responses should include information about the associated operation request.")

  public Boolean getIncludeRequestDetailsInIntermediateResponseMessages() {
    return includeRequestDetailsInIntermediateResponseMessages;
  }


  public void setIncludeRequestDetailsInIntermediateResponseMessages(Boolean includeRequestDetailsInIntermediateResponseMessages) {
    
    
    
    this.includeRequestDetailsInIntermediateResponseMessages = includeRequestDetailsInIntermediateResponseMessages;
  }


  public ConsoleJsonAccessLogPublisherResponseAllOf includeResultCodeNames(Boolean includeResultCodeNames) {
    
    
    
    
    this.includeResultCodeNames = includeResultCodeNames;
    return this;
  }

   /**
   * Indicates whether result log messages should include human-readable names for result codes in addition to their numeric values.
   * @return includeResultCodeNames
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether result log messages should include human-readable names for result codes in addition to their numeric values.")

  public Boolean getIncludeResultCodeNames() {
    return includeResultCodeNames;
  }


  public void setIncludeResultCodeNames(Boolean includeResultCodeNames) {
    
    
    
    this.includeResultCodeNames = includeResultCodeNames;
  }


  public ConsoleJsonAccessLogPublisherResponseAllOf includeExtendedSearchRequestDetails(Boolean includeExtendedSearchRequestDetails) {
    
    
    
    
    this.includeExtendedSearchRequestDetails = includeExtendedSearchRequestDetails;
    return this;
  }

   /**
   * Indicates whether log messages for search requests should include extended information from the request, including the requested size limit, time limit, alias dereferencing behavior, and types only behavior.
   * @return includeExtendedSearchRequestDetails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether log messages for search requests should include extended information from the request, including the requested size limit, time limit, alias dereferencing behavior, and types only behavior.")

  public Boolean getIncludeExtendedSearchRequestDetails() {
    return includeExtendedSearchRequestDetails;
  }


  public void setIncludeExtendedSearchRequestDetails(Boolean includeExtendedSearchRequestDetails) {
    
    
    
    this.includeExtendedSearchRequestDetails = includeExtendedSearchRequestDetails;
  }


  public ConsoleJsonAccessLogPublisherResponseAllOf includeAddAttributeNames(Boolean includeAddAttributeNames) {
    
    
    
    
    this.includeAddAttributeNames = includeAddAttributeNames;
    return this;
  }

   /**
   * Indicates whether log messages for add requests should include a list of the names of the attributes included in the entry to add.
   * @return includeAddAttributeNames
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether log messages for add requests should include a list of the names of the attributes included in the entry to add.")

  public Boolean getIncludeAddAttributeNames() {
    return includeAddAttributeNames;
  }


  public void setIncludeAddAttributeNames(Boolean includeAddAttributeNames) {
    
    
    
    this.includeAddAttributeNames = includeAddAttributeNames;
  }


  public ConsoleJsonAccessLogPublisherResponseAllOf includeModifyAttributeNames(Boolean includeModifyAttributeNames) {
    
    
    
    
    this.includeModifyAttributeNames = includeModifyAttributeNames;
    return this;
  }

   /**
   * Indicates whether log messages for modify requests should include a list of the names of the attributes to be modified.
   * @return includeModifyAttributeNames
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether log messages for modify requests should include a list of the names of the attributes to be modified.")

  public Boolean getIncludeModifyAttributeNames() {
    return includeModifyAttributeNames;
  }


  public void setIncludeModifyAttributeNames(Boolean includeModifyAttributeNames) {
    
    
    
    this.includeModifyAttributeNames = includeModifyAttributeNames;
  }


  public ConsoleJsonAccessLogPublisherResponseAllOf includeSearchEntryAttributeNames(Boolean includeSearchEntryAttributeNames) {
    
    
    
    
    this.includeSearchEntryAttributeNames = includeSearchEntryAttributeNames;
    return this;
  }

   /**
   * Indicates whether log messages for search result entries should include a list of the names of the attributes included in the entry that was returned.
   * @return includeSearchEntryAttributeNames
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether log messages for search result entries should include a list of the names of the attributes included in the entry that was returned.")

  public Boolean getIncludeSearchEntryAttributeNames() {
    return includeSearchEntryAttributeNames;
  }


  public void setIncludeSearchEntryAttributeNames(Boolean includeSearchEntryAttributeNames) {
    
    
    
    this.includeSearchEntryAttributeNames = includeSearchEntryAttributeNames;
  }


  public ConsoleJsonAccessLogPublisherResponseAllOf includeRequestControls(Boolean includeRequestControls) {
    
    
    
    
    this.includeRequestControls = includeRequestControls;
    return this;
  }

   /**
   * Indicates whether log messages for operation requests should include a list of the OIDs of any controls included in the request.
   * @return includeRequestControls
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether log messages for operation requests should include a list of the OIDs of any controls included in the request.")

  public Boolean getIncludeRequestControls() {
    return includeRequestControls;
  }


  public void setIncludeRequestControls(Boolean includeRequestControls) {
    
    
    
    this.includeRequestControls = includeRequestControls;
  }


  public ConsoleJsonAccessLogPublisherResponseAllOf includeResponseControls(Boolean includeResponseControls) {
    
    
    
    
    this.includeResponseControls = includeResponseControls;
    return this;
  }

   /**
   * Indicates whether log messages for operation results should include a list of the OIDs of any controls included in the result.
   * @return includeResponseControls
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether log messages for operation results should include a list of the OIDs of any controls included in the result.")

  public Boolean getIncludeResponseControls() {
    return includeResponseControls;
  }


  public void setIncludeResponseControls(Boolean includeResponseControls) {
    
    
    
    this.includeResponseControls = includeResponseControls;
  }


  public ConsoleJsonAccessLogPublisherResponseAllOf includeReplicationChangeID(Boolean includeReplicationChangeID) {
    
    
    
    
    this.includeReplicationChangeID = includeReplicationChangeID;
    return this;
  }

   /**
   * Indicates whether to log information about the replication change ID.
   * @return includeReplicationChangeID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether to log information about the replication change ID.")

  public Boolean getIncludeReplicationChangeID() {
    return includeReplicationChangeID;
  }


  public void setIncludeReplicationChangeID(Boolean includeReplicationChangeID) {
    
    
    
    this.includeReplicationChangeID = includeReplicationChangeID;
  }


  public ConsoleJsonAccessLogPublisherResponseAllOf generifyMessageStringsWhenPossible(Boolean generifyMessageStringsWhenPossible) {
    
    
    
    
    this.generifyMessageStringsWhenPossible = generifyMessageStringsWhenPossible;
    return this;
  }

   /**
   * Indicates whether to use generified version of certain message strings, including diagnostic messages, additional information messages, authentication failure reasons, and disconnect messages. Generified versions of those strings may use placeholders (like %s for a string or %d for an integer) rather than the version of the string with those placeholders replaced with specific values.
   * @return generifyMessageStringsWhenPossible
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether to use generified version of certain message strings, including diagnostic messages, additional information messages, authentication failure reasons, and disconnect messages. Generified versions of those strings may use placeholders (like %s for a string or %d for an integer) rather than the version of the string with those placeholders replaced with specific values.")

  public Boolean getGenerifyMessageStringsWhenPossible() {
    return generifyMessageStringsWhenPossible;
  }


  public void setGenerifyMessageStringsWhenPossible(Boolean generifyMessageStringsWhenPossible) {
    
    
    
    this.generifyMessageStringsWhenPossible = generifyMessageStringsWhenPossible;
  }


  public ConsoleJsonAccessLogPublisherResponseAllOf maxStringLength(Integer maxStringLength) {
    
    
    
    
    this.maxStringLength = maxStringLength;
    return this;
  }

   /**
   * Specifies the maximum number of characters that may be included in any string in a log message before that string is truncated and replaced with a placeholder indicating the number of characters that were omitted. This can help prevent extremely long log messages from being written.
   * @return maxStringLength
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the maximum number of characters that may be included in any string in a log message before that string is truncated and replaced with a placeholder indicating the number of characters that were omitted. This can help prevent extremely long log messages from being written.")

  public Integer getMaxStringLength() {
    return maxStringLength;
  }


  public void setMaxStringLength(Integer maxStringLength) {
    
    
    
    this.maxStringLength = maxStringLength;
  }


  public ConsoleJsonAccessLogPublisherResponseAllOf logFieldBehavior(String logFieldBehavior) {
    
    
    
    
    this.logFieldBehavior = logFieldBehavior;
    return this;
  }

   /**
   * The behavior to use for determining which fields to log and whether to transform the values of those fields in any way.
   * @return logFieldBehavior
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The behavior to use for determining which fields to log and whether to transform the values of those fields in any way.")

  public String getLogFieldBehavior() {
    return logFieldBehavior;
  }


  public void setLogFieldBehavior(String logFieldBehavior) {
    
    
    
    this.logFieldBehavior = logFieldBehavior;
  }


  public ConsoleJsonAccessLogPublisherResponseAllOf logConnects(Boolean logConnects) {
    
    
    
    
    this.logConnects = logConnects;
    return this;
  }

   /**
   * Indicates whether to log information about connections established to the server.
   * @return logConnects
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether to log information about connections established to the server.")

  public Boolean getLogConnects() {
    return logConnects;
  }


  public void setLogConnects(Boolean logConnects) {
    
    
    
    this.logConnects = logConnects;
  }


  public ConsoleJsonAccessLogPublisherResponseAllOf logDisconnects(Boolean logDisconnects) {
    
    
    
    
    this.logDisconnects = logDisconnects;
    return this;
  }

   /**
   * Indicates whether to log information about connections that have been closed by the client or terminated by the server.
   * @return logDisconnects
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether to log information about connections that have been closed by the client or terminated by the server.")

  public Boolean getLogDisconnects() {
    return logDisconnects;
  }


  public void setLogDisconnects(Boolean logDisconnects) {
    
    
    
    this.logDisconnects = logDisconnects;
  }


  public ConsoleJsonAccessLogPublisherResponseAllOf logSecurityNegotiation(Boolean logSecurityNegotiation) {
    
    
    
    
    this.logSecurityNegotiation = logSecurityNegotiation;
    return this;
  }

   /**
   * Indicates whether to log information about the result of any security negotiation (e.g., SSL handshake) processing that has been performed.
   * @return logSecurityNegotiation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether to log information about the result of any security negotiation (e.g., SSL handshake) processing that has been performed.")

  public Boolean getLogSecurityNegotiation() {
    return logSecurityNegotiation;
  }


  public void setLogSecurityNegotiation(Boolean logSecurityNegotiation) {
    
    
    
    this.logSecurityNegotiation = logSecurityNegotiation;
  }


  public ConsoleJsonAccessLogPublisherResponseAllOf logClientCertificates(Boolean logClientCertificates) {
    
    
    
    
    this.logClientCertificates = logClientCertificates;
    return this;
  }

   /**
   * Indicates whether to log information about any client certificates presented to the server.
   * @return logClientCertificates
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether to log information about any client certificates presented to the server.")

  public Boolean getLogClientCertificates() {
    return logClientCertificates;
  }


  public void setLogClientCertificates(Boolean logClientCertificates) {
    
    
    
    this.logClientCertificates = logClientCertificates;
  }


  public ConsoleJsonAccessLogPublisherResponseAllOf logRequests(Boolean logRequests) {
    
    
    
    
    this.logRequests = logRequests;
    return this;
  }

   /**
   * Indicates whether to log information about requests received from clients.
   * @return logRequests
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether to log information about requests received from clients.")

  public Boolean getLogRequests() {
    return logRequests;
  }


  public void setLogRequests(Boolean logRequests) {
    
    
    
    this.logRequests = logRequests;
  }


  public ConsoleJsonAccessLogPublisherResponseAllOf logResults(Boolean logResults) {
    
    
    
    
    this.logResults = logResults;
    return this;
  }

   /**
   * Indicates whether to log information about the results of client requests.
   * @return logResults
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether to log information about the results of client requests.")

  public Boolean getLogResults() {
    return logResults;
  }


  public void setLogResults(Boolean logResults) {
    
    
    
    this.logResults = logResults;
  }


  public ConsoleJsonAccessLogPublisherResponseAllOf logSearchEntries(Boolean logSearchEntries) {
    
    
    
    
    this.logSearchEntries = logSearchEntries;
    return this;
  }

   /**
   * Indicates whether to log information about search result entries sent to the client.
   * @return logSearchEntries
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether to log information about search result entries sent to the client.")

  public Boolean getLogSearchEntries() {
    return logSearchEntries;
  }


  public void setLogSearchEntries(Boolean logSearchEntries) {
    
    
    
    this.logSearchEntries = logSearchEntries;
  }


  public ConsoleJsonAccessLogPublisherResponseAllOf logSearchReferences(Boolean logSearchReferences) {
    
    
    
    
    this.logSearchReferences = logSearchReferences;
    return this;
  }

   /**
   * Indicates whether to log information about search result references sent to the client.
   * @return logSearchReferences
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether to log information about search result references sent to the client.")

  public Boolean getLogSearchReferences() {
    return logSearchReferences;
  }


  public void setLogSearchReferences(Boolean logSearchReferences) {
    
    
    
    this.logSearchReferences = logSearchReferences;
  }


  public ConsoleJsonAccessLogPublisherResponseAllOf logIntermediateResponses(Boolean logIntermediateResponses) {
    
    
    
    
    this.logIntermediateResponses = logIntermediateResponses;
    return this;
  }

   /**
   * Indicates whether to log information about intermediate responses sent to the client.
   * @return logIntermediateResponses
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether to log information about intermediate responses sent to the client.")

  public Boolean getLogIntermediateResponses() {
    return logIntermediateResponses;
  }


  public void setLogIntermediateResponses(Boolean logIntermediateResponses) {
    
    
    
    this.logIntermediateResponses = logIntermediateResponses;
  }


  public ConsoleJsonAccessLogPublisherResponseAllOf suppressInternalOperations(Boolean suppressInternalOperations) {
    
    
    
    
    this.suppressInternalOperations = suppressInternalOperations;
    return this;
  }

   /**
   * Indicates whether internal operations (for example, operations that are initiated by plugins) should be logged along with the operations that are requested by users.
   * @return suppressInternalOperations
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether internal operations (for example, operations that are initiated by plugins) should be logged along with the operations that are requested by users.")

  public Boolean getSuppressInternalOperations() {
    return suppressInternalOperations;
  }


  public void setSuppressInternalOperations(Boolean suppressInternalOperations) {
    
    
    
    this.suppressInternalOperations = suppressInternalOperations;
  }


  public ConsoleJsonAccessLogPublisherResponseAllOf suppressReplicationOperations(Boolean suppressReplicationOperations) {
    
    
    
    
    this.suppressReplicationOperations = suppressReplicationOperations;
    return this;
  }

   /**
   * Indicates whether access messages that are generated by replication operations should be suppressed.
   * @return suppressReplicationOperations
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether access messages that are generated by replication operations should be suppressed.")

  public Boolean getSuppressReplicationOperations() {
    return suppressReplicationOperations;
  }


  public void setSuppressReplicationOperations(Boolean suppressReplicationOperations) {
    
    
    
    this.suppressReplicationOperations = suppressReplicationOperations;
  }


  public ConsoleJsonAccessLogPublisherResponseAllOf correlateRequestsAndResults(Boolean correlateRequestsAndResults) {
    
    
    
    
    this.correlateRequestsAndResults = correlateRequestsAndResults;
    return this;
  }

   /**
   * Indicates whether to automatically log result messages for any operation in which the corresponding request was logged. In such cases, the result, entry, and reference criteria will be ignored, although the log-responses, log-search-entries, and log-search-references properties will be honored.
   * @return correlateRequestsAndResults
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether to automatically log result messages for any operation in which the corresponding request was logged. In such cases, the result, entry, and reference criteria will be ignored, although the log-responses, log-search-entries, and log-search-references properties will be honored.")

  public Boolean getCorrelateRequestsAndResults() {
    return correlateRequestsAndResults;
  }


  public void setCorrelateRequestsAndResults(Boolean correlateRequestsAndResults) {
    
    
    
    this.correlateRequestsAndResults = correlateRequestsAndResults;
  }


  public ConsoleJsonAccessLogPublisherResponseAllOf connectionCriteria(String connectionCriteria) {
    
    
    
    
    this.connectionCriteria = connectionCriteria;
    return this;
  }

   /**
   * Specifies a set of connection criteria that must match the associated client connection in order for a connect, disconnect, request, or result message to be logged.
   * @return connectionCriteria
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies a set of connection criteria that must match the associated client connection in order for a connect, disconnect, request, or result message to be logged.")

  public String getConnectionCriteria() {
    return connectionCriteria;
  }


  public void setConnectionCriteria(String connectionCriteria) {
    
    
    
    this.connectionCriteria = connectionCriteria;
  }


  public ConsoleJsonAccessLogPublisherResponseAllOf requestCriteria(String requestCriteria) {
    
    
    
    
    this.requestCriteria = requestCriteria;
    return this;
  }

   /**
   * Specifies a set of request criteria that must match the associated operation request in order for a request or result to be logged by this Access Log Publisher.
   * @return requestCriteria
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies a set of request criteria that must match the associated operation request in order for a request or result to be logged by this Access Log Publisher.")

  public String getRequestCriteria() {
    return requestCriteria;
  }


  public void setRequestCriteria(String requestCriteria) {
    
    
    
    this.requestCriteria = requestCriteria;
  }


  public ConsoleJsonAccessLogPublisherResponseAllOf resultCriteria(String resultCriteria) {
    
    
    
    
    this.resultCriteria = resultCriteria;
    return this;
  }

   /**
   * Specifies a set of result criteria that must match the associated operation result in order for that result to be logged by this Access Log Publisher.
   * @return resultCriteria
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies a set of result criteria that must match the associated operation result in order for that result to be logged by this Access Log Publisher.")

  public String getResultCriteria() {
    return resultCriteria;
  }


  public void setResultCriteria(String resultCriteria) {
    
    
    
    this.resultCriteria = resultCriteria;
  }


  public ConsoleJsonAccessLogPublisherResponseAllOf searchEntryCriteria(String searchEntryCriteria) {
    
    
    
    
    this.searchEntryCriteria = searchEntryCriteria;
    return this;
  }

   /**
   * Specifies a set of search entry criteria that must match the associated search result entry in order for that it to be logged by this Access Log Publisher.
   * @return searchEntryCriteria
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies a set of search entry criteria that must match the associated search result entry in order for that it to be logged by this Access Log Publisher.")

  public String getSearchEntryCriteria() {
    return searchEntryCriteria;
  }


  public void setSearchEntryCriteria(String searchEntryCriteria) {
    
    
    
    this.searchEntryCriteria = searchEntryCriteria;
  }


  public ConsoleJsonAccessLogPublisherResponseAllOf searchReferenceCriteria(String searchReferenceCriteria) {
    
    
    
    
    this.searchReferenceCriteria = searchReferenceCriteria;
    return this;
  }

   /**
   * Specifies a set of search reference criteria that must match the associated search result reference in order for that it to be logged by this Access Log Publisher.
   * @return searchReferenceCriteria
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies a set of search reference criteria that must match the associated search result reference in order for that it to be logged by this Access Log Publisher.")

  public String getSearchReferenceCriteria() {
    return searchReferenceCriteria;
  }


  public void setSearchReferenceCriteria(String searchReferenceCriteria) {
    
    
    
    this.searchReferenceCriteria = searchReferenceCriteria;
  }


  public ConsoleJsonAccessLogPublisherResponseAllOf loggingErrorBehavior(EnumlogPublisherLoggingErrorBehaviorProp loggingErrorBehavior) {
    
    
    
    
    this.loggingErrorBehavior = loggingErrorBehavior;
    return this;
  }

   /**
   * Get loggingErrorBehavior
   * @return loggingErrorBehavior
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EnumlogPublisherLoggingErrorBehaviorProp getLoggingErrorBehavior() {
    return loggingErrorBehavior;
  }


  public void setLoggingErrorBehavior(EnumlogPublisherLoggingErrorBehaviorProp loggingErrorBehavior) {
    
    
    
    this.loggingErrorBehavior = loggingErrorBehavior;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the ConsoleJsonAccessLogPublisherResponseAllOf instance itself
   */
  public ConsoleJsonAccessLogPublisherResponseAllOf putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConsoleJsonAccessLogPublisherResponseAllOf consoleJsonAccessLogPublisherResponseAllOf = (ConsoleJsonAccessLogPublisherResponseAllOf) o;
    return Objects.equals(this.description, consoleJsonAccessLogPublisherResponseAllOf.description) &&
        Objects.equals(this.schemas, consoleJsonAccessLogPublisherResponseAllOf.schemas) &&
        Objects.equals(this.id, consoleJsonAccessLogPublisherResponseAllOf.id) &&
        Objects.equals(this.enabled, consoleJsonAccessLogPublisherResponseAllOf.enabled) &&
        Objects.equals(this.writeMultiLineMessages, consoleJsonAccessLogPublisherResponseAllOf.writeMultiLineMessages) &&
        Objects.equals(this.outputLocation, consoleJsonAccessLogPublisherResponseAllOf.outputLocation) &&
        Objects.equals(this.includeProductName, consoleJsonAccessLogPublisherResponseAllOf.includeProductName) &&
        Objects.equals(this.includeInstanceName, consoleJsonAccessLogPublisherResponseAllOf.includeInstanceName) &&
        Objects.equals(this.includeStartupID, consoleJsonAccessLogPublisherResponseAllOf.includeStartupID) &&
        Objects.equals(this.includeThreadID, consoleJsonAccessLogPublisherResponseAllOf.includeThreadID) &&
        Objects.equals(this.includeRequesterDN, consoleJsonAccessLogPublisherResponseAllOf.includeRequesterDN) &&
        Objects.equals(this.includeRequesterIPAddress, consoleJsonAccessLogPublisherResponseAllOf.includeRequesterIPAddress) &&
        Objects.equals(this.includeRequestDetailsInResultMessages, consoleJsonAccessLogPublisherResponseAllOf.includeRequestDetailsInResultMessages) &&
        Objects.equals(this.includeRequestDetailsInSearchEntryMessages, consoleJsonAccessLogPublisherResponseAllOf.includeRequestDetailsInSearchEntryMessages) &&
        Objects.equals(this.includeRequestDetailsInSearchReferenceMessages, consoleJsonAccessLogPublisherResponseAllOf.includeRequestDetailsInSearchReferenceMessages) &&
        Objects.equals(this.includeRequestDetailsInIntermediateResponseMessages, consoleJsonAccessLogPublisherResponseAllOf.includeRequestDetailsInIntermediateResponseMessages) &&
        Objects.equals(this.includeResultCodeNames, consoleJsonAccessLogPublisherResponseAllOf.includeResultCodeNames) &&
        Objects.equals(this.includeExtendedSearchRequestDetails, consoleJsonAccessLogPublisherResponseAllOf.includeExtendedSearchRequestDetails) &&
        Objects.equals(this.includeAddAttributeNames, consoleJsonAccessLogPublisherResponseAllOf.includeAddAttributeNames) &&
        Objects.equals(this.includeModifyAttributeNames, consoleJsonAccessLogPublisherResponseAllOf.includeModifyAttributeNames) &&
        Objects.equals(this.includeSearchEntryAttributeNames, consoleJsonAccessLogPublisherResponseAllOf.includeSearchEntryAttributeNames) &&
        Objects.equals(this.includeRequestControls, consoleJsonAccessLogPublisherResponseAllOf.includeRequestControls) &&
        Objects.equals(this.includeResponseControls, consoleJsonAccessLogPublisherResponseAllOf.includeResponseControls) &&
        Objects.equals(this.includeReplicationChangeID, consoleJsonAccessLogPublisherResponseAllOf.includeReplicationChangeID) &&
        Objects.equals(this.generifyMessageStringsWhenPossible, consoleJsonAccessLogPublisherResponseAllOf.generifyMessageStringsWhenPossible) &&
        Objects.equals(this.maxStringLength, consoleJsonAccessLogPublisherResponseAllOf.maxStringLength) &&
        Objects.equals(this.logFieldBehavior, consoleJsonAccessLogPublisherResponseAllOf.logFieldBehavior) &&
        Objects.equals(this.logConnects, consoleJsonAccessLogPublisherResponseAllOf.logConnects) &&
        Objects.equals(this.logDisconnects, consoleJsonAccessLogPublisherResponseAllOf.logDisconnects) &&
        Objects.equals(this.logSecurityNegotiation, consoleJsonAccessLogPublisherResponseAllOf.logSecurityNegotiation) &&
        Objects.equals(this.logClientCertificates, consoleJsonAccessLogPublisherResponseAllOf.logClientCertificates) &&
        Objects.equals(this.logRequests, consoleJsonAccessLogPublisherResponseAllOf.logRequests) &&
        Objects.equals(this.logResults, consoleJsonAccessLogPublisherResponseAllOf.logResults) &&
        Objects.equals(this.logSearchEntries, consoleJsonAccessLogPublisherResponseAllOf.logSearchEntries) &&
        Objects.equals(this.logSearchReferences, consoleJsonAccessLogPublisherResponseAllOf.logSearchReferences) &&
        Objects.equals(this.logIntermediateResponses, consoleJsonAccessLogPublisherResponseAllOf.logIntermediateResponses) &&
        Objects.equals(this.suppressInternalOperations, consoleJsonAccessLogPublisherResponseAllOf.suppressInternalOperations) &&
        Objects.equals(this.suppressReplicationOperations, consoleJsonAccessLogPublisherResponseAllOf.suppressReplicationOperations) &&
        Objects.equals(this.correlateRequestsAndResults, consoleJsonAccessLogPublisherResponseAllOf.correlateRequestsAndResults) &&
        Objects.equals(this.connectionCriteria, consoleJsonAccessLogPublisherResponseAllOf.connectionCriteria) &&
        Objects.equals(this.requestCriteria, consoleJsonAccessLogPublisherResponseAllOf.requestCriteria) &&
        Objects.equals(this.resultCriteria, consoleJsonAccessLogPublisherResponseAllOf.resultCriteria) &&
        Objects.equals(this.searchEntryCriteria, consoleJsonAccessLogPublisherResponseAllOf.searchEntryCriteria) &&
        Objects.equals(this.searchReferenceCriteria, consoleJsonAccessLogPublisherResponseAllOf.searchReferenceCriteria) &&
        Objects.equals(this.loggingErrorBehavior, consoleJsonAccessLogPublisherResponseAllOf.loggingErrorBehavior)&&
        Objects.equals(this.additionalProperties, consoleJsonAccessLogPublisherResponseAllOf.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, schemas, id, enabled, writeMultiLineMessages, outputLocation, includeProductName, includeInstanceName, includeStartupID, includeThreadID, includeRequesterDN, includeRequesterIPAddress, includeRequestDetailsInResultMessages, includeRequestDetailsInSearchEntryMessages, includeRequestDetailsInSearchReferenceMessages, includeRequestDetailsInIntermediateResponseMessages, includeResultCodeNames, includeExtendedSearchRequestDetails, includeAddAttributeNames, includeModifyAttributeNames, includeSearchEntryAttributeNames, includeRequestControls, includeResponseControls, includeReplicationChangeID, generifyMessageStringsWhenPossible, maxStringLength, logFieldBehavior, logConnects, logDisconnects, logSecurityNegotiation, logClientCertificates, logRequests, logResults, logSearchEntries, logSearchReferences, logIntermediateResponses, suppressInternalOperations, suppressReplicationOperations, correlateRequestsAndResults, connectionCriteria, requestCriteria, resultCriteria, searchEntryCriteria, searchReferenceCriteria, loggingErrorBehavior, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConsoleJsonAccessLogPublisherResponseAllOf {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    schemas: ").append(toIndentedString(schemas)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    writeMultiLineMessages: ").append(toIndentedString(writeMultiLineMessages)).append("\n");
    sb.append("    outputLocation: ").append(toIndentedString(outputLocation)).append("\n");
    sb.append("    includeProductName: ").append(toIndentedString(includeProductName)).append("\n");
    sb.append("    includeInstanceName: ").append(toIndentedString(includeInstanceName)).append("\n");
    sb.append("    includeStartupID: ").append(toIndentedString(includeStartupID)).append("\n");
    sb.append("    includeThreadID: ").append(toIndentedString(includeThreadID)).append("\n");
    sb.append("    includeRequesterDN: ").append(toIndentedString(includeRequesterDN)).append("\n");
    sb.append("    includeRequesterIPAddress: ").append(toIndentedString(includeRequesterIPAddress)).append("\n");
    sb.append("    includeRequestDetailsInResultMessages: ").append(toIndentedString(includeRequestDetailsInResultMessages)).append("\n");
    sb.append("    includeRequestDetailsInSearchEntryMessages: ").append(toIndentedString(includeRequestDetailsInSearchEntryMessages)).append("\n");
    sb.append("    includeRequestDetailsInSearchReferenceMessages: ").append(toIndentedString(includeRequestDetailsInSearchReferenceMessages)).append("\n");
    sb.append("    includeRequestDetailsInIntermediateResponseMessages: ").append(toIndentedString(includeRequestDetailsInIntermediateResponseMessages)).append("\n");
    sb.append("    includeResultCodeNames: ").append(toIndentedString(includeResultCodeNames)).append("\n");
    sb.append("    includeExtendedSearchRequestDetails: ").append(toIndentedString(includeExtendedSearchRequestDetails)).append("\n");
    sb.append("    includeAddAttributeNames: ").append(toIndentedString(includeAddAttributeNames)).append("\n");
    sb.append("    includeModifyAttributeNames: ").append(toIndentedString(includeModifyAttributeNames)).append("\n");
    sb.append("    includeSearchEntryAttributeNames: ").append(toIndentedString(includeSearchEntryAttributeNames)).append("\n");
    sb.append("    includeRequestControls: ").append(toIndentedString(includeRequestControls)).append("\n");
    sb.append("    includeResponseControls: ").append(toIndentedString(includeResponseControls)).append("\n");
    sb.append("    includeReplicationChangeID: ").append(toIndentedString(includeReplicationChangeID)).append("\n");
    sb.append("    generifyMessageStringsWhenPossible: ").append(toIndentedString(generifyMessageStringsWhenPossible)).append("\n");
    sb.append("    maxStringLength: ").append(toIndentedString(maxStringLength)).append("\n");
    sb.append("    logFieldBehavior: ").append(toIndentedString(logFieldBehavior)).append("\n");
    sb.append("    logConnects: ").append(toIndentedString(logConnects)).append("\n");
    sb.append("    logDisconnects: ").append(toIndentedString(logDisconnects)).append("\n");
    sb.append("    logSecurityNegotiation: ").append(toIndentedString(logSecurityNegotiation)).append("\n");
    sb.append("    logClientCertificates: ").append(toIndentedString(logClientCertificates)).append("\n");
    sb.append("    logRequests: ").append(toIndentedString(logRequests)).append("\n");
    sb.append("    logResults: ").append(toIndentedString(logResults)).append("\n");
    sb.append("    logSearchEntries: ").append(toIndentedString(logSearchEntries)).append("\n");
    sb.append("    logSearchReferences: ").append(toIndentedString(logSearchReferences)).append("\n");
    sb.append("    logIntermediateResponses: ").append(toIndentedString(logIntermediateResponses)).append("\n");
    sb.append("    suppressInternalOperations: ").append(toIndentedString(suppressInternalOperations)).append("\n");
    sb.append("    suppressReplicationOperations: ").append(toIndentedString(suppressReplicationOperations)).append("\n");
    sb.append("    correlateRequestsAndResults: ").append(toIndentedString(correlateRequestsAndResults)).append("\n");
    sb.append("    connectionCriteria: ").append(toIndentedString(connectionCriteria)).append("\n");
    sb.append("    requestCriteria: ").append(toIndentedString(requestCriteria)).append("\n");
    sb.append("    resultCriteria: ").append(toIndentedString(resultCriteria)).append("\n");
    sb.append("    searchEntryCriteria: ").append(toIndentedString(searchEntryCriteria)).append("\n");
    sb.append("    searchReferenceCriteria: ").append(toIndentedString(searchReferenceCriteria)).append("\n");
    sb.append("    loggingErrorBehavior: ").append(toIndentedString(loggingErrorBehavior)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("description");
    openapiFields.add("schemas");
    openapiFields.add("id");
    openapiFields.add("enabled");
    openapiFields.add("writeMultiLineMessages");
    openapiFields.add("outputLocation");
    openapiFields.add("includeProductName");
    openapiFields.add("includeInstanceName");
    openapiFields.add("includeStartupID");
    openapiFields.add("includeThreadID");
    openapiFields.add("includeRequesterDN");
    openapiFields.add("includeRequesterIPAddress");
    openapiFields.add("includeRequestDetailsInResultMessages");
    openapiFields.add("includeRequestDetailsInSearchEntryMessages");
    openapiFields.add("includeRequestDetailsInSearchReferenceMessages");
    openapiFields.add("includeRequestDetailsInIntermediateResponseMessages");
    openapiFields.add("includeResultCodeNames");
    openapiFields.add("includeExtendedSearchRequestDetails");
    openapiFields.add("includeAddAttributeNames");
    openapiFields.add("includeModifyAttributeNames");
    openapiFields.add("includeSearchEntryAttributeNames");
    openapiFields.add("includeRequestControls");
    openapiFields.add("includeResponseControls");
    openapiFields.add("includeReplicationChangeID");
    openapiFields.add("generifyMessageStringsWhenPossible");
    openapiFields.add("maxStringLength");
    openapiFields.add("logFieldBehavior");
    openapiFields.add("logConnects");
    openapiFields.add("logDisconnects");
    openapiFields.add("logSecurityNegotiation");
    openapiFields.add("logClientCertificates");
    openapiFields.add("logRequests");
    openapiFields.add("logResults");
    openapiFields.add("logSearchEntries");
    openapiFields.add("logSearchReferences");
    openapiFields.add("logIntermediateResponses");
    openapiFields.add("suppressInternalOperations");
    openapiFields.add("suppressReplicationOperations");
    openapiFields.add("correlateRequestsAndResults");
    openapiFields.add("connectionCriteria");
    openapiFields.add("requestCriteria");
    openapiFields.add("resultCriteria");
    openapiFields.add("searchEntryCriteria");
    openapiFields.add("searchReferenceCriteria");
    openapiFields.add("loggingErrorBehavior");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ConsoleJsonAccessLogPublisherResponseAllOf
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ConsoleJsonAccessLogPublisherResponseAllOf.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ConsoleJsonAccessLogPublisherResponseAllOf is not found in the empty JSON string", ConsoleJsonAccessLogPublisherResponseAllOf.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("schemas") != null && !jsonObj.get("schemas").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `schemas` to be an array in the JSON string but got `%s`", jsonObj.get("schemas").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("logFieldBehavior") != null && !jsonObj.get("logFieldBehavior").isJsonNull()) && !jsonObj.get("logFieldBehavior").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logFieldBehavior` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logFieldBehavior").toString()));
      }
      if ((jsonObj.get("connectionCriteria") != null && !jsonObj.get("connectionCriteria").isJsonNull()) && !jsonObj.get("connectionCriteria").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `connectionCriteria` to be a primitive type in the JSON string but got `%s`", jsonObj.get("connectionCriteria").toString()));
      }
      if ((jsonObj.get("requestCriteria") != null && !jsonObj.get("requestCriteria").isJsonNull()) && !jsonObj.get("requestCriteria").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `requestCriteria` to be a primitive type in the JSON string but got `%s`", jsonObj.get("requestCriteria").toString()));
      }
      if ((jsonObj.get("resultCriteria") != null && !jsonObj.get("resultCriteria").isJsonNull()) && !jsonObj.get("resultCriteria").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resultCriteria` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resultCriteria").toString()));
      }
      if ((jsonObj.get("searchEntryCriteria") != null && !jsonObj.get("searchEntryCriteria").isJsonNull()) && !jsonObj.get("searchEntryCriteria").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `searchEntryCriteria` to be a primitive type in the JSON string but got `%s`", jsonObj.get("searchEntryCriteria").toString()));
      }
      if ((jsonObj.get("searchReferenceCriteria") != null && !jsonObj.get("searchReferenceCriteria").isJsonNull()) && !jsonObj.get("searchReferenceCriteria").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `searchReferenceCriteria` to be a primitive type in the JSON string but got `%s`", jsonObj.get("searchReferenceCriteria").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ConsoleJsonAccessLogPublisherResponseAllOf.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ConsoleJsonAccessLogPublisherResponseAllOf' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ConsoleJsonAccessLogPublisherResponseAllOf> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ConsoleJsonAccessLogPublisherResponseAllOf.class));

       return (TypeAdapter<T>) new TypeAdapter<ConsoleJsonAccessLogPublisherResponseAllOf>() {
           @Override
           public void write(JsonWriter out, ConsoleJsonAccessLogPublisherResponseAllOf value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public ConsoleJsonAccessLogPublisherResponseAllOf read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             ConsoleJsonAccessLogPublisherResponseAllOf instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ConsoleJsonAccessLogPublisherResponseAllOf given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ConsoleJsonAccessLogPublisherResponseAllOf
  * @throws IOException if the JSON string is invalid with respect to ConsoleJsonAccessLogPublisherResponseAllOf
  */
  public static ConsoleJsonAccessLogPublisherResponseAllOf fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ConsoleJsonAccessLogPublisherResponseAllOf.class);
  }

 /**
  * Convert an instance of ConsoleJsonAccessLogPublisherResponseAllOf to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

