/*
 * PingData Config - OpenAPI 3.0
 * This is the PingData Configuration API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.EnumlogPublisherLogRequestHeadersProp;
import com.konfigthis.client.model.EnumlogPublisherLogRequestParametersProp;
import com.konfigthis.client.model.EnumlogPublisherLogResponseHeadersProp;
import com.konfigthis.client.model.EnumlogPublisherLoggingErrorBehaviorProp;
import com.konfigthis.client.model.EnumlogPublisherSyslogFacilityProp;
import com.konfigthis.client.model.EnumlogPublisherSyslogSeverityProp;
import com.konfigthis.client.model.EnumsyslogJsonHttpOperationLogPublisherSchemaUrn;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * AddSyslogJsonHttpOperationLogPublisherRequest
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class AddSyslogJsonHttpOperationLogPublisherRequest {
  public static final String SERIALIZED_NAME_PUBLISHER_NAME = "publisherName";
  @SerializedName(SERIALIZED_NAME_PUBLISHER_NAME)
  private String publisherName;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_SCHEMAS = "schemas";
  @SerializedName(SERIALIZED_NAME_SCHEMAS)
  private List<EnumsyslogJsonHttpOperationLogPublisherSchemaUrn> schemas = new ArrayList<>();

  public static final String SERIALIZED_NAME_SYSLOG_EXTERNAL_SERVER = "syslogExternalServer";
  @SerializedName(SERIALIZED_NAME_SYSLOG_EXTERNAL_SERVER)
  private List<String> syslogExternalServer = new ArrayList<>();

  public static final String SERIALIZED_NAME_SYSLOG_FACILITY = "syslogFacility";
  @SerializedName(SERIALIZED_NAME_SYSLOG_FACILITY)
  private EnumlogPublisherSyslogFacilityProp syslogFacility;

  public static final String SERIALIZED_NAME_SYSLOG_SEVERITY = "syslogSeverity";
  @SerializedName(SERIALIZED_NAME_SYSLOG_SEVERITY)
  private EnumlogPublisherSyslogSeverityProp syslogSeverity;

  public static final String SERIALIZED_NAME_SYSLOG_MESSAGE_HOST_NAME = "syslogMessageHostName";
  @SerializedName(SERIALIZED_NAME_SYSLOG_MESSAGE_HOST_NAME)
  private String syslogMessageHostName;

  public static final String SERIALIZED_NAME_SYSLOG_MESSAGE_APPLICATION_NAME = "syslogMessageApplicationName";
  @SerializedName(SERIALIZED_NAME_SYSLOG_MESSAGE_APPLICATION_NAME)
  private String syslogMessageApplicationName;

  public static final String SERIALIZED_NAME_QUEUE_SIZE = "queueSize";
  @SerializedName(SERIALIZED_NAME_QUEUE_SIZE)
  private Integer queueSize;

  public static final String SERIALIZED_NAME_LOG_REQUESTS = "logRequests";
  @SerializedName(SERIALIZED_NAME_LOG_REQUESTS)
  private Boolean logRequests;

  public static final String SERIALIZED_NAME_LOG_RESULTS = "logResults";
  @SerializedName(SERIALIZED_NAME_LOG_RESULTS)
  private Boolean logResults;

  public static final String SERIALIZED_NAME_INCLUDE_PRODUCT_NAME = "includeProductName";
  @SerializedName(SERIALIZED_NAME_INCLUDE_PRODUCT_NAME)
  private Boolean includeProductName;

  public static final String SERIALIZED_NAME_INCLUDE_INSTANCE_NAME = "includeInstanceName";
  @SerializedName(SERIALIZED_NAME_INCLUDE_INSTANCE_NAME)
  private Boolean includeInstanceName;

  public static final String SERIALIZED_NAME_INCLUDE_STARTUP_I_D = "includeStartupID";
  @SerializedName(SERIALIZED_NAME_INCLUDE_STARTUP_I_D)
  private Boolean includeStartupID;

  public static final String SERIALIZED_NAME_INCLUDE_THREAD_I_D = "includeThreadID";
  @SerializedName(SERIALIZED_NAME_INCLUDE_THREAD_I_D)
  private Boolean includeThreadID;

  public static final String SERIALIZED_NAME_INCLUDE_REQUEST_DETAILS_IN_RESULT_MESSAGES = "includeRequestDetailsInResultMessages";
  @SerializedName(SERIALIZED_NAME_INCLUDE_REQUEST_DETAILS_IN_RESULT_MESSAGES)
  private Boolean includeRequestDetailsInResultMessages;

  public static final String SERIALIZED_NAME_LOG_REQUEST_HEADERS = "logRequestHeaders";
  @SerializedName(SERIALIZED_NAME_LOG_REQUEST_HEADERS)
  private EnumlogPublisherLogRequestHeadersProp logRequestHeaders;

  public static final String SERIALIZED_NAME_SUPPRESSED_REQUEST_HEADER_NAME = "suppressedRequestHeaderName";
  @SerializedName(SERIALIZED_NAME_SUPPRESSED_REQUEST_HEADER_NAME)
  private List<String> suppressedRequestHeaderName = null;

  public static final String SERIALIZED_NAME_LOG_RESPONSE_HEADERS = "logResponseHeaders";
  @SerializedName(SERIALIZED_NAME_LOG_RESPONSE_HEADERS)
  private EnumlogPublisherLogResponseHeadersProp logResponseHeaders;

  public static final String SERIALIZED_NAME_SUPPRESSED_RESPONSE_HEADER_NAME = "suppressedResponseHeaderName";
  @SerializedName(SERIALIZED_NAME_SUPPRESSED_RESPONSE_HEADER_NAME)
  private List<String> suppressedResponseHeaderName = null;

  public static final String SERIALIZED_NAME_LOG_REQUEST_AUTHORIZATION_TYPE = "logRequestAuthorizationType";
  @SerializedName(SERIALIZED_NAME_LOG_REQUEST_AUTHORIZATION_TYPE)
  private Boolean logRequestAuthorizationType;

  public static final String SERIALIZED_NAME_LOG_REQUEST_COOKIE_NAMES = "logRequestCookieNames";
  @SerializedName(SERIALIZED_NAME_LOG_REQUEST_COOKIE_NAMES)
  private Boolean logRequestCookieNames;

  public static final String SERIALIZED_NAME_LOG_RESPONSE_COOKIE_NAMES = "logResponseCookieNames";
  @SerializedName(SERIALIZED_NAME_LOG_RESPONSE_COOKIE_NAMES)
  private Boolean logResponseCookieNames;

  public static final String SERIALIZED_NAME_LOG_REQUEST_PARAMETERS = "logRequestParameters";
  @SerializedName(SERIALIZED_NAME_LOG_REQUEST_PARAMETERS)
  private EnumlogPublisherLogRequestParametersProp logRequestParameters;

  public static final String SERIALIZED_NAME_SUPPRESSED_REQUEST_PARAMETER_NAME = "suppressedRequestParameterName";
  @SerializedName(SERIALIZED_NAME_SUPPRESSED_REQUEST_PARAMETER_NAME)
  private List<String> suppressedRequestParameterName = null;

  public static final String SERIALIZED_NAME_LOG_REQUEST_PROTOCOL = "logRequestProtocol";
  @SerializedName(SERIALIZED_NAME_LOG_REQUEST_PROTOCOL)
  private Boolean logRequestProtocol;

  public static final String SERIALIZED_NAME_LOG_REDIRECT_U_R_I = "logRedirectURI";
  @SerializedName(SERIALIZED_NAME_LOG_REDIRECT_U_R_I)
  private Boolean logRedirectURI;

  public static final String SERIALIZED_NAME_WRITE_MULTI_LINE_MESSAGES = "writeMultiLineMessages";
  @SerializedName(SERIALIZED_NAME_WRITE_MULTI_LINE_MESSAGES)
  private Boolean writeMultiLineMessages;

  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled;

  public static final String SERIALIZED_NAME_LOGGING_ERROR_BEHAVIOR = "loggingErrorBehavior";
  @SerializedName(SERIALIZED_NAME_LOGGING_ERROR_BEHAVIOR)
  private EnumlogPublisherLoggingErrorBehaviorProp loggingErrorBehavior;

  public AddSyslogJsonHttpOperationLogPublisherRequest() {
  }

  public AddSyslogJsonHttpOperationLogPublisherRequest publisherName(String publisherName) {
    
    
    
    
    this.publisherName = publisherName;
    return this;
  }

   /**
   * Name of the new Log Publisher
   * @return publisherName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Name of the new Log Publisher")

  public String getPublisherName() {
    return publisherName;
  }


  public void setPublisherName(String publisherName) {
    
    
    
    this.publisherName = publisherName;
  }


  public AddSyslogJsonHttpOperationLogPublisherRequest description(String description) {
    
    
    
    
    this.description = description;
    return this;
  }

   /**
   * A description for this Log Publisher
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A description for this Log Publisher")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    
    
    
    this.description = description;
  }


  public AddSyslogJsonHttpOperationLogPublisherRequest schemas(List<EnumsyslogJsonHttpOperationLogPublisherSchemaUrn> schemas) {
    
    
    
    
    this.schemas = schemas;
    return this;
  }

  public AddSyslogJsonHttpOperationLogPublisherRequest addSchemasItem(EnumsyslogJsonHttpOperationLogPublisherSchemaUrn schemasItem) {
    this.schemas.add(schemasItem);
    return this;
  }

   /**
   * Get schemas
   * @return schemas
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<EnumsyslogJsonHttpOperationLogPublisherSchemaUrn> getSchemas() {
    return schemas;
  }


  public void setSchemas(List<EnumsyslogJsonHttpOperationLogPublisherSchemaUrn> schemas) {
    
    
    
    this.schemas = schemas;
  }


  public AddSyslogJsonHttpOperationLogPublisherRequest syslogExternalServer(List<String> syslogExternalServer) {
    
    
    
    
    this.syslogExternalServer = syslogExternalServer;
    return this;
  }

  public AddSyslogJsonHttpOperationLogPublisherRequest addSyslogExternalServerItem(String syslogExternalServerItem) {
    this.syslogExternalServer.add(syslogExternalServerItem);
    return this;
  }

   /**
   * The syslog server to which messages should be sent.
   * @return syslogExternalServer
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The syslog server to which messages should be sent.")

  public List<String> getSyslogExternalServer() {
    return syslogExternalServer;
  }


  public void setSyslogExternalServer(List<String> syslogExternalServer) {
    
    
    
    this.syslogExternalServer = syslogExternalServer;
  }


  public AddSyslogJsonHttpOperationLogPublisherRequest syslogFacility(EnumlogPublisherSyslogFacilityProp syslogFacility) {
    
    
    
    
    this.syslogFacility = syslogFacility;
    return this;
  }

   /**
   * Get syslogFacility
   * @return syslogFacility
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EnumlogPublisherSyslogFacilityProp getSyslogFacility() {
    return syslogFacility;
  }


  public void setSyslogFacility(EnumlogPublisherSyslogFacilityProp syslogFacility) {
    
    
    
    this.syslogFacility = syslogFacility;
  }


  public AddSyslogJsonHttpOperationLogPublisherRequest syslogSeverity(EnumlogPublisherSyslogSeverityProp syslogSeverity) {
    
    
    
    
    this.syslogSeverity = syslogSeverity;
    return this;
  }

   /**
   * Get syslogSeverity
   * @return syslogSeverity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EnumlogPublisherSyslogSeverityProp getSyslogSeverity() {
    return syslogSeverity;
  }


  public void setSyslogSeverity(EnumlogPublisherSyslogSeverityProp syslogSeverity) {
    
    
    
    this.syslogSeverity = syslogSeverity;
  }


  public AddSyslogJsonHttpOperationLogPublisherRequest syslogMessageHostName(String syslogMessageHostName) {
    
    
    
    
    this.syslogMessageHostName = syslogMessageHostName;
    return this;
  }

   /**
   * The local host name that will be included in syslog messages that are logged by this Syslog JSON HTTP Operation Log Publisher.
   * @return syslogMessageHostName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The local host name that will be included in syslog messages that are logged by this Syslog JSON HTTP Operation Log Publisher.")

  public String getSyslogMessageHostName() {
    return syslogMessageHostName;
  }


  public void setSyslogMessageHostName(String syslogMessageHostName) {
    
    
    
    this.syslogMessageHostName = syslogMessageHostName;
  }


  public AddSyslogJsonHttpOperationLogPublisherRequest syslogMessageApplicationName(String syslogMessageApplicationName) {
    
    
    
    
    this.syslogMessageApplicationName = syslogMessageApplicationName;
    return this;
  }

   /**
   * The application name that will be included in syslog messages that are logged by this Syslog JSON HTTP Operation Log Publisher.
   * @return syslogMessageApplicationName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The application name that will be included in syslog messages that are logged by this Syslog JSON HTTP Operation Log Publisher.")

  public String getSyslogMessageApplicationName() {
    return syslogMessageApplicationName;
  }


  public void setSyslogMessageApplicationName(String syslogMessageApplicationName) {
    
    
    
    this.syslogMessageApplicationName = syslogMessageApplicationName;
  }


  public AddSyslogJsonHttpOperationLogPublisherRequest queueSize(Integer queueSize) {
    
    
    
    
    this.queueSize = queueSize;
    return this;
  }

   /**
   * The maximum number of log records that can be stored in the asynchronous queue.
   * @return queueSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The maximum number of log records that can be stored in the asynchronous queue.")

  public Integer getQueueSize() {
    return queueSize;
  }


  public void setQueueSize(Integer queueSize) {
    
    
    
    this.queueSize = queueSize;
  }


  public AddSyslogJsonHttpOperationLogPublisherRequest logRequests(Boolean logRequests) {
    
    
    
    
    this.logRequests = logRequests;
    return this;
  }

   /**
   * Indicates whether to record a log message with information about requests received from the client.
   * @return logRequests
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether to record a log message with information about requests received from the client.")

  public Boolean getLogRequests() {
    return logRequests;
  }


  public void setLogRequests(Boolean logRequests) {
    
    
    
    this.logRequests = logRequests;
  }


  public AddSyslogJsonHttpOperationLogPublisherRequest logResults(Boolean logResults) {
    
    
    
    
    this.logResults = logResults;
    return this;
  }

   /**
   * Indicates whether to record a log message with information about the result of processing a requested HTTP operation.
   * @return logResults
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether to record a log message with information about the result of processing a requested HTTP operation.")

  public Boolean getLogResults() {
    return logResults;
  }


  public void setLogResults(Boolean logResults) {
    
    
    
    this.logResults = logResults;
  }


  public AddSyslogJsonHttpOperationLogPublisherRequest includeProductName(Boolean includeProductName) {
    
    
    
    
    this.includeProductName = includeProductName;
    return this;
  }

   /**
   * Indicates whether log messages should include the product name for the Directory Server.
   * @return includeProductName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether log messages should include the product name for the Directory Server.")

  public Boolean getIncludeProductName() {
    return includeProductName;
  }


  public void setIncludeProductName(Boolean includeProductName) {
    
    
    
    this.includeProductName = includeProductName;
  }


  public AddSyslogJsonHttpOperationLogPublisherRequest includeInstanceName(Boolean includeInstanceName) {
    
    
    
    
    this.includeInstanceName = includeInstanceName;
    return this;
  }

   /**
   * Indicates whether log messages should include the instance name for the Directory Server.
   * @return includeInstanceName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether log messages should include the instance name for the Directory Server.")

  public Boolean getIncludeInstanceName() {
    return includeInstanceName;
  }


  public void setIncludeInstanceName(Boolean includeInstanceName) {
    
    
    
    this.includeInstanceName = includeInstanceName;
  }


  public AddSyslogJsonHttpOperationLogPublisherRequest includeStartupID(Boolean includeStartupID) {
    
    
    
    
    this.includeStartupID = includeStartupID;
    return this;
  }

   /**
   * Indicates whether log messages should include the startup ID for the Directory Server, which is a value assigned to the server instance at startup and may be used to identify when the server has been restarted.
   * @return includeStartupID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether log messages should include the startup ID for the Directory Server, which is a value assigned to the server instance at startup and may be used to identify when the server has been restarted.")

  public Boolean getIncludeStartupID() {
    return includeStartupID;
  }


  public void setIncludeStartupID(Boolean includeStartupID) {
    
    
    
    this.includeStartupID = includeStartupID;
  }


  public AddSyslogJsonHttpOperationLogPublisherRequest includeThreadID(Boolean includeThreadID) {
    
    
    
    
    this.includeThreadID = includeThreadID;
    return this;
  }

   /**
   * Indicates whether log messages should include the thread ID for the Directory Server in each log message. This ID can be used to correlate log messages from the same thread within a single log as well as generated by the same thread across different types of log files. More information about the thread with a specific ID can be obtained using the cn&#x3D;JVM Stack Trace,cn&#x3D;monitor entry.
   * @return includeThreadID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether log messages should include the thread ID for the Directory Server in each log message. This ID can be used to correlate log messages from the same thread within a single log as well as generated by the same thread across different types of log files. More information about the thread with a specific ID can be obtained using the cn=JVM Stack Trace,cn=monitor entry.")

  public Boolean getIncludeThreadID() {
    return includeThreadID;
  }


  public void setIncludeThreadID(Boolean includeThreadID) {
    
    
    
    this.includeThreadID = includeThreadID;
  }


  public AddSyslogJsonHttpOperationLogPublisherRequest includeRequestDetailsInResultMessages(Boolean includeRequestDetailsInResultMessages) {
    
    
    
    
    this.includeRequestDetailsInResultMessages = includeRequestDetailsInResultMessages;
    return this;
  }

   /**
   * Indicates whether result log messages should include all of the elements of request log messages. This may be used to record a single message per operation with details about both the request and response.
   * @return includeRequestDetailsInResultMessages
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether result log messages should include all of the elements of request log messages. This may be used to record a single message per operation with details about both the request and response.")

  public Boolean getIncludeRequestDetailsInResultMessages() {
    return includeRequestDetailsInResultMessages;
  }


  public void setIncludeRequestDetailsInResultMessages(Boolean includeRequestDetailsInResultMessages) {
    
    
    
    this.includeRequestDetailsInResultMessages = includeRequestDetailsInResultMessages;
  }


  public AddSyslogJsonHttpOperationLogPublisherRequest logRequestHeaders(EnumlogPublisherLogRequestHeadersProp logRequestHeaders) {
    
    
    
    
    this.logRequestHeaders = logRequestHeaders;
    return this;
  }

   /**
   * Get logRequestHeaders
   * @return logRequestHeaders
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EnumlogPublisherLogRequestHeadersProp getLogRequestHeaders() {
    return logRequestHeaders;
  }


  public void setLogRequestHeaders(EnumlogPublisherLogRequestHeadersProp logRequestHeaders) {
    
    
    
    this.logRequestHeaders = logRequestHeaders;
  }


  public AddSyslogJsonHttpOperationLogPublisherRequest suppressedRequestHeaderName(List<String> suppressedRequestHeaderName) {
    
    
    
    
    this.suppressedRequestHeaderName = suppressedRequestHeaderName;
    return this;
  }

  public AddSyslogJsonHttpOperationLogPublisherRequest addSuppressedRequestHeaderNameItem(String suppressedRequestHeaderNameItem) {
    if (this.suppressedRequestHeaderName == null) {
      this.suppressedRequestHeaderName = new ArrayList<>();
    }
    this.suppressedRequestHeaderName.add(suppressedRequestHeaderNameItem);
    return this;
  }

   /**
   * Specifies the case-insensitive names of request headers that should be omitted from log messages (e.g., for the purpose of brevity or security). This will only be used if the log-request-headers property has a value of true.
   * @return suppressedRequestHeaderName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the case-insensitive names of request headers that should be omitted from log messages (e.g., for the purpose of brevity or security). This will only be used if the log-request-headers property has a value of true.")

  public List<String> getSuppressedRequestHeaderName() {
    return suppressedRequestHeaderName;
  }


  public void setSuppressedRequestHeaderName(List<String> suppressedRequestHeaderName) {
    
    
    
    this.suppressedRequestHeaderName = suppressedRequestHeaderName;
  }


  public AddSyslogJsonHttpOperationLogPublisherRequest logResponseHeaders(EnumlogPublisherLogResponseHeadersProp logResponseHeaders) {
    
    
    
    
    this.logResponseHeaders = logResponseHeaders;
    return this;
  }

   /**
   * Get logResponseHeaders
   * @return logResponseHeaders
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EnumlogPublisherLogResponseHeadersProp getLogResponseHeaders() {
    return logResponseHeaders;
  }


  public void setLogResponseHeaders(EnumlogPublisherLogResponseHeadersProp logResponseHeaders) {
    
    
    
    this.logResponseHeaders = logResponseHeaders;
  }


  public AddSyslogJsonHttpOperationLogPublisherRequest suppressedResponseHeaderName(List<String> suppressedResponseHeaderName) {
    
    
    
    
    this.suppressedResponseHeaderName = suppressedResponseHeaderName;
    return this;
  }

  public AddSyslogJsonHttpOperationLogPublisherRequest addSuppressedResponseHeaderNameItem(String suppressedResponseHeaderNameItem) {
    if (this.suppressedResponseHeaderName == null) {
      this.suppressedResponseHeaderName = new ArrayList<>();
    }
    this.suppressedResponseHeaderName.add(suppressedResponseHeaderNameItem);
    return this;
  }

   /**
   * Specifies the case-insensitive names of response headers that should be omitted from log messages (e.g., for the purpose of brevity or security). This will only be used if the log-response-headers property has a value of true.
   * @return suppressedResponseHeaderName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the case-insensitive names of response headers that should be omitted from log messages (e.g., for the purpose of brevity or security). This will only be used if the log-response-headers property has a value of true.")

  public List<String> getSuppressedResponseHeaderName() {
    return suppressedResponseHeaderName;
  }


  public void setSuppressedResponseHeaderName(List<String> suppressedResponseHeaderName) {
    
    
    
    this.suppressedResponseHeaderName = suppressedResponseHeaderName;
  }


  public AddSyslogJsonHttpOperationLogPublisherRequest logRequestAuthorizationType(Boolean logRequestAuthorizationType) {
    
    
    
    
    this.logRequestAuthorizationType = logRequestAuthorizationType;
    return this;
  }

   /**
   * Indicates whether to log the type of credentials given if an \&quot;Authorization\&quot; header was included in the request. Logging the authorization type may be useful, and is much more secure than logging the entire value of the \&quot;Authorization\&quot; header.
   * @return logRequestAuthorizationType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether to log the type of credentials given if an \"Authorization\" header was included in the request. Logging the authorization type may be useful, and is much more secure than logging the entire value of the \"Authorization\" header.")

  public Boolean getLogRequestAuthorizationType() {
    return logRequestAuthorizationType;
  }


  public void setLogRequestAuthorizationType(Boolean logRequestAuthorizationType) {
    
    
    
    this.logRequestAuthorizationType = logRequestAuthorizationType;
  }


  public AddSyslogJsonHttpOperationLogPublisherRequest logRequestCookieNames(Boolean logRequestCookieNames) {
    
    
    
    
    this.logRequestCookieNames = logRequestCookieNames;
    return this;
  }

   /**
   * Indicates whether to log the names of any cookies included in an HTTP request. Logging cookie names may be useful and is much more secure than logging the entire content of the cookies (which may include sensitive information).
   * @return logRequestCookieNames
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether to log the names of any cookies included in an HTTP request. Logging cookie names may be useful and is much more secure than logging the entire content of the cookies (which may include sensitive information).")

  public Boolean getLogRequestCookieNames() {
    return logRequestCookieNames;
  }


  public void setLogRequestCookieNames(Boolean logRequestCookieNames) {
    
    
    
    this.logRequestCookieNames = logRequestCookieNames;
  }


  public AddSyslogJsonHttpOperationLogPublisherRequest logResponseCookieNames(Boolean logResponseCookieNames) {
    
    
    
    
    this.logResponseCookieNames = logResponseCookieNames;
    return this;
  }

   /**
   * Indicates whether to log the names of any cookies set in an HTTP response. Logging cookie names may be useful and is much more secure than logging the entire content of the cookies (which may include sensitive information).
   * @return logResponseCookieNames
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether to log the names of any cookies set in an HTTP response. Logging cookie names may be useful and is much more secure than logging the entire content of the cookies (which may include sensitive information).")

  public Boolean getLogResponseCookieNames() {
    return logResponseCookieNames;
  }


  public void setLogResponseCookieNames(Boolean logResponseCookieNames) {
    
    
    
    this.logResponseCookieNames = logResponseCookieNames;
  }


  public AddSyslogJsonHttpOperationLogPublisherRequest logRequestParameters(EnumlogPublisherLogRequestParametersProp logRequestParameters) {
    
    
    
    
    this.logRequestParameters = logRequestParameters;
    return this;
  }

   /**
   * Get logRequestParameters
   * @return logRequestParameters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EnumlogPublisherLogRequestParametersProp getLogRequestParameters() {
    return logRequestParameters;
  }


  public void setLogRequestParameters(EnumlogPublisherLogRequestParametersProp logRequestParameters) {
    
    
    
    this.logRequestParameters = logRequestParameters;
  }


  public AddSyslogJsonHttpOperationLogPublisherRequest suppressedRequestParameterName(List<String> suppressedRequestParameterName) {
    
    
    
    
    this.suppressedRequestParameterName = suppressedRequestParameterName;
    return this;
  }

  public AddSyslogJsonHttpOperationLogPublisherRequest addSuppressedRequestParameterNameItem(String suppressedRequestParameterNameItem) {
    if (this.suppressedRequestParameterName == null) {
      this.suppressedRequestParameterName = new ArrayList<>();
    }
    this.suppressedRequestParameterName.add(suppressedRequestParameterNameItem);
    return this;
  }

   /**
   * Specifies the case-insensitive names of request parameters that should be omitted from log messages (e.g., for the purpose of brevity or security). This will only be used if the log-request-parameters property has a value of parameter-names or parameter-names-and-values.
   * @return suppressedRequestParameterName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the case-insensitive names of request parameters that should be omitted from log messages (e.g., for the purpose of brevity or security). This will only be used if the log-request-parameters property has a value of parameter-names or parameter-names-and-values.")

  public List<String> getSuppressedRequestParameterName() {
    return suppressedRequestParameterName;
  }


  public void setSuppressedRequestParameterName(List<String> suppressedRequestParameterName) {
    
    
    
    this.suppressedRequestParameterName = suppressedRequestParameterName;
  }


  public AddSyslogJsonHttpOperationLogPublisherRequest logRequestProtocol(Boolean logRequestProtocol) {
    
    
    
    
    this.logRequestProtocol = logRequestProtocol;
    return this;
  }

   /**
   * Indicates whether request log messages should include information about the HTTP version specified in the request.
   * @return logRequestProtocol
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether request log messages should include information about the HTTP version specified in the request.")

  public Boolean getLogRequestProtocol() {
    return logRequestProtocol;
  }


  public void setLogRequestProtocol(Boolean logRequestProtocol) {
    
    
    
    this.logRequestProtocol = logRequestProtocol;
  }


  public AddSyslogJsonHttpOperationLogPublisherRequest logRedirectURI(Boolean logRedirectURI) {
    
    
    
    
    this.logRedirectURI = logRedirectURI;
    return this;
  }

   /**
   * Indicates whether the redirect URI (i.e., the value of the \&quot;Location\&quot; header from responses) should be included in response log messages.
   * @return logRedirectURI
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether the redirect URI (i.e., the value of the \"Location\" header from responses) should be included in response log messages.")

  public Boolean getLogRedirectURI() {
    return logRedirectURI;
  }


  public void setLogRedirectURI(Boolean logRedirectURI) {
    
    
    
    this.logRedirectURI = logRedirectURI;
  }


  public AddSyslogJsonHttpOperationLogPublisherRequest writeMultiLineMessages(Boolean writeMultiLineMessages) {
    
    
    
    
    this.writeMultiLineMessages = writeMultiLineMessages;
    return this;
  }

   /**
   * Indicates whether the JSON objects should use a multi-line representation (with each object field and array value on its own line) that may be easier for administrators to read, but each message will be larger (because of additional spaces and end-of-line markers), and it may be more difficult to consume and parse through some text-oriented tools.
   * @return writeMultiLineMessages
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether the JSON objects should use a multi-line representation (with each object field and array value on its own line) that may be easier for administrators to read, but each message will be larger (because of additional spaces and end-of-line markers), and it may be more difficult to consume and parse through some text-oriented tools.")

  public Boolean getWriteMultiLineMessages() {
    return writeMultiLineMessages;
  }


  public void setWriteMultiLineMessages(Boolean writeMultiLineMessages) {
    
    
    
    this.writeMultiLineMessages = writeMultiLineMessages;
  }


  public AddSyslogJsonHttpOperationLogPublisherRequest enabled(Boolean enabled) {
    
    
    
    
    this.enabled = enabled;
    return this;
  }

   /**
   * Indicates whether the Log Publisher is enabled for use.
   * @return enabled
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Indicates whether the Log Publisher is enabled for use.")

  public Boolean getEnabled() {
    return enabled;
  }


  public void setEnabled(Boolean enabled) {
    
    
    
    this.enabled = enabled;
  }


  public AddSyslogJsonHttpOperationLogPublisherRequest loggingErrorBehavior(EnumlogPublisherLoggingErrorBehaviorProp loggingErrorBehavior) {
    
    
    
    
    this.loggingErrorBehavior = loggingErrorBehavior;
    return this;
  }

   /**
   * Get loggingErrorBehavior
   * @return loggingErrorBehavior
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EnumlogPublisherLoggingErrorBehaviorProp getLoggingErrorBehavior() {
    return loggingErrorBehavior;
  }


  public void setLoggingErrorBehavior(EnumlogPublisherLoggingErrorBehaviorProp loggingErrorBehavior) {
    
    
    
    this.loggingErrorBehavior = loggingErrorBehavior;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the AddSyslogJsonHttpOperationLogPublisherRequest instance itself
   */
  public AddSyslogJsonHttpOperationLogPublisherRequest putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AddSyslogJsonHttpOperationLogPublisherRequest addSyslogJsonHttpOperationLogPublisherRequest = (AddSyslogJsonHttpOperationLogPublisherRequest) o;
    return Objects.equals(this.publisherName, addSyslogJsonHttpOperationLogPublisherRequest.publisherName) &&
        Objects.equals(this.description, addSyslogJsonHttpOperationLogPublisherRequest.description) &&
        Objects.equals(this.schemas, addSyslogJsonHttpOperationLogPublisherRequest.schemas) &&
        Objects.equals(this.syslogExternalServer, addSyslogJsonHttpOperationLogPublisherRequest.syslogExternalServer) &&
        Objects.equals(this.syslogFacility, addSyslogJsonHttpOperationLogPublisherRequest.syslogFacility) &&
        Objects.equals(this.syslogSeverity, addSyslogJsonHttpOperationLogPublisherRequest.syslogSeverity) &&
        Objects.equals(this.syslogMessageHostName, addSyslogJsonHttpOperationLogPublisherRequest.syslogMessageHostName) &&
        Objects.equals(this.syslogMessageApplicationName, addSyslogJsonHttpOperationLogPublisherRequest.syslogMessageApplicationName) &&
        Objects.equals(this.queueSize, addSyslogJsonHttpOperationLogPublisherRequest.queueSize) &&
        Objects.equals(this.logRequests, addSyslogJsonHttpOperationLogPublisherRequest.logRequests) &&
        Objects.equals(this.logResults, addSyslogJsonHttpOperationLogPublisherRequest.logResults) &&
        Objects.equals(this.includeProductName, addSyslogJsonHttpOperationLogPublisherRequest.includeProductName) &&
        Objects.equals(this.includeInstanceName, addSyslogJsonHttpOperationLogPublisherRequest.includeInstanceName) &&
        Objects.equals(this.includeStartupID, addSyslogJsonHttpOperationLogPublisherRequest.includeStartupID) &&
        Objects.equals(this.includeThreadID, addSyslogJsonHttpOperationLogPublisherRequest.includeThreadID) &&
        Objects.equals(this.includeRequestDetailsInResultMessages, addSyslogJsonHttpOperationLogPublisherRequest.includeRequestDetailsInResultMessages) &&
        Objects.equals(this.logRequestHeaders, addSyslogJsonHttpOperationLogPublisherRequest.logRequestHeaders) &&
        Objects.equals(this.suppressedRequestHeaderName, addSyslogJsonHttpOperationLogPublisherRequest.suppressedRequestHeaderName) &&
        Objects.equals(this.logResponseHeaders, addSyslogJsonHttpOperationLogPublisherRequest.logResponseHeaders) &&
        Objects.equals(this.suppressedResponseHeaderName, addSyslogJsonHttpOperationLogPublisherRequest.suppressedResponseHeaderName) &&
        Objects.equals(this.logRequestAuthorizationType, addSyslogJsonHttpOperationLogPublisherRequest.logRequestAuthorizationType) &&
        Objects.equals(this.logRequestCookieNames, addSyslogJsonHttpOperationLogPublisherRequest.logRequestCookieNames) &&
        Objects.equals(this.logResponseCookieNames, addSyslogJsonHttpOperationLogPublisherRequest.logResponseCookieNames) &&
        Objects.equals(this.logRequestParameters, addSyslogJsonHttpOperationLogPublisherRequest.logRequestParameters) &&
        Objects.equals(this.suppressedRequestParameterName, addSyslogJsonHttpOperationLogPublisherRequest.suppressedRequestParameterName) &&
        Objects.equals(this.logRequestProtocol, addSyslogJsonHttpOperationLogPublisherRequest.logRequestProtocol) &&
        Objects.equals(this.logRedirectURI, addSyslogJsonHttpOperationLogPublisherRequest.logRedirectURI) &&
        Objects.equals(this.writeMultiLineMessages, addSyslogJsonHttpOperationLogPublisherRequest.writeMultiLineMessages) &&
        Objects.equals(this.enabled, addSyslogJsonHttpOperationLogPublisherRequest.enabled) &&
        Objects.equals(this.loggingErrorBehavior, addSyslogJsonHttpOperationLogPublisherRequest.loggingErrorBehavior)&&
        Objects.equals(this.additionalProperties, addSyslogJsonHttpOperationLogPublisherRequest.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(publisherName, description, schemas, syslogExternalServer, syslogFacility, syslogSeverity, syslogMessageHostName, syslogMessageApplicationName, queueSize, logRequests, logResults, includeProductName, includeInstanceName, includeStartupID, includeThreadID, includeRequestDetailsInResultMessages, logRequestHeaders, suppressedRequestHeaderName, logResponseHeaders, suppressedResponseHeaderName, logRequestAuthorizationType, logRequestCookieNames, logResponseCookieNames, logRequestParameters, suppressedRequestParameterName, logRequestProtocol, logRedirectURI, writeMultiLineMessages, enabled, loggingErrorBehavior, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AddSyslogJsonHttpOperationLogPublisherRequest {\n");
    sb.append("    publisherName: ").append(toIndentedString(publisherName)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    schemas: ").append(toIndentedString(schemas)).append("\n");
    sb.append("    syslogExternalServer: ").append(toIndentedString(syslogExternalServer)).append("\n");
    sb.append("    syslogFacility: ").append(toIndentedString(syslogFacility)).append("\n");
    sb.append("    syslogSeverity: ").append(toIndentedString(syslogSeverity)).append("\n");
    sb.append("    syslogMessageHostName: ").append(toIndentedString(syslogMessageHostName)).append("\n");
    sb.append("    syslogMessageApplicationName: ").append(toIndentedString(syslogMessageApplicationName)).append("\n");
    sb.append("    queueSize: ").append(toIndentedString(queueSize)).append("\n");
    sb.append("    logRequests: ").append(toIndentedString(logRequests)).append("\n");
    sb.append("    logResults: ").append(toIndentedString(logResults)).append("\n");
    sb.append("    includeProductName: ").append(toIndentedString(includeProductName)).append("\n");
    sb.append("    includeInstanceName: ").append(toIndentedString(includeInstanceName)).append("\n");
    sb.append("    includeStartupID: ").append(toIndentedString(includeStartupID)).append("\n");
    sb.append("    includeThreadID: ").append(toIndentedString(includeThreadID)).append("\n");
    sb.append("    includeRequestDetailsInResultMessages: ").append(toIndentedString(includeRequestDetailsInResultMessages)).append("\n");
    sb.append("    logRequestHeaders: ").append(toIndentedString(logRequestHeaders)).append("\n");
    sb.append("    suppressedRequestHeaderName: ").append(toIndentedString(suppressedRequestHeaderName)).append("\n");
    sb.append("    logResponseHeaders: ").append(toIndentedString(logResponseHeaders)).append("\n");
    sb.append("    suppressedResponseHeaderName: ").append(toIndentedString(suppressedResponseHeaderName)).append("\n");
    sb.append("    logRequestAuthorizationType: ").append(toIndentedString(logRequestAuthorizationType)).append("\n");
    sb.append("    logRequestCookieNames: ").append(toIndentedString(logRequestCookieNames)).append("\n");
    sb.append("    logResponseCookieNames: ").append(toIndentedString(logResponseCookieNames)).append("\n");
    sb.append("    logRequestParameters: ").append(toIndentedString(logRequestParameters)).append("\n");
    sb.append("    suppressedRequestParameterName: ").append(toIndentedString(suppressedRequestParameterName)).append("\n");
    sb.append("    logRequestProtocol: ").append(toIndentedString(logRequestProtocol)).append("\n");
    sb.append("    logRedirectURI: ").append(toIndentedString(logRedirectURI)).append("\n");
    sb.append("    writeMultiLineMessages: ").append(toIndentedString(writeMultiLineMessages)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    loggingErrorBehavior: ").append(toIndentedString(loggingErrorBehavior)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("publisherName");
    openapiFields.add("description");
    openapiFields.add("schemas");
    openapiFields.add("syslogExternalServer");
    openapiFields.add("syslogFacility");
    openapiFields.add("syslogSeverity");
    openapiFields.add("syslogMessageHostName");
    openapiFields.add("syslogMessageApplicationName");
    openapiFields.add("queueSize");
    openapiFields.add("logRequests");
    openapiFields.add("logResults");
    openapiFields.add("includeProductName");
    openapiFields.add("includeInstanceName");
    openapiFields.add("includeStartupID");
    openapiFields.add("includeThreadID");
    openapiFields.add("includeRequestDetailsInResultMessages");
    openapiFields.add("logRequestHeaders");
    openapiFields.add("suppressedRequestHeaderName");
    openapiFields.add("logResponseHeaders");
    openapiFields.add("suppressedResponseHeaderName");
    openapiFields.add("logRequestAuthorizationType");
    openapiFields.add("logRequestCookieNames");
    openapiFields.add("logResponseCookieNames");
    openapiFields.add("logRequestParameters");
    openapiFields.add("suppressedRequestParameterName");
    openapiFields.add("logRequestProtocol");
    openapiFields.add("logRedirectURI");
    openapiFields.add("writeMultiLineMessages");
    openapiFields.add("enabled");
    openapiFields.add("loggingErrorBehavior");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("publisherName");
    openapiRequiredFields.add("schemas");
    openapiRequiredFields.add("syslogExternalServer");
    openapiRequiredFields.add("enabled");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to AddSyslogJsonHttpOperationLogPublisherRequest
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!AddSyslogJsonHttpOperationLogPublisherRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AddSyslogJsonHttpOperationLogPublisherRequest is not found in the empty JSON string", AddSyslogJsonHttpOperationLogPublisherRequest.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : AddSyslogJsonHttpOperationLogPublisherRequest.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("publisherName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `publisherName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("publisherName").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("schemas") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("schemas").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `schemas` to be an array in the JSON string but got `%s`", jsonObj.get("schemas").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("syslogExternalServer") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("syslogExternalServer").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `syslogExternalServer` to be an array in the JSON string but got `%s`", jsonObj.get("syslogExternalServer").toString()));
      }
      if ((jsonObj.get("syslogMessageHostName") != null && !jsonObj.get("syslogMessageHostName").isJsonNull()) && !jsonObj.get("syslogMessageHostName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `syslogMessageHostName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("syslogMessageHostName").toString()));
      }
      if ((jsonObj.get("syslogMessageApplicationName") != null && !jsonObj.get("syslogMessageApplicationName").isJsonNull()) && !jsonObj.get("syslogMessageApplicationName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `syslogMessageApplicationName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("syslogMessageApplicationName").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("suppressedRequestHeaderName") != null && !jsonObj.get("suppressedRequestHeaderName").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `suppressedRequestHeaderName` to be an array in the JSON string but got `%s`", jsonObj.get("suppressedRequestHeaderName").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("suppressedResponseHeaderName") != null && !jsonObj.get("suppressedResponseHeaderName").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `suppressedResponseHeaderName` to be an array in the JSON string but got `%s`", jsonObj.get("suppressedResponseHeaderName").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("suppressedRequestParameterName") != null && !jsonObj.get("suppressedRequestParameterName").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `suppressedRequestParameterName` to be an array in the JSON string but got `%s`", jsonObj.get("suppressedRequestParameterName").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AddSyslogJsonHttpOperationLogPublisherRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AddSyslogJsonHttpOperationLogPublisherRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AddSyslogJsonHttpOperationLogPublisherRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AddSyslogJsonHttpOperationLogPublisherRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<AddSyslogJsonHttpOperationLogPublisherRequest>() {
           @Override
           public void write(JsonWriter out, AddSyslogJsonHttpOperationLogPublisherRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public AddSyslogJsonHttpOperationLogPublisherRequest read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             AddSyslogJsonHttpOperationLogPublisherRequest instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AddSyslogJsonHttpOperationLogPublisherRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AddSyslogJsonHttpOperationLogPublisherRequest
  * @throws IOException if the JSON string is invalid with respect to AddSyslogJsonHttpOperationLogPublisherRequest
  */
  public static AddSyslogJsonHttpOperationLogPublisherRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AddSyslogJsonHttpOperationLogPublisherRequest.class);
  }

 /**
  * Convert an instance of AddSyslogJsonHttpOperationLogPublisherRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

