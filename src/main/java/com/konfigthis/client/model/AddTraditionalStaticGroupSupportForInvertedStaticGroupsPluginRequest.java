/*
 * PingData Config - OpenAPI 3.0
 * This is the PingData Configuration API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.EnumpluginReadOperationSupportProp;
import com.konfigthis.client.model.EnumpluginTraditionalStaticGroupObjectClassProp;
import com.konfigthis.client.model.EnumtraditionalStaticGroupSupportForInvertedStaticGroupsPluginSchemaUrn;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * AddTraditionalStaticGroupSupportForInvertedStaticGroupsPluginRequest
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class AddTraditionalStaticGroupSupportForInvertedStaticGroupsPluginRequest {
  public static final String SERIALIZED_NAME_PLUGIN_NAME = "pluginName";
  @SerializedName(SERIALIZED_NAME_PLUGIN_NAME)
  private String pluginName;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_SCHEMAS = "schemas";
  @SerializedName(SERIALIZED_NAME_SCHEMAS)
  private List<EnumtraditionalStaticGroupSupportForInvertedStaticGroupsPluginSchemaUrn> schemas = new ArrayList<>();

  public static final String SERIALIZED_NAME_TRADITIONAL_STATIC_GROUP_OBJECT_CLASS = "traditionalStaticGroupObjectClass";
  @SerializedName(SERIALIZED_NAME_TRADITIONAL_STATIC_GROUP_OBJECT_CLASS)
  private EnumpluginTraditionalStaticGroupObjectClassProp traditionalStaticGroupObjectClass;

  public static final String SERIALIZED_NAME_MAXIMUM_MEMBERSHIP_UPDATES_PER_MODIFY = "maximumMembershipUpdatesPerModify";
  @SerializedName(SERIALIZED_NAME_MAXIMUM_MEMBERSHIP_UPDATES_PER_MODIFY)
  private Integer maximumMembershipUpdatesPerModify;

  public static final String SERIALIZED_NAME_READ_OPERATION_SUPPORT = "readOperationSupport";
  @SerializedName(SERIALIZED_NAME_READ_OPERATION_SUPPORT)
  private EnumpluginReadOperationSupportProp readOperationSupport;

  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled;

  public static final String SERIALIZED_NAME_INVOKE_FOR_INTERNAL_OPERATIONS = "invokeForInternalOperations";
  @SerializedName(SERIALIZED_NAME_INVOKE_FOR_INTERNAL_OPERATIONS)
  private Boolean invokeForInternalOperations;

  public AddTraditionalStaticGroupSupportForInvertedStaticGroupsPluginRequest() {
  }

  public AddTraditionalStaticGroupSupportForInvertedStaticGroupsPluginRequest pluginName(String pluginName) {
    
    
    
    
    this.pluginName = pluginName;
    return this;
  }

   /**
   * Name of the new Plugin
   * @return pluginName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Name of the new Plugin")

  public String getPluginName() {
    return pluginName;
  }


  public void setPluginName(String pluginName) {
    
    
    
    this.pluginName = pluginName;
  }


  public AddTraditionalStaticGroupSupportForInvertedStaticGroupsPluginRequest description(String description) {
    
    
    
    
    this.description = description;
    return this;
  }

   /**
   * A description for this Plugin
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A description for this Plugin")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    
    
    
    this.description = description;
  }


  public AddTraditionalStaticGroupSupportForInvertedStaticGroupsPluginRequest schemas(List<EnumtraditionalStaticGroupSupportForInvertedStaticGroupsPluginSchemaUrn> schemas) {
    
    
    
    
    this.schemas = schemas;
    return this;
  }

  public AddTraditionalStaticGroupSupportForInvertedStaticGroupsPluginRequest addSchemasItem(EnumtraditionalStaticGroupSupportForInvertedStaticGroupsPluginSchemaUrn schemasItem) {
    this.schemas.add(schemasItem);
    return this;
  }

   /**
   * Get schemas
   * @return schemas
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<EnumtraditionalStaticGroupSupportForInvertedStaticGroupsPluginSchemaUrn> getSchemas() {
    return schemas;
  }


  public void setSchemas(List<EnumtraditionalStaticGroupSupportForInvertedStaticGroupsPluginSchemaUrn> schemas) {
    
    
    
    this.schemas = schemas;
  }


  public AddTraditionalStaticGroupSupportForInvertedStaticGroupsPluginRequest traditionalStaticGroupObjectClass(EnumpluginTraditionalStaticGroupObjectClassProp traditionalStaticGroupObjectClass) {
    
    
    
    
    this.traditionalStaticGroupObjectClass = traditionalStaticGroupObjectClass;
    return this;
  }

   /**
   * Get traditionalStaticGroupObjectClass
   * @return traditionalStaticGroupObjectClass
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EnumpluginTraditionalStaticGroupObjectClassProp getTraditionalStaticGroupObjectClass() {
    return traditionalStaticGroupObjectClass;
  }


  public void setTraditionalStaticGroupObjectClass(EnumpluginTraditionalStaticGroupObjectClassProp traditionalStaticGroupObjectClass) {
    
    
    
    this.traditionalStaticGroupObjectClass = traditionalStaticGroupObjectClass;
  }


  public AddTraditionalStaticGroupSupportForInvertedStaticGroupsPluginRequest maximumMembershipUpdatesPerModify(Integer maximumMembershipUpdatesPerModify) {
    
    
    
    
    this.maximumMembershipUpdatesPerModify = maximumMembershipUpdatesPerModify;
    return this;
  }

   /**
   * An integer property that specifies the maximum number of membership changes that will be supported in a single modify operation. A value of zero indicates that modify operations targeting the group entry should not be permitted to alter the set of members for the group.
   * @return maximumMembershipUpdatesPerModify
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An integer property that specifies the maximum number of membership changes that will be supported in a single modify operation. A value of zero indicates that modify operations targeting the group entry should not be permitted to alter the set of members for the group.")

  public Integer getMaximumMembershipUpdatesPerModify() {
    return maximumMembershipUpdatesPerModify;
  }


  public void setMaximumMembershipUpdatesPerModify(Integer maximumMembershipUpdatesPerModify) {
    
    
    
    this.maximumMembershipUpdatesPerModify = maximumMembershipUpdatesPerModify;
  }


  public AddTraditionalStaticGroupSupportForInvertedStaticGroupsPluginRequest readOperationSupport(EnumpluginReadOperationSupportProp readOperationSupport) {
    
    
    
    
    this.readOperationSupport = readOperationSupport;
    return this;
  }

   /**
   * Get readOperationSupport
   * @return readOperationSupport
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EnumpluginReadOperationSupportProp getReadOperationSupport() {
    return readOperationSupport;
  }


  public void setReadOperationSupport(EnumpluginReadOperationSupportProp readOperationSupport) {
    
    
    
    this.readOperationSupport = readOperationSupport;
  }


  public AddTraditionalStaticGroupSupportForInvertedStaticGroupsPluginRequest enabled(Boolean enabled) {
    
    
    
    
    this.enabled = enabled;
    return this;
  }

   /**
   * Indicates whether the plug-in is enabled for use.
   * @return enabled
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Indicates whether the plug-in is enabled for use.")

  public Boolean getEnabled() {
    return enabled;
  }


  public void setEnabled(Boolean enabled) {
    
    
    
    this.enabled = enabled;
  }


  public AddTraditionalStaticGroupSupportForInvertedStaticGroupsPluginRequest invokeForInternalOperations(Boolean invokeForInternalOperations) {
    
    
    
    
    this.invokeForInternalOperations = invokeForInternalOperations;
    return this;
  }

   /**
   * Indicates whether the plug-in should be invoked for internal operations.
   * @return invokeForInternalOperations
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether the plug-in should be invoked for internal operations.")

  public Boolean getInvokeForInternalOperations() {
    return invokeForInternalOperations;
  }


  public void setInvokeForInternalOperations(Boolean invokeForInternalOperations) {
    
    
    
    this.invokeForInternalOperations = invokeForInternalOperations;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the AddTraditionalStaticGroupSupportForInvertedStaticGroupsPluginRequest instance itself
   */
  public AddTraditionalStaticGroupSupportForInvertedStaticGroupsPluginRequest putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AddTraditionalStaticGroupSupportForInvertedStaticGroupsPluginRequest addTraditionalStaticGroupSupportForInvertedStaticGroupsPluginRequest = (AddTraditionalStaticGroupSupportForInvertedStaticGroupsPluginRequest) o;
    return Objects.equals(this.pluginName, addTraditionalStaticGroupSupportForInvertedStaticGroupsPluginRequest.pluginName) &&
        Objects.equals(this.description, addTraditionalStaticGroupSupportForInvertedStaticGroupsPluginRequest.description) &&
        Objects.equals(this.schemas, addTraditionalStaticGroupSupportForInvertedStaticGroupsPluginRequest.schemas) &&
        Objects.equals(this.traditionalStaticGroupObjectClass, addTraditionalStaticGroupSupportForInvertedStaticGroupsPluginRequest.traditionalStaticGroupObjectClass) &&
        Objects.equals(this.maximumMembershipUpdatesPerModify, addTraditionalStaticGroupSupportForInvertedStaticGroupsPluginRequest.maximumMembershipUpdatesPerModify) &&
        Objects.equals(this.readOperationSupport, addTraditionalStaticGroupSupportForInvertedStaticGroupsPluginRequest.readOperationSupport) &&
        Objects.equals(this.enabled, addTraditionalStaticGroupSupportForInvertedStaticGroupsPluginRequest.enabled) &&
        Objects.equals(this.invokeForInternalOperations, addTraditionalStaticGroupSupportForInvertedStaticGroupsPluginRequest.invokeForInternalOperations)&&
        Objects.equals(this.additionalProperties, addTraditionalStaticGroupSupportForInvertedStaticGroupsPluginRequest.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pluginName, description, schemas, traditionalStaticGroupObjectClass, maximumMembershipUpdatesPerModify, readOperationSupport, enabled, invokeForInternalOperations, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AddTraditionalStaticGroupSupportForInvertedStaticGroupsPluginRequest {\n");
    sb.append("    pluginName: ").append(toIndentedString(pluginName)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    schemas: ").append(toIndentedString(schemas)).append("\n");
    sb.append("    traditionalStaticGroupObjectClass: ").append(toIndentedString(traditionalStaticGroupObjectClass)).append("\n");
    sb.append("    maximumMembershipUpdatesPerModify: ").append(toIndentedString(maximumMembershipUpdatesPerModify)).append("\n");
    sb.append("    readOperationSupport: ").append(toIndentedString(readOperationSupport)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    invokeForInternalOperations: ").append(toIndentedString(invokeForInternalOperations)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("pluginName");
    openapiFields.add("description");
    openapiFields.add("schemas");
    openapiFields.add("traditionalStaticGroupObjectClass");
    openapiFields.add("maximumMembershipUpdatesPerModify");
    openapiFields.add("readOperationSupport");
    openapiFields.add("enabled");
    openapiFields.add("invokeForInternalOperations");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("pluginName");
    openapiRequiredFields.add("schemas");
    openapiRequiredFields.add("enabled");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to AddTraditionalStaticGroupSupportForInvertedStaticGroupsPluginRequest
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!AddTraditionalStaticGroupSupportForInvertedStaticGroupsPluginRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AddTraditionalStaticGroupSupportForInvertedStaticGroupsPluginRequest is not found in the empty JSON string", AddTraditionalStaticGroupSupportForInvertedStaticGroupsPluginRequest.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : AddTraditionalStaticGroupSupportForInvertedStaticGroupsPluginRequest.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("pluginName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pluginName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pluginName").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("schemas") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("schemas").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `schemas` to be an array in the JSON string but got `%s`", jsonObj.get("schemas").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AddTraditionalStaticGroupSupportForInvertedStaticGroupsPluginRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AddTraditionalStaticGroupSupportForInvertedStaticGroupsPluginRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AddTraditionalStaticGroupSupportForInvertedStaticGroupsPluginRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AddTraditionalStaticGroupSupportForInvertedStaticGroupsPluginRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<AddTraditionalStaticGroupSupportForInvertedStaticGroupsPluginRequest>() {
           @Override
           public void write(JsonWriter out, AddTraditionalStaticGroupSupportForInvertedStaticGroupsPluginRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public AddTraditionalStaticGroupSupportForInvertedStaticGroupsPluginRequest read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             AddTraditionalStaticGroupSupportForInvertedStaticGroupsPluginRequest instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AddTraditionalStaticGroupSupportForInvertedStaticGroupsPluginRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AddTraditionalStaticGroupSupportForInvertedStaticGroupsPluginRequest
  * @throws IOException if the JSON string is invalid with respect to AddTraditionalStaticGroupSupportForInvertedStaticGroupsPluginRequest
  */
  public static AddTraditionalStaticGroupSupportForInvertedStaticGroupsPluginRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AddTraditionalStaticGroupSupportForInvertedStaticGroupsPluginRequest.class);
  }

 /**
  * Convert an instance of AddTraditionalStaticGroupSupportForInvertedStaticGroupsPluginRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

