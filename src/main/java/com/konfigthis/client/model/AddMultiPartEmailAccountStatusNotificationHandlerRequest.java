/*
 * PingData Config - OpenAPI 3.0
 * This is the PingData Configuration API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.EnummultiPartEmailAccountStatusNotificationHandlerSchemaUrn;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * AddMultiPartEmailAccountStatusNotificationHandlerRequest
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class AddMultiPartEmailAccountStatusNotificationHandlerRequest {
  public static final String SERIALIZED_NAME_HANDLER_NAME = "handlerName";
  @SerializedName(SERIALIZED_NAME_HANDLER_NAME)
  private String handlerName;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_SCHEMAS = "schemas";
  @SerializedName(SERIALIZED_NAME_SCHEMAS)
  private List<EnummultiPartEmailAccountStatusNotificationHandlerSchemaUrn> schemas = new ArrayList<>();

  public static final String SERIALIZED_NAME_ACCOUNT_TEMPORARILY_FAILURE_LOCKED_MESSAGE_TEMPLATE = "accountTemporarilyFailureLockedMessageTemplate";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_TEMPORARILY_FAILURE_LOCKED_MESSAGE_TEMPLATE)
  private String accountTemporarilyFailureLockedMessageTemplate;

  public static final String SERIALIZED_NAME_ACCOUNT_PERMANENTLY_FAILURE_LOCKED_MESSAGE_TEMPLATE = "accountPermanentlyFailureLockedMessageTemplate";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_PERMANENTLY_FAILURE_LOCKED_MESSAGE_TEMPLATE)
  private String accountPermanentlyFailureLockedMessageTemplate;

  public static final String SERIALIZED_NAME_ACCOUNT_IDLE_LOCKED_MESSAGE_TEMPLATE = "accountIdleLockedMessageTemplate";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_IDLE_LOCKED_MESSAGE_TEMPLATE)
  private String accountIdleLockedMessageTemplate;

  public static final String SERIALIZED_NAME_ACCOUNT_RESET_LOCKED_MESSAGE_TEMPLATE = "accountResetLockedMessageTemplate";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_RESET_LOCKED_MESSAGE_TEMPLATE)
  private String accountResetLockedMessageTemplate;

  public static final String SERIALIZED_NAME_ACCOUNT_UNLOCKED_MESSAGE_TEMPLATE = "accountUnlockedMessageTemplate";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_UNLOCKED_MESSAGE_TEMPLATE)
  private String accountUnlockedMessageTemplate;

  public static final String SERIALIZED_NAME_ACCOUNT_DISABLED_MESSAGE_TEMPLATE = "accountDisabledMessageTemplate";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_DISABLED_MESSAGE_TEMPLATE)
  private String accountDisabledMessageTemplate;

  public static final String SERIALIZED_NAME_ACCOUNT_ENABLED_MESSAGE_TEMPLATE = "accountEnabledMessageTemplate";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_ENABLED_MESSAGE_TEMPLATE)
  private String accountEnabledMessageTemplate;

  public static final String SERIALIZED_NAME_ACCOUNT_NOT_YET_ACTIVE_MESSAGE_TEMPLATE = "accountNotYetActiveMessageTemplate";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_NOT_YET_ACTIVE_MESSAGE_TEMPLATE)
  private String accountNotYetActiveMessageTemplate;

  public static final String SERIALIZED_NAME_ACCOUNT_EXPIRED_MESSAGE_TEMPLATE = "accountExpiredMessageTemplate";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_EXPIRED_MESSAGE_TEMPLATE)
  private String accountExpiredMessageTemplate;

  public static final String SERIALIZED_NAME_PASSWORD_EXPIRED_MESSAGE_TEMPLATE = "passwordExpiredMessageTemplate";
  @SerializedName(SERIALIZED_NAME_PASSWORD_EXPIRED_MESSAGE_TEMPLATE)
  private String passwordExpiredMessageTemplate;

  public static final String SERIALIZED_NAME_PASSWORD_EXPIRING_MESSAGE_TEMPLATE = "passwordExpiringMessageTemplate";
  @SerializedName(SERIALIZED_NAME_PASSWORD_EXPIRING_MESSAGE_TEMPLATE)
  private String passwordExpiringMessageTemplate;

  public static final String SERIALIZED_NAME_PASSWORD_RESET_MESSAGE_TEMPLATE = "passwordResetMessageTemplate";
  @SerializedName(SERIALIZED_NAME_PASSWORD_RESET_MESSAGE_TEMPLATE)
  private String passwordResetMessageTemplate;

  public static final String SERIALIZED_NAME_PASSWORD_CHANGED_MESSAGE_TEMPLATE = "passwordChangedMessageTemplate";
  @SerializedName(SERIALIZED_NAME_PASSWORD_CHANGED_MESSAGE_TEMPLATE)
  private String passwordChangedMessageTemplate;

  public static final String SERIALIZED_NAME_ACCOUNT_AUTHENTICATED_MESSAGE_TEMPLATE = "accountAuthenticatedMessageTemplate";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_AUTHENTICATED_MESSAGE_TEMPLATE)
  private String accountAuthenticatedMessageTemplate;

  public static final String SERIALIZED_NAME_ACCOUNT_CREATED_MESSAGE_TEMPLATE = "accountCreatedMessageTemplate";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_CREATED_MESSAGE_TEMPLATE)
  private String accountCreatedMessageTemplate;

  public static final String SERIALIZED_NAME_ACCOUNT_DELETED_MESSAGE_TEMPLATE = "accountDeletedMessageTemplate";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_DELETED_MESSAGE_TEMPLATE)
  private String accountDeletedMessageTemplate;

  public static final String SERIALIZED_NAME_ACCOUNT_UPDATED_MESSAGE_TEMPLATE = "accountUpdatedMessageTemplate";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_UPDATED_MESSAGE_TEMPLATE)
  private String accountUpdatedMessageTemplate;

  public static final String SERIALIZED_NAME_BIND_PASSWORD_FAILED_VALIDATION_MESSAGE_TEMPLATE = "bindPasswordFailedValidationMessageTemplate";
  @SerializedName(SERIALIZED_NAME_BIND_PASSWORD_FAILED_VALIDATION_MESSAGE_TEMPLATE)
  private String bindPasswordFailedValidationMessageTemplate;

  public static final String SERIALIZED_NAME_MUST_CHANGE_PASSWORD_MESSAGE_TEMPLATE = "mustChangePasswordMessageTemplate";
  @SerializedName(SERIALIZED_NAME_MUST_CHANGE_PASSWORD_MESSAGE_TEMPLATE)
  private String mustChangePasswordMessageTemplate;

  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled;

  public static final String SERIALIZED_NAME_ASYNCHRONOUS = "asynchronous";
  @SerializedName(SERIALIZED_NAME_ASYNCHRONOUS)
  private Boolean asynchronous;

  public static final String SERIALIZED_NAME_ACCOUNT_AUTHENTICATION_NOTIFICATION_RESULT_CRITERIA = "accountAuthenticationNotificationResultCriteria";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_AUTHENTICATION_NOTIFICATION_RESULT_CRITERIA)
  private String accountAuthenticationNotificationResultCriteria;

  public static final String SERIALIZED_NAME_ACCOUNT_CREATION_NOTIFICATION_REQUEST_CRITERIA = "accountCreationNotificationRequestCriteria";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_CREATION_NOTIFICATION_REQUEST_CRITERIA)
  private String accountCreationNotificationRequestCriteria;

  public static final String SERIALIZED_NAME_ACCOUNT_DELETION_NOTIFICATION_REQUEST_CRITERIA = "accountDeletionNotificationRequestCriteria";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_DELETION_NOTIFICATION_REQUEST_CRITERIA)
  private String accountDeletionNotificationRequestCriteria;

  public static final String SERIALIZED_NAME_ACCOUNT_UPDATE_NOTIFICATION_REQUEST_CRITERIA = "accountUpdateNotificationRequestCriteria";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_UPDATE_NOTIFICATION_REQUEST_CRITERIA)
  private String accountUpdateNotificationRequestCriteria;

  public AddMultiPartEmailAccountStatusNotificationHandlerRequest() {
  }

  public AddMultiPartEmailAccountStatusNotificationHandlerRequest handlerName(String handlerName) {
    
    
    
    
    this.handlerName = handlerName;
    return this;
  }

   /**
   * Name of the new Account Status Notification Handler
   * @return handlerName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Name of the new Account Status Notification Handler")

  public String getHandlerName() {
    return handlerName;
  }


  public void setHandlerName(String handlerName) {
    
    
    
    this.handlerName = handlerName;
  }


  public AddMultiPartEmailAccountStatusNotificationHandlerRequest description(String description) {
    
    
    
    
    this.description = description;
    return this;
  }

   /**
   * A description for this Account Status Notification Handler
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A description for this Account Status Notification Handler")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    
    
    
    this.description = description;
  }


  public AddMultiPartEmailAccountStatusNotificationHandlerRequest schemas(List<EnummultiPartEmailAccountStatusNotificationHandlerSchemaUrn> schemas) {
    
    
    
    
    this.schemas = schemas;
    return this;
  }

  public AddMultiPartEmailAccountStatusNotificationHandlerRequest addSchemasItem(EnummultiPartEmailAccountStatusNotificationHandlerSchemaUrn schemasItem) {
    this.schemas.add(schemasItem);
    return this;
  }

   /**
   * Get schemas
   * @return schemas
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<EnummultiPartEmailAccountStatusNotificationHandlerSchemaUrn> getSchemas() {
    return schemas;
  }


  public void setSchemas(List<EnummultiPartEmailAccountStatusNotificationHandlerSchemaUrn> schemas) {
    
    
    
    this.schemas = schemas;
  }


  public AddMultiPartEmailAccountStatusNotificationHandlerRequest accountTemporarilyFailureLockedMessageTemplate(String accountTemporarilyFailureLockedMessageTemplate) {
    
    
    
    
    this.accountTemporarilyFailureLockedMessageTemplate = accountTemporarilyFailureLockedMessageTemplate;
    return this;
  }

   /**
   * The path to a file containing the template to use to generate the email message to send in the event that an account becomes temporarily locked as a result of too many authentication failures.
   * @return accountTemporarilyFailureLockedMessageTemplate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The path to a file containing the template to use to generate the email message to send in the event that an account becomes temporarily locked as a result of too many authentication failures.")

  public String getAccountTemporarilyFailureLockedMessageTemplate() {
    return accountTemporarilyFailureLockedMessageTemplate;
  }


  public void setAccountTemporarilyFailureLockedMessageTemplate(String accountTemporarilyFailureLockedMessageTemplate) {
    
    
    
    this.accountTemporarilyFailureLockedMessageTemplate = accountTemporarilyFailureLockedMessageTemplate;
  }


  public AddMultiPartEmailAccountStatusNotificationHandlerRequest accountPermanentlyFailureLockedMessageTemplate(String accountPermanentlyFailureLockedMessageTemplate) {
    
    
    
    
    this.accountPermanentlyFailureLockedMessageTemplate = accountPermanentlyFailureLockedMessageTemplate;
    return this;
  }

   /**
   * The path to a file containing the template to use to generate the email message to send in the event that an account becomes permanently locked as a result of too many authentication failures.
   * @return accountPermanentlyFailureLockedMessageTemplate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The path to a file containing the template to use to generate the email message to send in the event that an account becomes permanently locked as a result of too many authentication failures.")

  public String getAccountPermanentlyFailureLockedMessageTemplate() {
    return accountPermanentlyFailureLockedMessageTemplate;
  }


  public void setAccountPermanentlyFailureLockedMessageTemplate(String accountPermanentlyFailureLockedMessageTemplate) {
    
    
    
    this.accountPermanentlyFailureLockedMessageTemplate = accountPermanentlyFailureLockedMessageTemplate;
  }


  public AddMultiPartEmailAccountStatusNotificationHandlerRequest accountIdleLockedMessageTemplate(String accountIdleLockedMessageTemplate) {
    
    
    
    
    this.accountIdleLockedMessageTemplate = accountIdleLockedMessageTemplate;
    return this;
  }

   /**
   * The path to a file containing the template to use to generate the email message to send in the event that authentication attempt fails because it has been too long since the user last successfully authenticated.
   * @return accountIdleLockedMessageTemplate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The path to a file containing the template to use to generate the email message to send in the event that authentication attempt fails because it has been too long since the user last successfully authenticated.")

  public String getAccountIdleLockedMessageTemplate() {
    return accountIdleLockedMessageTemplate;
  }


  public void setAccountIdleLockedMessageTemplate(String accountIdleLockedMessageTemplate) {
    
    
    
    this.accountIdleLockedMessageTemplate = accountIdleLockedMessageTemplate;
  }


  public AddMultiPartEmailAccountStatusNotificationHandlerRequest accountResetLockedMessageTemplate(String accountResetLockedMessageTemplate) {
    
    
    
    
    this.accountResetLockedMessageTemplate = accountResetLockedMessageTemplate;
    return this;
  }

   /**
   * The path to a file containing the template to use to generate the email message to send in the event that authentication attempt fails because the user failed to choose a new password in a timely manner after an administrative reset.
   * @return accountResetLockedMessageTemplate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The path to a file containing the template to use to generate the email message to send in the event that authentication attempt fails because the user failed to choose a new password in a timely manner after an administrative reset.")

  public String getAccountResetLockedMessageTemplate() {
    return accountResetLockedMessageTemplate;
  }


  public void setAccountResetLockedMessageTemplate(String accountResetLockedMessageTemplate) {
    
    
    
    this.accountResetLockedMessageTemplate = accountResetLockedMessageTemplate;
  }


  public AddMultiPartEmailAccountStatusNotificationHandlerRequest accountUnlockedMessageTemplate(String accountUnlockedMessageTemplate) {
    
    
    
    
    this.accountUnlockedMessageTemplate = accountUnlockedMessageTemplate;
    return this;
  }

   /**
   * The path to a file containing the template to use to generate the email message to send in the event that a user&#39;s account has been unlocked (e.g., by an administrative password reset).
   * @return accountUnlockedMessageTemplate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The path to a file containing the template to use to generate the email message to send in the event that a user's account has been unlocked (e.g., by an administrative password reset).")

  public String getAccountUnlockedMessageTemplate() {
    return accountUnlockedMessageTemplate;
  }


  public void setAccountUnlockedMessageTemplate(String accountUnlockedMessageTemplate) {
    
    
    
    this.accountUnlockedMessageTemplate = accountUnlockedMessageTemplate;
  }


  public AddMultiPartEmailAccountStatusNotificationHandlerRequest accountDisabledMessageTemplate(String accountDisabledMessageTemplate) {
    
    
    
    
    this.accountDisabledMessageTemplate = accountDisabledMessageTemplate;
    return this;
  }

   /**
   * The path to a file containing the template to use to generate the email message to send in the event that a user&#39;s account is disabled by an administrator.
   * @return accountDisabledMessageTemplate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The path to a file containing the template to use to generate the email message to send in the event that a user's account is disabled by an administrator.")

  public String getAccountDisabledMessageTemplate() {
    return accountDisabledMessageTemplate;
  }


  public void setAccountDisabledMessageTemplate(String accountDisabledMessageTemplate) {
    
    
    
    this.accountDisabledMessageTemplate = accountDisabledMessageTemplate;
  }


  public AddMultiPartEmailAccountStatusNotificationHandlerRequest accountEnabledMessageTemplate(String accountEnabledMessageTemplate) {
    
    
    
    
    this.accountEnabledMessageTemplate = accountEnabledMessageTemplate;
    return this;
  }

   /**
   * The path to a file containing the template to use to generate the email message to send in the event that a user&#39;s account is enabled by an administrator.
   * @return accountEnabledMessageTemplate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The path to a file containing the template to use to generate the email message to send in the event that a user's account is enabled by an administrator.")

  public String getAccountEnabledMessageTemplate() {
    return accountEnabledMessageTemplate;
  }


  public void setAccountEnabledMessageTemplate(String accountEnabledMessageTemplate) {
    
    
    
    this.accountEnabledMessageTemplate = accountEnabledMessageTemplate;
  }


  public AddMultiPartEmailAccountStatusNotificationHandlerRequest accountNotYetActiveMessageTemplate(String accountNotYetActiveMessageTemplate) {
    
    
    
    
    this.accountNotYetActiveMessageTemplate = accountNotYetActiveMessageTemplate;
    return this;
  }

   /**
   * The path to a file containing the template to use to generate the email message to send in the event that an authentication attempt fails because the account has an activation time that is in the future.
   * @return accountNotYetActiveMessageTemplate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The path to a file containing the template to use to generate the email message to send in the event that an authentication attempt fails because the account has an activation time that is in the future.")

  public String getAccountNotYetActiveMessageTemplate() {
    return accountNotYetActiveMessageTemplate;
  }


  public void setAccountNotYetActiveMessageTemplate(String accountNotYetActiveMessageTemplate) {
    
    
    
    this.accountNotYetActiveMessageTemplate = accountNotYetActiveMessageTemplate;
  }


  public AddMultiPartEmailAccountStatusNotificationHandlerRequest accountExpiredMessageTemplate(String accountExpiredMessageTemplate) {
    
    
    
    
    this.accountExpiredMessageTemplate = accountExpiredMessageTemplate;
    return this;
  }

   /**
   * The path to a file containing the template to use to generate the email message to send in the event that an authentication attempt fails because the account has an expiration time that is in the past.
   * @return accountExpiredMessageTemplate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The path to a file containing the template to use to generate the email message to send in the event that an authentication attempt fails because the account has an expiration time that is in the past.")

  public String getAccountExpiredMessageTemplate() {
    return accountExpiredMessageTemplate;
  }


  public void setAccountExpiredMessageTemplate(String accountExpiredMessageTemplate) {
    
    
    
    this.accountExpiredMessageTemplate = accountExpiredMessageTemplate;
  }


  public AddMultiPartEmailAccountStatusNotificationHandlerRequest passwordExpiredMessageTemplate(String passwordExpiredMessageTemplate) {
    
    
    
    
    this.passwordExpiredMessageTemplate = passwordExpiredMessageTemplate;
    return this;
  }

   /**
   * The path to a file containing the template to use to generate the email message to send in the event that an authentication attempt fails because the account has an expired password.
   * @return passwordExpiredMessageTemplate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The path to a file containing the template to use to generate the email message to send in the event that an authentication attempt fails because the account has an expired password.")

  public String getPasswordExpiredMessageTemplate() {
    return passwordExpiredMessageTemplate;
  }


  public void setPasswordExpiredMessageTemplate(String passwordExpiredMessageTemplate) {
    
    
    
    this.passwordExpiredMessageTemplate = passwordExpiredMessageTemplate;
  }


  public AddMultiPartEmailAccountStatusNotificationHandlerRequest passwordExpiringMessageTemplate(String passwordExpiringMessageTemplate) {
    
    
    
    
    this.passwordExpiringMessageTemplate = passwordExpiringMessageTemplate;
    return this;
  }

   /**
   * The path to a file containing the template to use to generate the email message to send in the event that an authentication attempt succeeds, but the user&#39;s password is about to expire. This notification will only be generated the first time the user authenticates within the window of time that the server should warn about an upcoming password expiration.
   * @return passwordExpiringMessageTemplate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The path to a file containing the template to use to generate the email message to send in the event that an authentication attempt succeeds, but the user's password is about to expire. This notification will only be generated the first time the user authenticates within the window of time that the server should warn about an upcoming password expiration.")

  public String getPasswordExpiringMessageTemplate() {
    return passwordExpiringMessageTemplate;
  }


  public void setPasswordExpiringMessageTemplate(String passwordExpiringMessageTemplate) {
    
    
    
    this.passwordExpiringMessageTemplate = passwordExpiringMessageTemplate;
  }


  public AddMultiPartEmailAccountStatusNotificationHandlerRequest passwordResetMessageTemplate(String passwordResetMessageTemplate) {
    
    
    
    
    this.passwordResetMessageTemplate = passwordResetMessageTemplate;
    return this;
  }

   /**
   * The path to a file containing the template to use to generate the email message to send in the event that a user&#39;s password has been reset by an administrator.
   * @return passwordResetMessageTemplate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The path to a file containing the template to use to generate the email message to send in the event that a user's password has been reset by an administrator.")

  public String getPasswordResetMessageTemplate() {
    return passwordResetMessageTemplate;
  }


  public void setPasswordResetMessageTemplate(String passwordResetMessageTemplate) {
    
    
    
    this.passwordResetMessageTemplate = passwordResetMessageTemplate;
  }


  public AddMultiPartEmailAccountStatusNotificationHandlerRequest passwordChangedMessageTemplate(String passwordChangedMessageTemplate) {
    
    
    
    
    this.passwordChangedMessageTemplate = passwordChangedMessageTemplate;
    return this;
  }

   /**
   * The path to a file containing the template to use to generate the email message to send in the event that a user changes their own password.
   * @return passwordChangedMessageTemplate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The path to a file containing the template to use to generate the email message to send in the event that a user changes their own password.")

  public String getPasswordChangedMessageTemplate() {
    return passwordChangedMessageTemplate;
  }


  public void setPasswordChangedMessageTemplate(String passwordChangedMessageTemplate) {
    
    
    
    this.passwordChangedMessageTemplate = passwordChangedMessageTemplate;
  }


  public AddMultiPartEmailAccountStatusNotificationHandlerRequest accountAuthenticatedMessageTemplate(String accountAuthenticatedMessageTemplate) {
    
    
    
    
    this.accountAuthenticatedMessageTemplate = accountAuthenticatedMessageTemplate;
    return this;
  }

   /**
   * The path to a file containing the template to use to generate the email message to send in the event that an account has successfully authenticated in a bind operation that matches the criteria provided in the account-authentication-notification-request-criteria property.
   * @return accountAuthenticatedMessageTemplate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The path to a file containing the template to use to generate the email message to send in the event that an account has successfully authenticated in a bind operation that matches the criteria provided in the account-authentication-notification-request-criteria property.")

  public String getAccountAuthenticatedMessageTemplate() {
    return accountAuthenticatedMessageTemplate;
  }


  public void setAccountAuthenticatedMessageTemplate(String accountAuthenticatedMessageTemplate) {
    
    
    
    this.accountAuthenticatedMessageTemplate = accountAuthenticatedMessageTemplate;
  }


  public AddMultiPartEmailAccountStatusNotificationHandlerRequest accountCreatedMessageTemplate(String accountCreatedMessageTemplate) {
    
    
    
    
    this.accountCreatedMessageTemplate = accountCreatedMessageTemplate;
    return this;
  }

   /**
   * The path to a file containing the template to use to generate the email message to send in the event that a new account is created in an add request that matches the criteria provided in the account-creation-notification-request-criteria property.
   * @return accountCreatedMessageTemplate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The path to a file containing the template to use to generate the email message to send in the event that a new account is created in an add request that matches the criteria provided in the account-creation-notification-request-criteria property.")

  public String getAccountCreatedMessageTemplate() {
    return accountCreatedMessageTemplate;
  }


  public void setAccountCreatedMessageTemplate(String accountCreatedMessageTemplate) {
    
    
    
    this.accountCreatedMessageTemplate = accountCreatedMessageTemplate;
  }


  public AddMultiPartEmailAccountStatusNotificationHandlerRequest accountDeletedMessageTemplate(String accountDeletedMessageTemplate) {
    
    
    
    
    this.accountDeletedMessageTemplate = accountDeletedMessageTemplate;
    return this;
  }

   /**
   * The path to a file containing the template to use to generate the email message to send in the event that an existing accout has been removed in a delete request that matches the criteria provided in the account-deletion-notification-request-criteria property.
   * @return accountDeletedMessageTemplate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The path to a file containing the template to use to generate the email message to send in the event that an existing accout has been removed in a delete request that matches the criteria provided in the account-deletion-notification-request-criteria property.")

  public String getAccountDeletedMessageTemplate() {
    return accountDeletedMessageTemplate;
  }


  public void setAccountDeletedMessageTemplate(String accountDeletedMessageTemplate) {
    
    
    
    this.accountDeletedMessageTemplate = accountDeletedMessageTemplate;
  }


  public AddMultiPartEmailAccountStatusNotificationHandlerRequest accountUpdatedMessageTemplate(String accountUpdatedMessageTemplate) {
    
    
    
    
    this.accountUpdatedMessageTemplate = accountUpdatedMessageTemplate;
    return this;
  }

   /**
   * The path to a file containing the template to use to generate the email message to send in the event that an existing account is updated with a modify or modify DN operation that matches the criteria provided in the account-update-notification-request-criteria property.
   * @return accountUpdatedMessageTemplate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The path to a file containing the template to use to generate the email message to send in the event that an existing account is updated with a modify or modify DN operation that matches the criteria provided in the account-update-notification-request-criteria property.")

  public String getAccountUpdatedMessageTemplate() {
    return accountUpdatedMessageTemplate;
  }


  public void setAccountUpdatedMessageTemplate(String accountUpdatedMessageTemplate) {
    
    
    
    this.accountUpdatedMessageTemplate = accountUpdatedMessageTemplate;
  }


  public AddMultiPartEmailAccountStatusNotificationHandlerRequest bindPasswordFailedValidationMessageTemplate(String bindPasswordFailedValidationMessageTemplate) {
    
    
    
    
    this.bindPasswordFailedValidationMessageTemplate = bindPasswordFailedValidationMessageTemplate;
    return this;
  }

   /**
   * The path to a file containing the template to use to generate the email message to send in the event that a user authenticated with a password that failed to satisfy the criteria for one or more of the configured password validators.
   * @return bindPasswordFailedValidationMessageTemplate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The path to a file containing the template to use to generate the email message to send in the event that a user authenticated with a password that failed to satisfy the criteria for one or more of the configured password validators.")

  public String getBindPasswordFailedValidationMessageTemplate() {
    return bindPasswordFailedValidationMessageTemplate;
  }


  public void setBindPasswordFailedValidationMessageTemplate(String bindPasswordFailedValidationMessageTemplate) {
    
    
    
    this.bindPasswordFailedValidationMessageTemplate = bindPasswordFailedValidationMessageTemplate;
  }


  public AddMultiPartEmailAccountStatusNotificationHandlerRequest mustChangePasswordMessageTemplate(String mustChangePasswordMessageTemplate) {
    
    
    
    
    this.mustChangePasswordMessageTemplate = mustChangePasswordMessageTemplate;
    return this;
  }

   /**
   * The path to a file containing the template to use to generate the email message to send in the event that a user successfully authenticates to the server but will be required to choose a new password before they will be allowed to perform any other operations.
   * @return mustChangePasswordMessageTemplate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The path to a file containing the template to use to generate the email message to send in the event that a user successfully authenticates to the server but will be required to choose a new password before they will be allowed to perform any other operations.")

  public String getMustChangePasswordMessageTemplate() {
    return mustChangePasswordMessageTemplate;
  }


  public void setMustChangePasswordMessageTemplate(String mustChangePasswordMessageTemplate) {
    
    
    
    this.mustChangePasswordMessageTemplate = mustChangePasswordMessageTemplate;
  }


  public AddMultiPartEmailAccountStatusNotificationHandlerRequest enabled(Boolean enabled) {
    
    
    
    
    this.enabled = enabled;
    return this;
  }

   /**
   * Indicates whether the Account Status Notification Handler is enabled. Only enabled handlers are invoked whenever a related event occurs in the server.
   * @return enabled
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Indicates whether the Account Status Notification Handler is enabled. Only enabled handlers are invoked whenever a related event occurs in the server.")

  public Boolean getEnabled() {
    return enabled;
  }


  public void setEnabled(Boolean enabled) {
    
    
    
    this.enabled = enabled;
  }


  public AddMultiPartEmailAccountStatusNotificationHandlerRequest asynchronous(Boolean asynchronous) {
    
    
    
    
    this.asynchronous = asynchronous;
    return this;
  }

   /**
   * Indicates whether the server should attempt to invoke this Account Status Notification Handler in a background thread so that any potentially-expensive processing (e.g., performing network communication to deliver a message) will not delay processing for the operation that triggered the notification.
   * @return asynchronous
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether the server should attempt to invoke this Account Status Notification Handler in a background thread so that any potentially-expensive processing (e.g., performing network communication to deliver a message) will not delay processing for the operation that triggered the notification.")

  public Boolean getAsynchronous() {
    return asynchronous;
  }


  public void setAsynchronous(Boolean asynchronous) {
    
    
    
    this.asynchronous = asynchronous;
  }


  public AddMultiPartEmailAccountStatusNotificationHandlerRequest accountAuthenticationNotificationResultCriteria(String accountAuthenticationNotificationResultCriteria) {
    
    
    
    
    this.accountAuthenticationNotificationResultCriteria = accountAuthenticationNotificationResultCriteria;
    return this;
  }

   /**
   * A result criteria object that identifies which successful bind operations should result in account authentication notifications for this handler.
   * @return accountAuthenticationNotificationResultCriteria
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A result criteria object that identifies which successful bind operations should result in account authentication notifications for this handler.")

  public String getAccountAuthenticationNotificationResultCriteria() {
    return accountAuthenticationNotificationResultCriteria;
  }


  public void setAccountAuthenticationNotificationResultCriteria(String accountAuthenticationNotificationResultCriteria) {
    
    
    
    this.accountAuthenticationNotificationResultCriteria = accountAuthenticationNotificationResultCriteria;
  }


  public AddMultiPartEmailAccountStatusNotificationHandlerRequest accountCreationNotificationRequestCriteria(String accountCreationNotificationRequestCriteria) {
    
    
    
    
    this.accountCreationNotificationRequestCriteria = accountCreationNotificationRequestCriteria;
    return this;
  }

   /**
   * A request criteria object that identifies which add requests should result in account creation notifications for this handler.
   * @return accountCreationNotificationRequestCriteria
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A request criteria object that identifies which add requests should result in account creation notifications for this handler.")

  public String getAccountCreationNotificationRequestCriteria() {
    return accountCreationNotificationRequestCriteria;
  }


  public void setAccountCreationNotificationRequestCriteria(String accountCreationNotificationRequestCriteria) {
    
    
    
    this.accountCreationNotificationRequestCriteria = accountCreationNotificationRequestCriteria;
  }


  public AddMultiPartEmailAccountStatusNotificationHandlerRequest accountDeletionNotificationRequestCriteria(String accountDeletionNotificationRequestCriteria) {
    
    
    
    
    this.accountDeletionNotificationRequestCriteria = accountDeletionNotificationRequestCriteria;
    return this;
  }

   /**
   * A request criteria object that identifies which delete requests should result in account deletion notifications for this handler.
   * @return accountDeletionNotificationRequestCriteria
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A request criteria object that identifies which delete requests should result in account deletion notifications for this handler.")

  public String getAccountDeletionNotificationRequestCriteria() {
    return accountDeletionNotificationRequestCriteria;
  }


  public void setAccountDeletionNotificationRequestCriteria(String accountDeletionNotificationRequestCriteria) {
    
    
    
    this.accountDeletionNotificationRequestCriteria = accountDeletionNotificationRequestCriteria;
  }


  public AddMultiPartEmailAccountStatusNotificationHandlerRequest accountUpdateNotificationRequestCriteria(String accountUpdateNotificationRequestCriteria) {
    
    
    
    
    this.accountUpdateNotificationRequestCriteria = accountUpdateNotificationRequestCriteria;
    return this;
  }

   /**
   * A request criteria object that identifies which modify and modify DN requests should result in account update notifications for this handler.
   * @return accountUpdateNotificationRequestCriteria
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A request criteria object that identifies which modify and modify DN requests should result in account update notifications for this handler.")

  public String getAccountUpdateNotificationRequestCriteria() {
    return accountUpdateNotificationRequestCriteria;
  }


  public void setAccountUpdateNotificationRequestCriteria(String accountUpdateNotificationRequestCriteria) {
    
    
    
    this.accountUpdateNotificationRequestCriteria = accountUpdateNotificationRequestCriteria;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the AddMultiPartEmailAccountStatusNotificationHandlerRequest instance itself
   */
  public AddMultiPartEmailAccountStatusNotificationHandlerRequest putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AddMultiPartEmailAccountStatusNotificationHandlerRequest addMultiPartEmailAccountStatusNotificationHandlerRequest = (AddMultiPartEmailAccountStatusNotificationHandlerRequest) o;
    return Objects.equals(this.handlerName, addMultiPartEmailAccountStatusNotificationHandlerRequest.handlerName) &&
        Objects.equals(this.description, addMultiPartEmailAccountStatusNotificationHandlerRequest.description) &&
        Objects.equals(this.schemas, addMultiPartEmailAccountStatusNotificationHandlerRequest.schemas) &&
        Objects.equals(this.accountTemporarilyFailureLockedMessageTemplate, addMultiPartEmailAccountStatusNotificationHandlerRequest.accountTemporarilyFailureLockedMessageTemplate) &&
        Objects.equals(this.accountPermanentlyFailureLockedMessageTemplate, addMultiPartEmailAccountStatusNotificationHandlerRequest.accountPermanentlyFailureLockedMessageTemplate) &&
        Objects.equals(this.accountIdleLockedMessageTemplate, addMultiPartEmailAccountStatusNotificationHandlerRequest.accountIdleLockedMessageTemplate) &&
        Objects.equals(this.accountResetLockedMessageTemplate, addMultiPartEmailAccountStatusNotificationHandlerRequest.accountResetLockedMessageTemplate) &&
        Objects.equals(this.accountUnlockedMessageTemplate, addMultiPartEmailAccountStatusNotificationHandlerRequest.accountUnlockedMessageTemplate) &&
        Objects.equals(this.accountDisabledMessageTemplate, addMultiPartEmailAccountStatusNotificationHandlerRequest.accountDisabledMessageTemplate) &&
        Objects.equals(this.accountEnabledMessageTemplate, addMultiPartEmailAccountStatusNotificationHandlerRequest.accountEnabledMessageTemplate) &&
        Objects.equals(this.accountNotYetActiveMessageTemplate, addMultiPartEmailAccountStatusNotificationHandlerRequest.accountNotYetActiveMessageTemplate) &&
        Objects.equals(this.accountExpiredMessageTemplate, addMultiPartEmailAccountStatusNotificationHandlerRequest.accountExpiredMessageTemplate) &&
        Objects.equals(this.passwordExpiredMessageTemplate, addMultiPartEmailAccountStatusNotificationHandlerRequest.passwordExpiredMessageTemplate) &&
        Objects.equals(this.passwordExpiringMessageTemplate, addMultiPartEmailAccountStatusNotificationHandlerRequest.passwordExpiringMessageTemplate) &&
        Objects.equals(this.passwordResetMessageTemplate, addMultiPartEmailAccountStatusNotificationHandlerRequest.passwordResetMessageTemplate) &&
        Objects.equals(this.passwordChangedMessageTemplate, addMultiPartEmailAccountStatusNotificationHandlerRequest.passwordChangedMessageTemplate) &&
        Objects.equals(this.accountAuthenticatedMessageTemplate, addMultiPartEmailAccountStatusNotificationHandlerRequest.accountAuthenticatedMessageTemplate) &&
        Objects.equals(this.accountCreatedMessageTemplate, addMultiPartEmailAccountStatusNotificationHandlerRequest.accountCreatedMessageTemplate) &&
        Objects.equals(this.accountDeletedMessageTemplate, addMultiPartEmailAccountStatusNotificationHandlerRequest.accountDeletedMessageTemplate) &&
        Objects.equals(this.accountUpdatedMessageTemplate, addMultiPartEmailAccountStatusNotificationHandlerRequest.accountUpdatedMessageTemplate) &&
        Objects.equals(this.bindPasswordFailedValidationMessageTemplate, addMultiPartEmailAccountStatusNotificationHandlerRequest.bindPasswordFailedValidationMessageTemplate) &&
        Objects.equals(this.mustChangePasswordMessageTemplate, addMultiPartEmailAccountStatusNotificationHandlerRequest.mustChangePasswordMessageTemplate) &&
        Objects.equals(this.enabled, addMultiPartEmailAccountStatusNotificationHandlerRequest.enabled) &&
        Objects.equals(this.asynchronous, addMultiPartEmailAccountStatusNotificationHandlerRequest.asynchronous) &&
        Objects.equals(this.accountAuthenticationNotificationResultCriteria, addMultiPartEmailAccountStatusNotificationHandlerRequest.accountAuthenticationNotificationResultCriteria) &&
        Objects.equals(this.accountCreationNotificationRequestCriteria, addMultiPartEmailAccountStatusNotificationHandlerRequest.accountCreationNotificationRequestCriteria) &&
        Objects.equals(this.accountDeletionNotificationRequestCriteria, addMultiPartEmailAccountStatusNotificationHandlerRequest.accountDeletionNotificationRequestCriteria) &&
        Objects.equals(this.accountUpdateNotificationRequestCriteria, addMultiPartEmailAccountStatusNotificationHandlerRequest.accountUpdateNotificationRequestCriteria)&&
        Objects.equals(this.additionalProperties, addMultiPartEmailAccountStatusNotificationHandlerRequest.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(handlerName, description, schemas, accountTemporarilyFailureLockedMessageTemplate, accountPermanentlyFailureLockedMessageTemplate, accountIdleLockedMessageTemplate, accountResetLockedMessageTemplate, accountUnlockedMessageTemplate, accountDisabledMessageTemplate, accountEnabledMessageTemplate, accountNotYetActiveMessageTemplate, accountExpiredMessageTemplate, passwordExpiredMessageTemplate, passwordExpiringMessageTemplate, passwordResetMessageTemplate, passwordChangedMessageTemplate, accountAuthenticatedMessageTemplate, accountCreatedMessageTemplate, accountDeletedMessageTemplate, accountUpdatedMessageTemplate, bindPasswordFailedValidationMessageTemplate, mustChangePasswordMessageTemplate, enabled, asynchronous, accountAuthenticationNotificationResultCriteria, accountCreationNotificationRequestCriteria, accountDeletionNotificationRequestCriteria, accountUpdateNotificationRequestCriteria, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AddMultiPartEmailAccountStatusNotificationHandlerRequest {\n");
    sb.append("    handlerName: ").append(toIndentedString(handlerName)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    schemas: ").append(toIndentedString(schemas)).append("\n");
    sb.append("    accountTemporarilyFailureLockedMessageTemplate: ").append(toIndentedString(accountTemporarilyFailureLockedMessageTemplate)).append("\n");
    sb.append("    accountPermanentlyFailureLockedMessageTemplate: ").append(toIndentedString(accountPermanentlyFailureLockedMessageTemplate)).append("\n");
    sb.append("    accountIdleLockedMessageTemplate: ").append(toIndentedString(accountIdleLockedMessageTemplate)).append("\n");
    sb.append("    accountResetLockedMessageTemplate: ").append(toIndentedString(accountResetLockedMessageTemplate)).append("\n");
    sb.append("    accountUnlockedMessageTemplate: ").append(toIndentedString(accountUnlockedMessageTemplate)).append("\n");
    sb.append("    accountDisabledMessageTemplate: ").append(toIndentedString(accountDisabledMessageTemplate)).append("\n");
    sb.append("    accountEnabledMessageTemplate: ").append(toIndentedString(accountEnabledMessageTemplate)).append("\n");
    sb.append("    accountNotYetActiveMessageTemplate: ").append(toIndentedString(accountNotYetActiveMessageTemplate)).append("\n");
    sb.append("    accountExpiredMessageTemplate: ").append(toIndentedString(accountExpiredMessageTemplate)).append("\n");
    sb.append("    passwordExpiredMessageTemplate: ").append(toIndentedString(passwordExpiredMessageTemplate)).append("\n");
    sb.append("    passwordExpiringMessageTemplate: ").append(toIndentedString(passwordExpiringMessageTemplate)).append("\n");
    sb.append("    passwordResetMessageTemplate: ").append(toIndentedString(passwordResetMessageTemplate)).append("\n");
    sb.append("    passwordChangedMessageTemplate: ").append(toIndentedString(passwordChangedMessageTemplate)).append("\n");
    sb.append("    accountAuthenticatedMessageTemplate: ").append(toIndentedString(accountAuthenticatedMessageTemplate)).append("\n");
    sb.append("    accountCreatedMessageTemplate: ").append(toIndentedString(accountCreatedMessageTemplate)).append("\n");
    sb.append("    accountDeletedMessageTemplate: ").append(toIndentedString(accountDeletedMessageTemplate)).append("\n");
    sb.append("    accountUpdatedMessageTemplate: ").append(toIndentedString(accountUpdatedMessageTemplate)).append("\n");
    sb.append("    bindPasswordFailedValidationMessageTemplate: ").append(toIndentedString(bindPasswordFailedValidationMessageTemplate)).append("\n");
    sb.append("    mustChangePasswordMessageTemplate: ").append(toIndentedString(mustChangePasswordMessageTemplate)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    asynchronous: ").append(toIndentedString(asynchronous)).append("\n");
    sb.append("    accountAuthenticationNotificationResultCriteria: ").append(toIndentedString(accountAuthenticationNotificationResultCriteria)).append("\n");
    sb.append("    accountCreationNotificationRequestCriteria: ").append(toIndentedString(accountCreationNotificationRequestCriteria)).append("\n");
    sb.append("    accountDeletionNotificationRequestCriteria: ").append(toIndentedString(accountDeletionNotificationRequestCriteria)).append("\n");
    sb.append("    accountUpdateNotificationRequestCriteria: ").append(toIndentedString(accountUpdateNotificationRequestCriteria)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("handlerName");
    openapiFields.add("description");
    openapiFields.add("schemas");
    openapiFields.add("accountTemporarilyFailureLockedMessageTemplate");
    openapiFields.add("accountPermanentlyFailureLockedMessageTemplate");
    openapiFields.add("accountIdleLockedMessageTemplate");
    openapiFields.add("accountResetLockedMessageTemplate");
    openapiFields.add("accountUnlockedMessageTemplate");
    openapiFields.add("accountDisabledMessageTemplate");
    openapiFields.add("accountEnabledMessageTemplate");
    openapiFields.add("accountNotYetActiveMessageTemplate");
    openapiFields.add("accountExpiredMessageTemplate");
    openapiFields.add("passwordExpiredMessageTemplate");
    openapiFields.add("passwordExpiringMessageTemplate");
    openapiFields.add("passwordResetMessageTemplate");
    openapiFields.add("passwordChangedMessageTemplate");
    openapiFields.add("accountAuthenticatedMessageTemplate");
    openapiFields.add("accountCreatedMessageTemplate");
    openapiFields.add("accountDeletedMessageTemplate");
    openapiFields.add("accountUpdatedMessageTemplate");
    openapiFields.add("bindPasswordFailedValidationMessageTemplate");
    openapiFields.add("mustChangePasswordMessageTemplate");
    openapiFields.add("enabled");
    openapiFields.add("asynchronous");
    openapiFields.add("accountAuthenticationNotificationResultCriteria");
    openapiFields.add("accountCreationNotificationRequestCriteria");
    openapiFields.add("accountDeletionNotificationRequestCriteria");
    openapiFields.add("accountUpdateNotificationRequestCriteria");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("handlerName");
    openapiRequiredFields.add("schemas");
    openapiRequiredFields.add("enabled");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to AddMultiPartEmailAccountStatusNotificationHandlerRequest
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!AddMultiPartEmailAccountStatusNotificationHandlerRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AddMultiPartEmailAccountStatusNotificationHandlerRequest is not found in the empty JSON string", AddMultiPartEmailAccountStatusNotificationHandlerRequest.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : AddMultiPartEmailAccountStatusNotificationHandlerRequest.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("handlerName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `handlerName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("handlerName").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("schemas") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("schemas").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `schemas` to be an array in the JSON string but got `%s`", jsonObj.get("schemas").toString()));
      }
      if ((jsonObj.get("accountTemporarilyFailureLockedMessageTemplate") != null && !jsonObj.get("accountTemporarilyFailureLockedMessageTemplate").isJsonNull()) && !jsonObj.get("accountTemporarilyFailureLockedMessageTemplate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accountTemporarilyFailureLockedMessageTemplate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accountTemporarilyFailureLockedMessageTemplate").toString()));
      }
      if ((jsonObj.get("accountPermanentlyFailureLockedMessageTemplate") != null && !jsonObj.get("accountPermanentlyFailureLockedMessageTemplate").isJsonNull()) && !jsonObj.get("accountPermanentlyFailureLockedMessageTemplate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accountPermanentlyFailureLockedMessageTemplate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accountPermanentlyFailureLockedMessageTemplate").toString()));
      }
      if ((jsonObj.get("accountIdleLockedMessageTemplate") != null && !jsonObj.get("accountIdleLockedMessageTemplate").isJsonNull()) && !jsonObj.get("accountIdleLockedMessageTemplate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accountIdleLockedMessageTemplate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accountIdleLockedMessageTemplate").toString()));
      }
      if ((jsonObj.get("accountResetLockedMessageTemplate") != null && !jsonObj.get("accountResetLockedMessageTemplate").isJsonNull()) && !jsonObj.get("accountResetLockedMessageTemplate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accountResetLockedMessageTemplate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accountResetLockedMessageTemplate").toString()));
      }
      if ((jsonObj.get("accountUnlockedMessageTemplate") != null && !jsonObj.get("accountUnlockedMessageTemplate").isJsonNull()) && !jsonObj.get("accountUnlockedMessageTemplate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accountUnlockedMessageTemplate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accountUnlockedMessageTemplate").toString()));
      }
      if ((jsonObj.get("accountDisabledMessageTemplate") != null && !jsonObj.get("accountDisabledMessageTemplate").isJsonNull()) && !jsonObj.get("accountDisabledMessageTemplate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accountDisabledMessageTemplate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accountDisabledMessageTemplate").toString()));
      }
      if ((jsonObj.get("accountEnabledMessageTemplate") != null && !jsonObj.get("accountEnabledMessageTemplate").isJsonNull()) && !jsonObj.get("accountEnabledMessageTemplate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accountEnabledMessageTemplate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accountEnabledMessageTemplate").toString()));
      }
      if ((jsonObj.get("accountNotYetActiveMessageTemplate") != null && !jsonObj.get("accountNotYetActiveMessageTemplate").isJsonNull()) && !jsonObj.get("accountNotYetActiveMessageTemplate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accountNotYetActiveMessageTemplate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accountNotYetActiveMessageTemplate").toString()));
      }
      if ((jsonObj.get("accountExpiredMessageTemplate") != null && !jsonObj.get("accountExpiredMessageTemplate").isJsonNull()) && !jsonObj.get("accountExpiredMessageTemplate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accountExpiredMessageTemplate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accountExpiredMessageTemplate").toString()));
      }
      if ((jsonObj.get("passwordExpiredMessageTemplate") != null && !jsonObj.get("passwordExpiredMessageTemplate").isJsonNull()) && !jsonObj.get("passwordExpiredMessageTemplate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `passwordExpiredMessageTemplate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("passwordExpiredMessageTemplate").toString()));
      }
      if ((jsonObj.get("passwordExpiringMessageTemplate") != null && !jsonObj.get("passwordExpiringMessageTemplate").isJsonNull()) && !jsonObj.get("passwordExpiringMessageTemplate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `passwordExpiringMessageTemplate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("passwordExpiringMessageTemplate").toString()));
      }
      if ((jsonObj.get("passwordResetMessageTemplate") != null && !jsonObj.get("passwordResetMessageTemplate").isJsonNull()) && !jsonObj.get("passwordResetMessageTemplate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `passwordResetMessageTemplate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("passwordResetMessageTemplate").toString()));
      }
      if ((jsonObj.get("passwordChangedMessageTemplate") != null && !jsonObj.get("passwordChangedMessageTemplate").isJsonNull()) && !jsonObj.get("passwordChangedMessageTemplate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `passwordChangedMessageTemplate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("passwordChangedMessageTemplate").toString()));
      }
      if ((jsonObj.get("accountAuthenticatedMessageTemplate") != null && !jsonObj.get("accountAuthenticatedMessageTemplate").isJsonNull()) && !jsonObj.get("accountAuthenticatedMessageTemplate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accountAuthenticatedMessageTemplate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accountAuthenticatedMessageTemplate").toString()));
      }
      if ((jsonObj.get("accountCreatedMessageTemplate") != null && !jsonObj.get("accountCreatedMessageTemplate").isJsonNull()) && !jsonObj.get("accountCreatedMessageTemplate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accountCreatedMessageTemplate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accountCreatedMessageTemplate").toString()));
      }
      if ((jsonObj.get("accountDeletedMessageTemplate") != null && !jsonObj.get("accountDeletedMessageTemplate").isJsonNull()) && !jsonObj.get("accountDeletedMessageTemplate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accountDeletedMessageTemplate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accountDeletedMessageTemplate").toString()));
      }
      if ((jsonObj.get("accountUpdatedMessageTemplate") != null && !jsonObj.get("accountUpdatedMessageTemplate").isJsonNull()) && !jsonObj.get("accountUpdatedMessageTemplate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accountUpdatedMessageTemplate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accountUpdatedMessageTemplate").toString()));
      }
      if ((jsonObj.get("bindPasswordFailedValidationMessageTemplate") != null && !jsonObj.get("bindPasswordFailedValidationMessageTemplate").isJsonNull()) && !jsonObj.get("bindPasswordFailedValidationMessageTemplate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bindPasswordFailedValidationMessageTemplate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bindPasswordFailedValidationMessageTemplate").toString()));
      }
      if ((jsonObj.get("mustChangePasswordMessageTemplate") != null && !jsonObj.get("mustChangePasswordMessageTemplate").isJsonNull()) && !jsonObj.get("mustChangePasswordMessageTemplate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mustChangePasswordMessageTemplate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mustChangePasswordMessageTemplate").toString()));
      }
      if ((jsonObj.get("accountAuthenticationNotificationResultCriteria") != null && !jsonObj.get("accountAuthenticationNotificationResultCriteria").isJsonNull()) && !jsonObj.get("accountAuthenticationNotificationResultCriteria").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accountAuthenticationNotificationResultCriteria` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accountAuthenticationNotificationResultCriteria").toString()));
      }
      if ((jsonObj.get("accountCreationNotificationRequestCriteria") != null && !jsonObj.get("accountCreationNotificationRequestCriteria").isJsonNull()) && !jsonObj.get("accountCreationNotificationRequestCriteria").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accountCreationNotificationRequestCriteria` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accountCreationNotificationRequestCriteria").toString()));
      }
      if ((jsonObj.get("accountDeletionNotificationRequestCriteria") != null && !jsonObj.get("accountDeletionNotificationRequestCriteria").isJsonNull()) && !jsonObj.get("accountDeletionNotificationRequestCriteria").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accountDeletionNotificationRequestCriteria` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accountDeletionNotificationRequestCriteria").toString()));
      }
      if ((jsonObj.get("accountUpdateNotificationRequestCriteria") != null && !jsonObj.get("accountUpdateNotificationRequestCriteria").isJsonNull()) && !jsonObj.get("accountUpdateNotificationRequestCriteria").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accountUpdateNotificationRequestCriteria` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accountUpdateNotificationRequestCriteria").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AddMultiPartEmailAccountStatusNotificationHandlerRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AddMultiPartEmailAccountStatusNotificationHandlerRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AddMultiPartEmailAccountStatusNotificationHandlerRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AddMultiPartEmailAccountStatusNotificationHandlerRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<AddMultiPartEmailAccountStatusNotificationHandlerRequest>() {
           @Override
           public void write(JsonWriter out, AddMultiPartEmailAccountStatusNotificationHandlerRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public AddMultiPartEmailAccountStatusNotificationHandlerRequest read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             AddMultiPartEmailAccountStatusNotificationHandlerRequest instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AddMultiPartEmailAccountStatusNotificationHandlerRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AddMultiPartEmailAccountStatusNotificationHandlerRequest
  * @throws IOException if the JSON string is invalid with respect to AddMultiPartEmailAccountStatusNotificationHandlerRequest
  */
  public static AddMultiPartEmailAccountStatusNotificationHandlerRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AddMultiPartEmailAccountStatusNotificationHandlerRequest.class);
  }

 /**
  * Convert an instance of AddMultiPartEmailAccountStatusNotificationHandlerRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

