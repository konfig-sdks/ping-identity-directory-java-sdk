/*
 * PingData Config - OpenAPI 3.0
 * This is the PingData Configuration API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Specifies how the server should handle error log messages (which may include errors, warnings, and notices) generated during startup. All of these messages will be written to all configured error loggers, but they may also be written to other locations (like standard output, standard error, or the server.out log file) so that they are displayed on the console when the server is starting.
 */
@JsonAdapter(EnumglobalConfigurationStartupErrorLoggerOutputLocationProp.Adapter.class)public enum EnumglobalConfigurationStartupErrorLoggerOutputLocationProp {
  
  STANDARD_OUTPUT("standard-output"),
  
  STANDARD_ERROR("standard-error"),
  
  SERVER_OUT_FILE("server-out-file"),
  
  STANDARD_OUTPUT_AND_SERVER_OUT_FILE("standard-output-and-server-out-file"),
  
  STANDARD_ERROR_AND_SERVER_OUT_FILE("standard-error-and-server-out-file"),
  
  DISABLED("disabled");

  private String value;

  EnumglobalConfigurationStartupErrorLoggerOutputLocationProp(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static EnumglobalConfigurationStartupErrorLoggerOutputLocationProp fromValue(String value) {
    for (EnumglobalConfigurationStartupErrorLoggerOutputLocationProp b : EnumglobalConfigurationStartupErrorLoggerOutputLocationProp.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<EnumglobalConfigurationStartupErrorLoggerOutputLocationProp> {
    @Override
    public void write(final JsonWriter jsonWriter, final EnumglobalConfigurationStartupErrorLoggerOutputLocationProp enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public EnumglobalConfigurationStartupErrorLoggerOutputLocationProp read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return EnumglobalConfigurationStartupErrorLoggerOutputLocationProp.fromValue(value);
    }
  }
}

