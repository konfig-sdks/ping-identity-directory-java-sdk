/*
 * PingData Config - OpenAPI 3.0
 * This is the PingData Configuration API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.EnumgroupRestResourceTypeSchemaUrn;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * GroupRestResourceTypeShared
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class GroupRestResourceTypeShared {
  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_SCHEMAS = "schemas";
  @SerializedName(SERIALIZED_NAME_SCHEMAS)
  private List<EnumgroupRestResourceTypeSchemaUrn> schemas = new ArrayList<>();

  public static final String SERIALIZED_NAME_MEMBERS_COLUMN_NAME = "membersColumnName";
  @SerializedName(SERIALIZED_NAME_MEMBERS_COLUMN_NAME)
  private String membersColumnName;

  public static final String SERIALIZED_NAME_NONMEMBERS_COLUMN_NAME = "nonmembersColumnName";
  @SerializedName(SERIALIZED_NAME_NONMEMBERS_COLUMN_NAME)
  private String nonmembersColumnName;

  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled;

  public static final String SERIALIZED_NAME_RESOURCE_ENDPOINT = "resourceEndpoint";
  @SerializedName(SERIALIZED_NAME_RESOURCE_ENDPOINT)
  private String resourceEndpoint;

  public static final String SERIALIZED_NAME_STRUCTURAL_L_D_A_P_OBJECTCLASS = "structuralLDAPObjectclass";
  @SerializedName(SERIALIZED_NAME_STRUCTURAL_L_D_A_P_OBJECTCLASS)
  private String structuralLDAPObjectclass;

  public static final String SERIALIZED_NAME_AUXILIARY_L_D_A_P_OBJECTCLASS = "auxiliaryLDAPObjectclass";
  @SerializedName(SERIALIZED_NAME_AUXILIARY_L_D_A_P_OBJECTCLASS)
  private List<String> auxiliaryLDAPObjectclass = null;

  public static final String SERIALIZED_NAME_SEARCH_BASE_D_N = "searchBaseDN";
  @SerializedName(SERIALIZED_NAME_SEARCH_BASE_D_N)
  private String searchBaseDN;

  public static final String SERIALIZED_NAME_INCLUDE_FILTER = "includeFilter";
  @SerializedName(SERIALIZED_NAME_INCLUDE_FILTER)
  private List<String> includeFilter = null;

  public static final String SERIALIZED_NAME_PARENT_D_N = "parentDN";
  @SerializedName(SERIALIZED_NAME_PARENT_D_N)
  private String parentDN;

  public static final String SERIALIZED_NAME_PARENT_RESOURCE_TYPE = "parentResourceType";
  @SerializedName(SERIALIZED_NAME_PARENT_RESOURCE_TYPE)
  private String parentResourceType;

  public static final String SERIALIZED_NAME_RELATIVE_D_N_FROM_PARENT_RESOURCE = "relativeDNFromParentResource";
  @SerializedName(SERIALIZED_NAME_RELATIVE_D_N_FROM_PARENT_RESOURCE)
  private String relativeDNFromParentResource;

  public static final String SERIALIZED_NAME_CREATE_R_D_N_ATTRIBUTE_TYPE = "createRDNAttributeType";
  @SerializedName(SERIALIZED_NAME_CREATE_R_D_N_ATTRIBUTE_TYPE)
  private String createRDNAttributeType;

  public static final String SERIALIZED_NAME_POST_CREATE_CONSTRUCTED_ATTRIBUTE = "postCreateConstructedAttribute";
  @SerializedName(SERIALIZED_NAME_POST_CREATE_CONSTRUCTED_ATTRIBUTE)
  private List<String> postCreateConstructedAttribute = null;

  public static final String SERIALIZED_NAME_UPDATE_CONSTRUCTED_ATTRIBUTE = "updateConstructedAttribute";
  @SerializedName(SERIALIZED_NAME_UPDATE_CONSTRUCTED_ATTRIBUTE)
  private List<String> updateConstructedAttribute = null;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_SEARCH_FILTER_PATTERN = "searchFilterPattern";
  @SerializedName(SERIALIZED_NAME_SEARCH_FILTER_PATTERN)
  private String searchFilterPattern;

  public static final String SERIALIZED_NAME_PRIMARY_DISPLAY_ATTRIBUTE_TYPE = "primaryDisplayAttributeType";
  @SerializedName(SERIALIZED_NAME_PRIMARY_DISPLAY_ATTRIBUTE_TYPE)
  private String primaryDisplayAttributeType;

  public static final String SERIALIZED_NAME_DELEGATED_ADMIN_SEARCH_SIZE_LIMIT = "delegatedAdminSearchSizeLimit";
  @SerializedName(SERIALIZED_NAME_DELEGATED_ADMIN_SEARCH_SIZE_LIMIT)
  private Integer delegatedAdminSearchSizeLimit;

  public static final String SERIALIZED_NAME_DELEGATED_ADMIN_REPORT_SIZE_LIMIT = "delegatedAdminReportSizeLimit";
  @SerializedName(SERIALIZED_NAME_DELEGATED_ADMIN_REPORT_SIZE_LIMIT)
  private Integer delegatedAdminReportSizeLimit;

  public GroupRestResourceTypeShared() {
  }

  public GroupRestResourceTypeShared description(String description) {
    
    
    
    
    this.description = description;
    return this;
  }

   /**
   * A description for this REST Resource Type
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A description for this REST Resource Type")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    
    
    
    this.description = description;
  }


  public GroupRestResourceTypeShared schemas(List<EnumgroupRestResourceTypeSchemaUrn> schemas) {
    
    
    
    
    this.schemas = schemas;
    return this;
  }

  public GroupRestResourceTypeShared addSchemasItem(EnumgroupRestResourceTypeSchemaUrn schemasItem) {
    this.schemas.add(schemasItem);
    return this;
  }

   /**
   * Get schemas
   * @return schemas
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<EnumgroupRestResourceTypeSchemaUrn> getSchemas() {
    return schemas;
  }


  public void setSchemas(List<EnumgroupRestResourceTypeSchemaUrn> schemas) {
    
    
    
    this.schemas = schemas;
  }


  public GroupRestResourceTypeShared membersColumnName(String membersColumnName) {
    
    
    
    
    this.membersColumnName = membersColumnName;
    return this;
  }

   /**
   * Specifies the name of the group member column that will be displayed in the Delegated Admin UI
   * @return membersColumnName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the name of the group member column that will be displayed in the Delegated Admin UI")

  public String getMembersColumnName() {
    return membersColumnName;
  }


  public void setMembersColumnName(String membersColumnName) {
    
    
    
    this.membersColumnName = membersColumnName;
  }


  public GroupRestResourceTypeShared nonmembersColumnName(String nonmembersColumnName) {
    
    
    
    
    this.nonmembersColumnName = nonmembersColumnName;
    return this;
  }

   /**
   * Specifies the name of the group nonmember column that will be displayed in the Delegated Admin UI
   * @return nonmembersColumnName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the name of the group nonmember column that will be displayed in the Delegated Admin UI")

  public String getNonmembersColumnName() {
    return nonmembersColumnName;
  }


  public void setNonmembersColumnName(String nonmembersColumnName) {
    
    
    
    this.nonmembersColumnName = nonmembersColumnName;
  }


  public GroupRestResourceTypeShared enabled(Boolean enabled) {
    
    
    
    
    this.enabled = enabled;
    return this;
  }

   /**
   * Indicates whether the REST Resource Type is enabled.
   * @return enabled
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Indicates whether the REST Resource Type is enabled.")

  public Boolean getEnabled() {
    return enabled;
  }


  public void setEnabled(Boolean enabled) {
    
    
    
    this.enabled = enabled;
  }


  public GroupRestResourceTypeShared resourceEndpoint(String resourceEndpoint) {
    
    
    
    
    this.resourceEndpoint = resourceEndpoint;
    return this;
  }

   /**
   * The HTTP addressable endpoint of this REST Resource Type relative to a REST API base URL. Do not include a leading &#39;/&#39;.
   * @return resourceEndpoint
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The HTTP addressable endpoint of this REST Resource Type relative to a REST API base URL. Do not include a leading '/'.")

  public String getResourceEndpoint() {
    return resourceEndpoint;
  }


  public void setResourceEndpoint(String resourceEndpoint) {
    
    
    
    this.resourceEndpoint = resourceEndpoint;
  }


  public GroupRestResourceTypeShared structuralLDAPObjectclass(String structuralLDAPObjectclass) {
    
    
    
    
    this.structuralLDAPObjectclass = structuralLDAPObjectclass;
    return this;
  }

   /**
   * Specifies the LDAP structural object class that should be exposed by this REST Resource Type.
   * @return structuralLDAPObjectclass
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Specifies the LDAP structural object class that should be exposed by this REST Resource Type.")

  public String getStructuralLDAPObjectclass() {
    return structuralLDAPObjectclass;
  }


  public void setStructuralLDAPObjectclass(String structuralLDAPObjectclass) {
    
    
    
    this.structuralLDAPObjectclass = structuralLDAPObjectclass;
  }


  public GroupRestResourceTypeShared auxiliaryLDAPObjectclass(List<String> auxiliaryLDAPObjectclass) {
    
    
    
    
    this.auxiliaryLDAPObjectclass = auxiliaryLDAPObjectclass;
    return this;
  }

  public GroupRestResourceTypeShared addAuxiliaryLDAPObjectclassItem(String auxiliaryLDAPObjectclassItem) {
    if (this.auxiliaryLDAPObjectclass == null) {
      this.auxiliaryLDAPObjectclass = new ArrayList<>();
    }
    this.auxiliaryLDAPObjectclass.add(auxiliaryLDAPObjectclassItem);
    return this;
  }

   /**
   * Specifies an auxiliary LDAP object class that should be exposed by this REST Resource Type.
   * @return auxiliaryLDAPObjectclass
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies an auxiliary LDAP object class that should be exposed by this REST Resource Type.")

  public List<String> getAuxiliaryLDAPObjectclass() {
    return auxiliaryLDAPObjectclass;
  }


  public void setAuxiliaryLDAPObjectclass(List<String> auxiliaryLDAPObjectclass) {
    
    
    
    this.auxiliaryLDAPObjectclass = auxiliaryLDAPObjectclass;
  }


  public GroupRestResourceTypeShared searchBaseDN(String searchBaseDN) {
    
    
    
    
    this.searchBaseDN = searchBaseDN;
    return this;
  }

   /**
   * Specifies the base DN of the branch of the LDAP directory where resources of this type are located.
   * @return searchBaseDN
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Specifies the base DN of the branch of the LDAP directory where resources of this type are located.")

  public String getSearchBaseDN() {
    return searchBaseDN;
  }


  public void setSearchBaseDN(String searchBaseDN) {
    
    
    
    this.searchBaseDN = searchBaseDN;
  }


  public GroupRestResourceTypeShared includeFilter(List<String> includeFilter) {
    
    
    
    
    this.includeFilter = includeFilter;
    return this;
  }

  public GroupRestResourceTypeShared addIncludeFilterItem(String includeFilterItem) {
    if (this.includeFilter == null) {
      this.includeFilter = new ArrayList<>();
    }
    this.includeFilter.add(includeFilterItem);
    return this;
  }

   /**
   * The set of LDAP filters that define the LDAP entries that should be included in this REST Resource Type.
   * @return includeFilter
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The set of LDAP filters that define the LDAP entries that should be included in this REST Resource Type.")

  public List<String> getIncludeFilter() {
    return includeFilter;
  }


  public void setIncludeFilter(List<String> includeFilter) {
    
    
    
    this.includeFilter = includeFilter;
  }


  public GroupRestResourceTypeShared parentDN(String parentDN) {
    
    
    
    
    this.parentDN = parentDN;
    return this;
  }

   /**
   * Specifies the DN of the parent entry for new resources of this type, when a parent resource is not provided by the app. The parent DN must be at or below the search base of this resource type.
   * @return parentDN
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the DN of the parent entry for new resources of this type, when a parent resource is not provided by the app. The parent DN must be at or below the search base of this resource type.")

  public String getParentDN() {
    return parentDN;
  }


  public void setParentDN(String parentDN) {
    
    
    
    this.parentDN = parentDN;
  }


  public GroupRestResourceTypeShared parentResourceType(String parentResourceType) {
    
    
    
    
    this.parentResourceType = parentResourceType;
    return this;
  }

   /**
   * Specifies the name of another resource type which may be a parent of new resources of this type. The search base DN of the parent resource type must be at or above the search base DN of this resource type.
   * @return parentResourceType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the name of another resource type which may be a parent of new resources of this type. The search base DN of the parent resource type must be at or above the search base DN of this resource type.")

  public String getParentResourceType() {
    return parentResourceType;
  }


  public void setParentResourceType(String parentResourceType) {
    
    
    
    this.parentResourceType = parentResourceType;
  }


  public GroupRestResourceTypeShared relativeDNFromParentResource(String relativeDNFromParentResource) {
    
    
    
    
    this.relativeDNFromParentResource = relativeDNFromParentResource;
    return this;
  }

   /**
   * Specifies a template for a relative DN from the parent resource which identifies the parent entry for a new resource of this type. If this property is not specified then new resources are created immediately below the parent resource or parent DN.
   * @return relativeDNFromParentResource
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies a template for a relative DN from the parent resource which identifies the parent entry for a new resource of this type. If this property is not specified then new resources are created immediately below the parent resource or parent DN.")

  public String getRelativeDNFromParentResource() {
    return relativeDNFromParentResource;
  }


  public void setRelativeDNFromParentResource(String relativeDNFromParentResource) {
    
    
    
    this.relativeDNFromParentResource = relativeDNFromParentResource;
  }


  public GroupRestResourceTypeShared createRDNAttributeType(String createRDNAttributeType) {
    
    
    
    
    this.createRDNAttributeType = createRDNAttributeType;
    return this;
  }

   /**
   * Specifies the name or OID of the LDAP attribute type to be used as the RDN of new resources.
   * @return createRDNAttributeType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the name or OID of the LDAP attribute type to be used as the RDN of new resources.")

  public String getCreateRDNAttributeType() {
    return createRDNAttributeType;
  }


  public void setCreateRDNAttributeType(String createRDNAttributeType) {
    
    
    
    this.createRDNAttributeType = createRDNAttributeType;
  }


  public GroupRestResourceTypeShared postCreateConstructedAttribute(List<String> postCreateConstructedAttribute) {
    
    
    
    
    this.postCreateConstructedAttribute = postCreateConstructedAttribute;
    return this;
  }

  public GroupRestResourceTypeShared addPostCreateConstructedAttributeItem(String postCreateConstructedAttributeItem) {
    if (this.postCreateConstructedAttribute == null) {
      this.postCreateConstructedAttribute = new ArrayList<>();
    }
    this.postCreateConstructedAttribute.add(postCreateConstructedAttributeItem);
    return this;
  }

   /**
   * Specifies an attribute whose values are to be constructed when a new resource is created. The values are only set at creation time. Subsequent modifications to attributes in the constructed attribute value-pattern are not propagated here.
   * @return postCreateConstructedAttribute
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies an attribute whose values are to be constructed when a new resource is created. The values are only set at creation time. Subsequent modifications to attributes in the constructed attribute value-pattern are not propagated here.")

  public List<String> getPostCreateConstructedAttribute() {
    return postCreateConstructedAttribute;
  }


  public void setPostCreateConstructedAttribute(List<String> postCreateConstructedAttribute) {
    
    
    
    this.postCreateConstructedAttribute = postCreateConstructedAttribute;
  }


  public GroupRestResourceTypeShared updateConstructedAttribute(List<String> updateConstructedAttribute) {
    
    
    
    
    this.updateConstructedAttribute = updateConstructedAttribute;
    return this;
  }

  public GroupRestResourceTypeShared addUpdateConstructedAttributeItem(String updateConstructedAttributeItem) {
    if (this.updateConstructedAttribute == null) {
      this.updateConstructedAttribute = new ArrayList<>();
    }
    this.updateConstructedAttribute.add(updateConstructedAttributeItem);
    return this;
  }

   /**
   * Specifies an attribute whose values are to be constructed when a resource is updated. The constructed values replace any existing values of the attribute.
   * @return updateConstructedAttribute
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies an attribute whose values are to be constructed when a resource is updated. The constructed values replace any existing values of the attribute.")

  public List<String> getUpdateConstructedAttribute() {
    return updateConstructedAttribute;
  }


  public void setUpdateConstructedAttribute(List<String> updateConstructedAttribute) {
    
    
    
    this.updateConstructedAttribute = updateConstructedAttribute;
  }


  public GroupRestResourceTypeShared displayName(String displayName) {
    
    
    
    
    this.displayName = displayName;
    return this;
  }

   /**
   * A human readable display name for this REST Resource Type.
   * @return displayName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A human readable display name for this REST Resource Type.")

  public String getDisplayName() {
    return displayName;
  }


  public void setDisplayName(String displayName) {
    
    
    
    this.displayName = displayName;
  }


  public GroupRestResourceTypeShared searchFilterPattern(String searchFilterPattern) {
    
    
    
    
    this.searchFilterPattern = searchFilterPattern;
    return this;
  }

   /**
   * Specifies the LDAP filter that should be used when searching for resources matching provided search text. All attribute types in the filter pattern referencing the search text must have a Delegated Admin Attribute definition.
   * @return searchFilterPattern
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the LDAP filter that should be used when searching for resources matching provided search text. All attribute types in the filter pattern referencing the search text must have a Delegated Admin Attribute definition.")

  public String getSearchFilterPattern() {
    return searchFilterPattern;
  }


  public void setSearchFilterPattern(String searchFilterPattern) {
    
    
    
    this.searchFilterPattern = searchFilterPattern;
  }


  public GroupRestResourceTypeShared primaryDisplayAttributeType(String primaryDisplayAttributeType) {
    
    
    
    
    this.primaryDisplayAttributeType = primaryDisplayAttributeType;
    return this;
  }

   /**
   * Specifies the name or OID of the LDAP attribute type which is the primary display attribute. This attribute type must be in the search filter pattern and must have a Delegated Admin Attribute definition.
   * @return primaryDisplayAttributeType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the name or OID of the LDAP attribute type which is the primary display attribute. This attribute type must be in the search filter pattern and must have a Delegated Admin Attribute definition.")

  public String getPrimaryDisplayAttributeType() {
    return primaryDisplayAttributeType;
  }


  public void setPrimaryDisplayAttributeType(String primaryDisplayAttributeType) {
    
    
    
    this.primaryDisplayAttributeType = primaryDisplayAttributeType;
  }


  public GroupRestResourceTypeShared delegatedAdminSearchSizeLimit(Integer delegatedAdminSearchSizeLimit) {
    
    
    
    
    this.delegatedAdminSearchSizeLimit = delegatedAdminSearchSizeLimit;
    return this;
  }

   /**
   * The maximum number of resources that may be returned from a search request.
   * @return delegatedAdminSearchSizeLimit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The maximum number of resources that may be returned from a search request.")

  public Integer getDelegatedAdminSearchSizeLimit() {
    return delegatedAdminSearchSizeLimit;
  }


  public void setDelegatedAdminSearchSizeLimit(Integer delegatedAdminSearchSizeLimit) {
    
    
    
    this.delegatedAdminSearchSizeLimit = delegatedAdminSearchSizeLimit;
  }


  public GroupRestResourceTypeShared delegatedAdminReportSizeLimit(Integer delegatedAdminReportSizeLimit) {
    
    
    
    
    this.delegatedAdminReportSizeLimit = delegatedAdminReportSizeLimit;
    return this;
  }

   /**
   * The maximum number of resources that may be included in a report.
   * @return delegatedAdminReportSizeLimit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The maximum number of resources that may be included in a report.")

  public Integer getDelegatedAdminReportSizeLimit() {
    return delegatedAdminReportSizeLimit;
  }


  public void setDelegatedAdminReportSizeLimit(Integer delegatedAdminReportSizeLimit) {
    
    
    
    this.delegatedAdminReportSizeLimit = delegatedAdminReportSizeLimit;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the GroupRestResourceTypeShared instance itself
   */
  public GroupRestResourceTypeShared putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GroupRestResourceTypeShared groupRestResourceTypeShared = (GroupRestResourceTypeShared) o;
    return Objects.equals(this.description, groupRestResourceTypeShared.description) &&
        Objects.equals(this.schemas, groupRestResourceTypeShared.schemas) &&
        Objects.equals(this.membersColumnName, groupRestResourceTypeShared.membersColumnName) &&
        Objects.equals(this.nonmembersColumnName, groupRestResourceTypeShared.nonmembersColumnName) &&
        Objects.equals(this.enabled, groupRestResourceTypeShared.enabled) &&
        Objects.equals(this.resourceEndpoint, groupRestResourceTypeShared.resourceEndpoint) &&
        Objects.equals(this.structuralLDAPObjectclass, groupRestResourceTypeShared.structuralLDAPObjectclass) &&
        Objects.equals(this.auxiliaryLDAPObjectclass, groupRestResourceTypeShared.auxiliaryLDAPObjectclass) &&
        Objects.equals(this.searchBaseDN, groupRestResourceTypeShared.searchBaseDN) &&
        Objects.equals(this.includeFilter, groupRestResourceTypeShared.includeFilter) &&
        Objects.equals(this.parentDN, groupRestResourceTypeShared.parentDN) &&
        Objects.equals(this.parentResourceType, groupRestResourceTypeShared.parentResourceType) &&
        Objects.equals(this.relativeDNFromParentResource, groupRestResourceTypeShared.relativeDNFromParentResource) &&
        Objects.equals(this.createRDNAttributeType, groupRestResourceTypeShared.createRDNAttributeType) &&
        Objects.equals(this.postCreateConstructedAttribute, groupRestResourceTypeShared.postCreateConstructedAttribute) &&
        Objects.equals(this.updateConstructedAttribute, groupRestResourceTypeShared.updateConstructedAttribute) &&
        Objects.equals(this.displayName, groupRestResourceTypeShared.displayName) &&
        Objects.equals(this.searchFilterPattern, groupRestResourceTypeShared.searchFilterPattern) &&
        Objects.equals(this.primaryDisplayAttributeType, groupRestResourceTypeShared.primaryDisplayAttributeType) &&
        Objects.equals(this.delegatedAdminSearchSizeLimit, groupRestResourceTypeShared.delegatedAdminSearchSizeLimit) &&
        Objects.equals(this.delegatedAdminReportSizeLimit, groupRestResourceTypeShared.delegatedAdminReportSizeLimit)&&
        Objects.equals(this.additionalProperties, groupRestResourceTypeShared.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, schemas, membersColumnName, nonmembersColumnName, enabled, resourceEndpoint, structuralLDAPObjectclass, auxiliaryLDAPObjectclass, searchBaseDN, includeFilter, parentDN, parentResourceType, relativeDNFromParentResource, createRDNAttributeType, postCreateConstructedAttribute, updateConstructedAttribute, displayName, searchFilterPattern, primaryDisplayAttributeType, delegatedAdminSearchSizeLimit, delegatedAdminReportSizeLimit, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GroupRestResourceTypeShared {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    schemas: ").append(toIndentedString(schemas)).append("\n");
    sb.append("    membersColumnName: ").append(toIndentedString(membersColumnName)).append("\n");
    sb.append("    nonmembersColumnName: ").append(toIndentedString(nonmembersColumnName)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    resourceEndpoint: ").append(toIndentedString(resourceEndpoint)).append("\n");
    sb.append("    structuralLDAPObjectclass: ").append(toIndentedString(structuralLDAPObjectclass)).append("\n");
    sb.append("    auxiliaryLDAPObjectclass: ").append(toIndentedString(auxiliaryLDAPObjectclass)).append("\n");
    sb.append("    searchBaseDN: ").append(toIndentedString(searchBaseDN)).append("\n");
    sb.append("    includeFilter: ").append(toIndentedString(includeFilter)).append("\n");
    sb.append("    parentDN: ").append(toIndentedString(parentDN)).append("\n");
    sb.append("    parentResourceType: ").append(toIndentedString(parentResourceType)).append("\n");
    sb.append("    relativeDNFromParentResource: ").append(toIndentedString(relativeDNFromParentResource)).append("\n");
    sb.append("    createRDNAttributeType: ").append(toIndentedString(createRDNAttributeType)).append("\n");
    sb.append("    postCreateConstructedAttribute: ").append(toIndentedString(postCreateConstructedAttribute)).append("\n");
    sb.append("    updateConstructedAttribute: ").append(toIndentedString(updateConstructedAttribute)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    searchFilterPattern: ").append(toIndentedString(searchFilterPattern)).append("\n");
    sb.append("    primaryDisplayAttributeType: ").append(toIndentedString(primaryDisplayAttributeType)).append("\n");
    sb.append("    delegatedAdminSearchSizeLimit: ").append(toIndentedString(delegatedAdminSearchSizeLimit)).append("\n");
    sb.append("    delegatedAdminReportSizeLimit: ").append(toIndentedString(delegatedAdminReportSizeLimit)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("description");
    openapiFields.add("schemas");
    openapiFields.add("membersColumnName");
    openapiFields.add("nonmembersColumnName");
    openapiFields.add("enabled");
    openapiFields.add("resourceEndpoint");
    openapiFields.add("structuralLDAPObjectclass");
    openapiFields.add("auxiliaryLDAPObjectclass");
    openapiFields.add("searchBaseDN");
    openapiFields.add("includeFilter");
    openapiFields.add("parentDN");
    openapiFields.add("parentResourceType");
    openapiFields.add("relativeDNFromParentResource");
    openapiFields.add("createRDNAttributeType");
    openapiFields.add("postCreateConstructedAttribute");
    openapiFields.add("updateConstructedAttribute");
    openapiFields.add("displayName");
    openapiFields.add("searchFilterPattern");
    openapiFields.add("primaryDisplayAttributeType");
    openapiFields.add("delegatedAdminSearchSizeLimit");
    openapiFields.add("delegatedAdminReportSizeLimit");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("schemas");
    openapiRequiredFields.add("enabled");
    openapiRequiredFields.add("resourceEndpoint");
    openapiRequiredFields.add("structuralLDAPObjectclass");
    openapiRequiredFields.add("searchBaseDN");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to GroupRestResourceTypeShared
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!GroupRestResourceTypeShared.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GroupRestResourceTypeShared is not found in the empty JSON string", GroupRestResourceTypeShared.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : GroupRestResourceTypeShared.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("schemas") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("schemas").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `schemas` to be an array in the JSON string but got `%s`", jsonObj.get("schemas").toString()));
      }
      if ((jsonObj.get("membersColumnName") != null && !jsonObj.get("membersColumnName").isJsonNull()) && !jsonObj.get("membersColumnName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `membersColumnName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("membersColumnName").toString()));
      }
      if ((jsonObj.get("nonmembersColumnName") != null && !jsonObj.get("nonmembersColumnName").isJsonNull()) && !jsonObj.get("nonmembersColumnName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nonmembersColumnName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nonmembersColumnName").toString()));
      }
      if (!jsonObj.get("resourceEndpoint").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resourceEndpoint` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resourceEndpoint").toString()));
      }
      if (!jsonObj.get("structuralLDAPObjectclass").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `structuralLDAPObjectclass` to be a primitive type in the JSON string but got `%s`", jsonObj.get("structuralLDAPObjectclass").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("auxiliaryLDAPObjectclass") != null && !jsonObj.get("auxiliaryLDAPObjectclass").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `auxiliaryLDAPObjectclass` to be an array in the JSON string but got `%s`", jsonObj.get("auxiliaryLDAPObjectclass").toString()));
      }
      if (!jsonObj.get("searchBaseDN").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `searchBaseDN` to be a primitive type in the JSON string but got `%s`", jsonObj.get("searchBaseDN").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("includeFilter") != null && !jsonObj.get("includeFilter").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `includeFilter` to be an array in the JSON string but got `%s`", jsonObj.get("includeFilter").toString()));
      }
      if ((jsonObj.get("parentDN") != null && !jsonObj.get("parentDN").isJsonNull()) && !jsonObj.get("parentDN").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `parentDN` to be a primitive type in the JSON string but got `%s`", jsonObj.get("parentDN").toString()));
      }
      if ((jsonObj.get("parentResourceType") != null && !jsonObj.get("parentResourceType").isJsonNull()) && !jsonObj.get("parentResourceType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `parentResourceType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("parentResourceType").toString()));
      }
      if ((jsonObj.get("relativeDNFromParentResource") != null && !jsonObj.get("relativeDNFromParentResource").isJsonNull()) && !jsonObj.get("relativeDNFromParentResource").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `relativeDNFromParentResource` to be a primitive type in the JSON string but got `%s`", jsonObj.get("relativeDNFromParentResource").toString()));
      }
      if ((jsonObj.get("createRDNAttributeType") != null && !jsonObj.get("createRDNAttributeType").isJsonNull()) && !jsonObj.get("createRDNAttributeType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createRDNAttributeType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createRDNAttributeType").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("postCreateConstructedAttribute") != null && !jsonObj.get("postCreateConstructedAttribute").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `postCreateConstructedAttribute` to be an array in the JSON string but got `%s`", jsonObj.get("postCreateConstructedAttribute").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("updateConstructedAttribute") != null && !jsonObj.get("updateConstructedAttribute").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `updateConstructedAttribute` to be an array in the JSON string but got `%s`", jsonObj.get("updateConstructedAttribute").toString()));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      if ((jsonObj.get("searchFilterPattern") != null && !jsonObj.get("searchFilterPattern").isJsonNull()) && !jsonObj.get("searchFilterPattern").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `searchFilterPattern` to be a primitive type in the JSON string but got `%s`", jsonObj.get("searchFilterPattern").toString()));
      }
      if ((jsonObj.get("primaryDisplayAttributeType") != null && !jsonObj.get("primaryDisplayAttributeType").isJsonNull()) && !jsonObj.get("primaryDisplayAttributeType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `primaryDisplayAttributeType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("primaryDisplayAttributeType").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GroupRestResourceTypeShared.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GroupRestResourceTypeShared' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GroupRestResourceTypeShared> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GroupRestResourceTypeShared.class));

       return (TypeAdapter<T>) new TypeAdapter<GroupRestResourceTypeShared>() {
           @Override
           public void write(JsonWriter out, GroupRestResourceTypeShared value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public GroupRestResourceTypeShared read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             GroupRestResourceTypeShared instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of GroupRestResourceTypeShared given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of GroupRestResourceTypeShared
  * @throws IOException if the JSON string is invalid with respect to GroupRestResourceTypeShared
  */
  public static GroupRestResourceTypeShared fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GroupRestResourceTypeShared.class);
  }

 /**
  * Convert an instance of GroupRestResourceTypeShared to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

