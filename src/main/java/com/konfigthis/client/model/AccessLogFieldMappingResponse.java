/*
 * PingData Config - OpenAPI 3.0
 * This is the PingData Configuration API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.EnumaccessLogFieldMappingSchemaUrn;
import com.konfigthis.client.model.MetaMeta;
import com.konfigthis.client.model.MetaUrnPingidentitySchemasConfigurationMessages20;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * AccessLogFieldMappingResponse
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class AccessLogFieldMappingResponse {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_SCHEMAS = "schemas";
  @SerializedName(SERIALIZED_NAME_SCHEMAS)
  private List<EnumaccessLogFieldMappingSchemaUrn> schemas = new ArrayList<>();

  public static final String SERIALIZED_NAME_LOG_FIELD_TIMESTAMP = "logFieldTimestamp";
  @SerializedName(SERIALIZED_NAME_LOG_FIELD_TIMESTAMP)
  private String logFieldTimestamp;

  public static final String SERIALIZED_NAME_LOG_FIELD_CONNECTION_I_D = "logFieldConnectionID";
  @SerializedName(SERIALIZED_NAME_LOG_FIELD_CONNECTION_I_D)
  private String logFieldConnectionID;

  public static final String SERIALIZED_NAME_LOG_FIELD_STARTUPID = "logFieldStartupid";
  @SerializedName(SERIALIZED_NAME_LOG_FIELD_STARTUPID)
  private String logFieldStartupid;

  public static final String SERIALIZED_NAME_LOG_FIELD_PRODUCT_NAME = "logFieldProductName";
  @SerializedName(SERIALIZED_NAME_LOG_FIELD_PRODUCT_NAME)
  private String logFieldProductName;

  public static final String SERIALIZED_NAME_LOG_FIELD_INSTANCE_NAME = "logFieldInstanceName";
  @SerializedName(SERIALIZED_NAME_LOG_FIELD_INSTANCE_NAME)
  private String logFieldInstanceName;

  public static final String SERIALIZED_NAME_LOG_FIELD_OPERATION_I_D = "logFieldOperationID";
  @SerializedName(SERIALIZED_NAME_LOG_FIELD_OPERATION_I_D)
  private String logFieldOperationID;

  public static final String SERIALIZED_NAME_LOG_FIELD_MESSAGE_TYPE = "logFieldMessageType";
  @SerializedName(SERIALIZED_NAME_LOG_FIELD_MESSAGE_TYPE)
  private String logFieldMessageType;

  public static final String SERIALIZED_NAME_LOG_FIELD_OPERATION_TYPE = "logFieldOperationType";
  @SerializedName(SERIALIZED_NAME_LOG_FIELD_OPERATION_TYPE)
  private String logFieldOperationType;

  public static final String SERIALIZED_NAME_LOG_FIELD_MESSAGE_I_D = "logFieldMessageID";
  @SerializedName(SERIALIZED_NAME_LOG_FIELD_MESSAGE_I_D)
  private String logFieldMessageID;

  public static final String SERIALIZED_NAME_LOG_FIELD_RESULT_CODE = "logFieldResultCode";
  @SerializedName(SERIALIZED_NAME_LOG_FIELD_RESULT_CODE)
  private String logFieldResultCode;

  public static final String SERIALIZED_NAME_LOG_FIELD_MESSAGE = "logFieldMessage";
  @SerializedName(SERIALIZED_NAME_LOG_FIELD_MESSAGE)
  private String logFieldMessage;

  public static final String SERIALIZED_NAME_LOG_FIELD_ORIGIN = "logFieldOrigin";
  @SerializedName(SERIALIZED_NAME_LOG_FIELD_ORIGIN)
  private String logFieldOrigin;

  public static final String SERIALIZED_NAME_LOG_FIELD_REQUESTER_D_N = "logFieldRequesterDN";
  @SerializedName(SERIALIZED_NAME_LOG_FIELD_REQUESTER_D_N)
  private String logFieldRequesterDN;

  public static final String SERIALIZED_NAME_LOG_FIELD_DISCONNECT_REASON = "logFieldDisconnectReason";
  @SerializedName(SERIALIZED_NAME_LOG_FIELD_DISCONNECT_REASON)
  private String logFieldDisconnectReason;

  public static final String SERIALIZED_NAME_LOG_FIELD_DELETE_OLD_R_D_N = "logFieldDeleteOldRDN";
  @SerializedName(SERIALIZED_NAME_LOG_FIELD_DELETE_OLD_R_D_N)
  private String logFieldDeleteOldRDN;

  public static final String SERIALIZED_NAME_LOG_FIELD_AUTHENTICATED_USER_D_N = "logFieldAuthenticatedUserDN";
  @SerializedName(SERIALIZED_NAME_LOG_FIELD_AUTHENTICATED_USER_D_N)
  private String logFieldAuthenticatedUserDN;

  public static final String SERIALIZED_NAME_LOG_FIELD_PROCESSING_TIME = "logFieldProcessingTime";
  @SerializedName(SERIALIZED_NAME_LOG_FIELD_PROCESSING_TIME)
  private String logFieldProcessingTime;

  public static final String SERIALIZED_NAME_LOG_FIELD_REQUESTED_ATTRIBUTES = "logFieldRequestedAttributes";
  @SerializedName(SERIALIZED_NAME_LOG_FIELD_REQUESTED_ATTRIBUTES)
  private String logFieldRequestedAttributes;

  public static final String SERIALIZED_NAME_LOG_FIELD_S_A_S_L_MECHANISM_NAME = "logFieldSASLMechanismName";
  @SerializedName(SERIALIZED_NAME_LOG_FIELD_S_A_S_L_MECHANISM_NAME)
  private String logFieldSASLMechanismName;

  public static final String SERIALIZED_NAME_LOG_FIELD_NEW_R_D_N = "logFieldNewRDN";
  @SerializedName(SERIALIZED_NAME_LOG_FIELD_NEW_R_D_N)
  private String logFieldNewRDN;

  public static final String SERIALIZED_NAME_LOG_FIELD_BASE_D_N = "logFieldBaseDN";
  @SerializedName(SERIALIZED_NAME_LOG_FIELD_BASE_D_N)
  private String logFieldBaseDN;

  public static final String SERIALIZED_NAME_LOG_FIELD_BIND_D_N = "logFieldBindDN";
  @SerializedName(SERIALIZED_NAME_LOG_FIELD_BIND_D_N)
  private String logFieldBindDN;

  public static final String SERIALIZED_NAME_LOG_FIELD_MATCHED_D_N = "logFieldMatchedDN";
  @SerializedName(SERIALIZED_NAME_LOG_FIELD_MATCHED_D_N)
  private String logFieldMatchedDN;

  public static final String SERIALIZED_NAME_LOG_FIELD_REQUESTER_I_P_ADDRESS = "logFieldRequesterIPAddress";
  @SerializedName(SERIALIZED_NAME_LOG_FIELD_REQUESTER_I_P_ADDRESS)
  private String logFieldRequesterIPAddress;

  public static final String SERIALIZED_NAME_LOG_FIELD_AUTHENTICATION_TYPE = "logFieldAuthenticationType";
  @SerializedName(SERIALIZED_NAME_LOG_FIELD_AUTHENTICATION_TYPE)
  private String logFieldAuthenticationType;

  public static final String SERIALIZED_NAME_LOG_FIELD_NEW_SUPERIOR_D_N = "logFieldNewSuperiorDN";
  @SerializedName(SERIALIZED_NAME_LOG_FIELD_NEW_SUPERIOR_D_N)
  private String logFieldNewSuperiorDN;

  public static final String SERIALIZED_NAME_LOG_FIELD_FILTER = "logFieldFilter";
  @SerializedName(SERIALIZED_NAME_LOG_FIELD_FILTER)
  private String logFieldFilter;

  public static final String SERIALIZED_NAME_LOG_FIELD_ALTERNATE_AUTHORIZATION_D_N = "logFieldAlternateAuthorizationDN";
  @SerializedName(SERIALIZED_NAME_LOG_FIELD_ALTERNATE_AUTHORIZATION_D_N)
  private String logFieldAlternateAuthorizationDN;

  public static final String SERIALIZED_NAME_LOG_FIELD_ENTRY_D_N = "logFieldEntryDN";
  @SerializedName(SERIALIZED_NAME_LOG_FIELD_ENTRY_D_N)
  private String logFieldEntryDN;

  public static final String SERIALIZED_NAME_LOG_FIELD_ENTRIES_RETURNED = "logFieldEntriesReturned";
  @SerializedName(SERIALIZED_NAME_LOG_FIELD_ENTRIES_RETURNED)
  private String logFieldEntriesReturned;

  public static final String SERIALIZED_NAME_LOG_FIELD_AUTHENTICATION_FAILURE_I_D = "logFieldAuthenticationFailureID";
  @SerializedName(SERIALIZED_NAME_LOG_FIELD_AUTHENTICATION_FAILURE_I_D)
  private String logFieldAuthenticationFailureID;

  public static final String SERIALIZED_NAME_LOG_FIELD_REQUEST_O_I_D = "logFieldRequestOID";
  @SerializedName(SERIALIZED_NAME_LOG_FIELD_REQUEST_O_I_D)
  private String logFieldRequestOID;

  public static final String SERIALIZED_NAME_LOG_FIELD_RESPONSE_O_I_D = "logFieldResponseOID";
  @SerializedName(SERIALIZED_NAME_LOG_FIELD_RESPONSE_O_I_D)
  private String logFieldResponseOID;

  public static final String SERIALIZED_NAME_LOG_FIELD_TARGET_PROTOCOL = "logFieldTargetProtocol";
  @SerializedName(SERIALIZED_NAME_LOG_FIELD_TARGET_PROTOCOL)
  private String logFieldTargetProtocol;

  public static final String SERIALIZED_NAME_LOG_FIELD_TARGET_PORT = "logFieldTargetPort";
  @SerializedName(SERIALIZED_NAME_LOG_FIELD_TARGET_PORT)
  private String logFieldTargetPort;

  public static final String SERIALIZED_NAME_LOG_FIELD_TARGET_ADDRESS = "logFieldTargetAddress";
  @SerializedName(SERIALIZED_NAME_LOG_FIELD_TARGET_ADDRESS)
  private String logFieldTargetAddress;

  public static final String SERIALIZED_NAME_LOG_FIELD_TARGET_ATTRIBUTE = "logFieldTargetAttribute";
  @SerializedName(SERIALIZED_NAME_LOG_FIELD_TARGET_ATTRIBUTE)
  private String logFieldTargetAttribute;

  public static final String SERIALIZED_NAME_LOG_FIELD_TARGET_HOST = "logFieldTargetHost";
  @SerializedName(SERIALIZED_NAME_LOG_FIELD_TARGET_HOST)
  private String logFieldTargetHost;

  public static final String SERIALIZED_NAME_LOG_FIELD_PROTOCOL_VERSION = "logFieldProtocolVersion";
  @SerializedName(SERIALIZED_NAME_LOG_FIELD_PROTOCOL_VERSION)
  private String logFieldProtocolVersion;

  public static final String SERIALIZED_NAME_LOG_FIELD_PROTOCOL_NAME = "logFieldProtocolName";
  @SerializedName(SERIALIZED_NAME_LOG_FIELD_PROTOCOL_NAME)
  private String logFieldProtocolName;

  public static final String SERIALIZED_NAME_LOG_FIELD_AUTHENTICATION_FAILURE_REASON = "logFieldAuthenticationFailureReason";
  @SerializedName(SERIALIZED_NAME_LOG_FIELD_AUTHENTICATION_FAILURE_REASON)
  private String logFieldAuthenticationFailureReason;

  public static final String SERIALIZED_NAME_LOG_FIELD_ADDITIONAL_INFORMATION = "logFieldAdditionalInformation";
  @SerializedName(SERIALIZED_NAME_LOG_FIELD_ADDITIONAL_INFORMATION)
  private String logFieldAdditionalInformation;

  public static final String SERIALIZED_NAME_LOG_FIELD_UNINDEXED = "logFieldUnindexed";
  @SerializedName(SERIALIZED_NAME_LOG_FIELD_UNINDEXED)
  private String logFieldUnindexed;

  public static final String SERIALIZED_NAME_LOG_FIELD_SCOPE = "logFieldScope";
  @SerializedName(SERIALIZED_NAME_LOG_FIELD_SCOPE)
  private String logFieldScope;

  public static final String SERIALIZED_NAME_LOG_FIELD_REFERRAL_URLS = "logFieldReferralUrls";
  @SerializedName(SERIALIZED_NAME_LOG_FIELD_REFERRAL_URLS)
  private String logFieldReferralUrls;

  public static final String SERIALIZED_NAME_LOG_FIELD_SOURCE_ADDRESS = "logFieldSourceAddress";
  @SerializedName(SERIALIZED_NAME_LOG_FIELD_SOURCE_ADDRESS)
  private String logFieldSourceAddress;

  public static final String SERIALIZED_NAME_LOG_FIELD_MESSAGE_I_D_TO_ABANDON = "logFieldMessageIDToAbandon";
  @SerializedName(SERIALIZED_NAME_LOG_FIELD_MESSAGE_I_D_TO_ABANDON)
  private String logFieldMessageIDToAbandon;

  public static final String SERIALIZED_NAME_LOG_FIELD_RESPONSE_CONTROLS = "logFieldResponseControls";
  @SerializedName(SERIALIZED_NAME_LOG_FIELD_RESPONSE_CONTROLS)
  private String logFieldResponseControls;

  public static final String SERIALIZED_NAME_LOG_FIELD_REQUEST_CONTROLS = "logFieldRequestControls";
  @SerializedName(SERIALIZED_NAME_LOG_FIELD_REQUEST_CONTROLS)
  private String logFieldRequestControls;

  public static final String SERIALIZED_NAME_LOG_FIELD_INTERMEDIATE_CLIENT_RESULT = "logFieldIntermediateClientResult";
  @SerializedName(SERIALIZED_NAME_LOG_FIELD_INTERMEDIATE_CLIENT_RESULT)
  private String logFieldIntermediateClientResult;

  public static final String SERIALIZED_NAME_LOG_FIELD_INTERMEDIATE_CLIENT_REQUEST = "logFieldIntermediateClientRequest";
  @SerializedName(SERIALIZED_NAME_LOG_FIELD_INTERMEDIATE_CLIENT_REQUEST)
  private String logFieldIntermediateClientRequest;

  public static final String SERIALIZED_NAME_LOG_FIELD_REPLICATION_CHANGE_I_D = "logFieldReplicationChangeID";
  @SerializedName(SERIALIZED_NAME_LOG_FIELD_REPLICATION_CHANGE_I_D)
  private String logFieldReplicationChangeID;

  public static final String SERIALIZED_NAME_META = "meta";
  @SerializedName(SERIALIZED_NAME_META)
  private MetaMeta meta;

  public static final String SERIALIZED_NAME_URN_COLON_PINGIDENTITY_COLON_SCHEMAS_COLON_CONFIGURATION_COLON_MESSAGES_COLON20 = "urn:pingidentity:schemas:configuration:messages:2.0";
  @SerializedName(SERIALIZED_NAME_URN_COLON_PINGIDENTITY_COLON_SCHEMAS_COLON_CONFIGURATION_COLON_MESSAGES_COLON20)
  private MetaUrnPingidentitySchemasConfigurationMessages20 urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20;

  public AccessLogFieldMappingResponse() {
  }

  public AccessLogFieldMappingResponse id(String id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * Name of the Log Field Mapping
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Name of the Log Field Mapping")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    
    
    
    this.id = id;
  }


  public AccessLogFieldMappingResponse description(String description) {
    
    
    
    
    this.description = description;
    return this;
  }

   /**
   * A description for this Log Field Mapping
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A description for this Log Field Mapping")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    
    
    
    this.description = description;
  }


  public AccessLogFieldMappingResponse schemas(List<EnumaccessLogFieldMappingSchemaUrn> schemas) {
    
    
    
    
    this.schemas = schemas;
    return this;
  }

  public AccessLogFieldMappingResponse addSchemasItem(EnumaccessLogFieldMappingSchemaUrn schemasItem) {
    this.schemas.add(schemasItem);
    return this;
  }

   /**
   * Get schemas
   * @return schemas
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<EnumaccessLogFieldMappingSchemaUrn> getSchemas() {
    return schemas;
  }


  public void setSchemas(List<EnumaccessLogFieldMappingSchemaUrn> schemas) {
    
    
    
    this.schemas = schemas;
  }


  public AccessLogFieldMappingResponse logFieldTimestamp(String logFieldTimestamp) {
    
    
    
    
    this.logFieldTimestamp = logFieldTimestamp;
    return this;
  }

   /**
   * The time that the operation was processed.
   * @return logFieldTimestamp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The time that the operation was processed.")

  public String getLogFieldTimestamp() {
    return logFieldTimestamp;
  }


  public void setLogFieldTimestamp(String logFieldTimestamp) {
    
    
    
    this.logFieldTimestamp = logFieldTimestamp;
  }


  public AccessLogFieldMappingResponse logFieldConnectionID(String logFieldConnectionID) {
    
    
    
    
    this.logFieldConnectionID = logFieldConnectionID;
    return this;
  }

   /**
   * The connection ID assigned to the client connection.
   * @return logFieldConnectionID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The connection ID assigned to the client connection.")

  public String getLogFieldConnectionID() {
    return logFieldConnectionID;
  }


  public void setLogFieldConnectionID(String logFieldConnectionID) {
    
    
    
    this.logFieldConnectionID = logFieldConnectionID;
  }


  public AccessLogFieldMappingResponse logFieldStartupid(String logFieldStartupid) {
    
    
    
    
    this.logFieldStartupid = logFieldStartupid;
    return this;
  }

   /**
   * The startup ID for the Directory Server. A different value will be generated each time the server is started, and it may be used to distinguish between operations with the same connection ID and operation ID across server restarts.
   * @return logFieldStartupid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The startup ID for the Directory Server. A different value will be generated each time the server is started, and it may be used to distinguish between operations with the same connection ID and operation ID across server restarts.")

  public String getLogFieldStartupid() {
    return logFieldStartupid;
  }


  public void setLogFieldStartupid(String logFieldStartupid) {
    
    
    
    this.logFieldStartupid = logFieldStartupid;
  }


  public AccessLogFieldMappingResponse logFieldProductName(String logFieldProductName) {
    
    
    
    
    this.logFieldProductName = logFieldProductName;
    return this;
  }

   /**
   * The name for this Directory Server product, which may be used to identify which product was used to log the message if multiple products log to the same database table.
   * @return logFieldProductName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name for this Directory Server product, which may be used to identify which product was used to log the message if multiple products log to the same database table.")

  public String getLogFieldProductName() {
    return logFieldProductName;
  }


  public void setLogFieldProductName(String logFieldProductName) {
    
    
    
    this.logFieldProductName = logFieldProductName;
  }


  public AccessLogFieldMappingResponse logFieldInstanceName(String logFieldInstanceName) {
    
    
    
    
    this.logFieldInstanceName = logFieldInstanceName;
    return this;
  }

   /**
   * A name that uniquely identifies this Directory Server instance, which may be used to identify which instance was used to log the message if multiple server instances log to the same database table.
   * @return logFieldInstanceName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A name that uniquely identifies this Directory Server instance, which may be used to identify which instance was used to log the message if multiple server instances log to the same database table.")

  public String getLogFieldInstanceName() {
    return logFieldInstanceName;
  }


  public void setLogFieldInstanceName(String logFieldInstanceName) {
    
    
    
    this.logFieldInstanceName = logFieldInstanceName;
  }


  public AccessLogFieldMappingResponse logFieldOperationID(String logFieldOperationID) {
    
    
    
    
    this.logFieldOperationID = logFieldOperationID;
    return this;
  }

   /**
   * The operation ID for the operation processed by the server.
   * @return logFieldOperationID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The operation ID for the operation processed by the server.")

  public String getLogFieldOperationID() {
    return logFieldOperationID;
  }


  public void setLogFieldOperationID(String logFieldOperationID) {
    
    
    
    this.logFieldOperationID = logFieldOperationID;
  }


  public AccessLogFieldMappingResponse logFieldMessageType(String logFieldMessageType) {
    
    
    
    
    this.logFieldMessageType = logFieldMessageType;
    return this;
  }

   /**
   * The type of log message. Message types may include \&quot;CONNECT\&quot;, \&quot;DISCONNECT\&quot;, \&quot;FORWARD\&quot;, \&quot;RESULT\&quot;, \&quot;ENTRY\&quot;, or \&quot;REFERENCE\&quot;.
   * @return logFieldMessageType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The type of log message. Message types may include \"CONNECT\", \"DISCONNECT\", \"FORWARD\", \"RESULT\", \"ENTRY\", or \"REFERENCE\".")

  public String getLogFieldMessageType() {
    return logFieldMessageType;
  }


  public void setLogFieldMessageType(String logFieldMessageType) {
    
    
    
    this.logFieldMessageType = logFieldMessageType;
  }


  public AccessLogFieldMappingResponse logFieldOperationType(String logFieldOperationType) {
    
    
    
    
    this.logFieldOperationType = logFieldOperationType;
    return this;
  }

   /**
   * The type of operation that was processed.
   * @return logFieldOperationType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The type of operation that was processed.")

  public String getLogFieldOperationType() {
    return logFieldOperationType;
  }


  public void setLogFieldOperationType(String logFieldOperationType) {
    
    
    
    this.logFieldOperationType = logFieldOperationType;
  }


  public AccessLogFieldMappingResponse logFieldMessageID(String logFieldMessageID) {
    
    
    
    
    this.logFieldMessageID = logFieldMessageID;
    return this;
  }

   /**
   * The message ID included in the client request.
   * @return logFieldMessageID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The message ID included in the client request.")

  public String getLogFieldMessageID() {
    return logFieldMessageID;
  }


  public void setLogFieldMessageID(String logFieldMessageID) {
    
    
    
    this.logFieldMessageID = logFieldMessageID;
  }


  public AccessLogFieldMappingResponse logFieldResultCode(String logFieldResultCode) {
    
    
    
    
    this.logFieldResultCode = logFieldResultCode;
    return this;
  }

   /**
   * The numeric result code for the operation.
   * @return logFieldResultCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The numeric result code for the operation.")

  public String getLogFieldResultCode() {
    return logFieldResultCode;
  }


  public void setLogFieldResultCode(String logFieldResultCode) {
    
    
    
    this.logFieldResultCode = logFieldResultCode;
  }


  public AccessLogFieldMappingResponse logFieldMessage(String logFieldMessage) {
    
    
    
    
    this.logFieldMessage = logFieldMessage;
    return this;
  }

   /**
   * The diagnostic message for the operation.
   * @return logFieldMessage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The diagnostic message for the operation.")

  public String getLogFieldMessage() {
    return logFieldMessage;
  }


  public void setLogFieldMessage(String logFieldMessage) {
    
    
    
    this.logFieldMessage = logFieldMessage;
  }


  public AccessLogFieldMappingResponse logFieldOrigin(String logFieldOrigin) {
    
    
    
    
    this.logFieldOrigin = logFieldOrigin;
    return this;
  }

   /**
   * The origin for the operation. Values may include \&quot;replication\&quot; (if the operation was received via replication), \&quot;internal\&quot; (if it was an internal operation processed by a server component), or \&quot;external\&quot; (if it was a request from a client).
   * @return logFieldOrigin
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The origin for the operation. Values may include \"replication\" (if the operation was received via replication), \"internal\" (if it was an internal operation processed by a server component), or \"external\" (if it was a request from a client).")

  public String getLogFieldOrigin() {
    return logFieldOrigin;
  }


  public void setLogFieldOrigin(String logFieldOrigin) {
    
    
    
    this.logFieldOrigin = logFieldOrigin;
  }


  public AccessLogFieldMappingResponse logFieldRequesterDN(String logFieldRequesterDN) {
    
    
    
    
    this.logFieldRequesterDN = logFieldRequesterDN;
    return this;
  }

   /**
   * The DN of the user that requested the operation.
   * @return logFieldRequesterDN
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The DN of the user that requested the operation.")

  public String getLogFieldRequesterDN() {
    return logFieldRequesterDN;
  }


  public void setLogFieldRequesterDN(String logFieldRequesterDN) {
    
    
    
    this.logFieldRequesterDN = logFieldRequesterDN;
  }


  public AccessLogFieldMappingResponse logFieldDisconnectReason(String logFieldDisconnectReason) {
    
    
    
    
    this.logFieldDisconnectReason = logFieldDisconnectReason;
    return this;
  }

   /**
   * The reason that the client connection was closed.
   * @return logFieldDisconnectReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The reason that the client connection was closed.")

  public String getLogFieldDisconnectReason() {
    return logFieldDisconnectReason;
  }


  public void setLogFieldDisconnectReason(String logFieldDisconnectReason) {
    
    
    
    this.logFieldDisconnectReason = logFieldDisconnectReason;
  }


  public AccessLogFieldMappingResponse logFieldDeleteOldRDN(String logFieldDeleteOldRDN) {
    
    
    
    
    this.logFieldDeleteOldRDN = logFieldDeleteOldRDN;
    return this;
  }

   /**
   * Indicates whether the old RDN values should be removed from an entry while processing a modify DN operation.
   * @return logFieldDeleteOldRDN
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether the old RDN values should be removed from an entry while processing a modify DN operation.")

  public String getLogFieldDeleteOldRDN() {
    return logFieldDeleteOldRDN;
  }


  public void setLogFieldDeleteOldRDN(String logFieldDeleteOldRDN) {
    
    
    
    this.logFieldDeleteOldRDN = logFieldDeleteOldRDN;
  }


  public AccessLogFieldMappingResponse logFieldAuthenticatedUserDN(String logFieldAuthenticatedUserDN) {
    
    
    
    
    this.logFieldAuthenticatedUserDN = logFieldAuthenticatedUserDN;
    return this;
  }

   /**
   * The DN of the user that authenticated to the server.
   * @return logFieldAuthenticatedUserDN
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The DN of the user that authenticated to the server.")

  public String getLogFieldAuthenticatedUserDN() {
    return logFieldAuthenticatedUserDN;
  }


  public void setLogFieldAuthenticatedUserDN(String logFieldAuthenticatedUserDN) {
    
    
    
    this.logFieldAuthenticatedUserDN = logFieldAuthenticatedUserDN;
  }


  public AccessLogFieldMappingResponse logFieldProcessingTime(String logFieldProcessingTime) {
    
    
    
    
    this.logFieldProcessingTime = logFieldProcessingTime;
    return this;
  }

   /**
   * The length of time (in milliseconds with microsecond accuracy) required to process the operation.
   * @return logFieldProcessingTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The length of time (in milliseconds with microsecond accuracy) required to process the operation.")

  public String getLogFieldProcessingTime() {
    return logFieldProcessingTime;
  }


  public void setLogFieldProcessingTime(String logFieldProcessingTime) {
    
    
    
    this.logFieldProcessingTime = logFieldProcessingTime;
  }


  public AccessLogFieldMappingResponse logFieldRequestedAttributes(String logFieldRequestedAttributes) {
    
    
    
    
    this.logFieldRequestedAttributes = logFieldRequestedAttributes;
    return this;
  }

   /**
   * The set of requested attributes for the search operation.
   * @return logFieldRequestedAttributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The set of requested attributes for the search operation.")

  public String getLogFieldRequestedAttributes() {
    return logFieldRequestedAttributes;
  }


  public void setLogFieldRequestedAttributes(String logFieldRequestedAttributes) {
    
    
    
    this.logFieldRequestedAttributes = logFieldRequestedAttributes;
  }


  public AccessLogFieldMappingResponse logFieldSASLMechanismName(String logFieldSASLMechanismName) {
    
    
    
    
    this.logFieldSASLMechanismName = logFieldSASLMechanismName;
    return this;
  }

   /**
   * The name of the SASL mechanism used to authenticate.
   * @return logFieldSASLMechanismName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the SASL mechanism used to authenticate.")

  public String getLogFieldSASLMechanismName() {
    return logFieldSASLMechanismName;
  }


  public void setLogFieldSASLMechanismName(String logFieldSASLMechanismName) {
    
    
    
    this.logFieldSASLMechanismName = logFieldSASLMechanismName;
  }


  public AccessLogFieldMappingResponse logFieldNewRDN(String logFieldNewRDN) {
    
    
    
    
    this.logFieldNewRDN = logFieldNewRDN;
    return this;
  }

   /**
   * The new RDN to use for a modify DN operation.
   * @return logFieldNewRDN
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The new RDN to use for a modify DN operation.")

  public String getLogFieldNewRDN() {
    return logFieldNewRDN;
  }


  public void setLogFieldNewRDN(String logFieldNewRDN) {
    
    
    
    this.logFieldNewRDN = logFieldNewRDN;
  }


  public AccessLogFieldMappingResponse logFieldBaseDN(String logFieldBaseDN) {
    
    
    
    
    this.logFieldBaseDN = logFieldBaseDN;
    return this;
  }

   /**
   * The base DN for a search operation.
   * @return logFieldBaseDN
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The base DN for a search operation.")

  public String getLogFieldBaseDN() {
    return logFieldBaseDN;
  }


  public void setLogFieldBaseDN(String logFieldBaseDN) {
    
    
    
    this.logFieldBaseDN = logFieldBaseDN;
  }


  public AccessLogFieldMappingResponse logFieldBindDN(String logFieldBindDN) {
    
    
    
    
    this.logFieldBindDN = logFieldBindDN;
    return this;
  }

   /**
   * The bind DN for a bind operation.
   * @return logFieldBindDN
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The bind DN for a bind operation.")

  public String getLogFieldBindDN() {
    return logFieldBindDN;
  }


  public void setLogFieldBindDN(String logFieldBindDN) {
    
    
    
    this.logFieldBindDN = logFieldBindDN;
  }


  public AccessLogFieldMappingResponse logFieldMatchedDN(String logFieldMatchedDN) {
    
    
    
    
    this.logFieldMatchedDN = logFieldMatchedDN;
    return this;
  }

   /**
   * The DN of the superior entry closest to the DN specified by the client.
   * @return logFieldMatchedDN
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The DN of the superior entry closest to the DN specified by the client.")

  public String getLogFieldMatchedDN() {
    return logFieldMatchedDN;
  }


  public void setLogFieldMatchedDN(String logFieldMatchedDN) {
    
    
    
    this.logFieldMatchedDN = logFieldMatchedDN;
  }


  public AccessLogFieldMappingResponse logFieldRequesterIPAddress(String logFieldRequesterIPAddress) {
    
    
    
    
    this.logFieldRequesterIPAddress = logFieldRequesterIPAddress;
    return this;
  }

   /**
   * The IP address of the client that requested the operation.
   * @return logFieldRequesterIPAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The IP address of the client that requested the operation.")

  public String getLogFieldRequesterIPAddress() {
    return logFieldRequesterIPAddress;
  }


  public void setLogFieldRequesterIPAddress(String logFieldRequesterIPAddress) {
    
    
    
    this.logFieldRequesterIPAddress = logFieldRequesterIPAddress;
  }


  public AccessLogFieldMappingResponse logFieldAuthenticationType(String logFieldAuthenticationType) {
    
    
    
    
    this.logFieldAuthenticationType = logFieldAuthenticationType;
    return this;
  }

   /**
   * The type of authentication requested by the client.
   * @return logFieldAuthenticationType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The type of authentication requested by the client.")

  public String getLogFieldAuthenticationType() {
    return logFieldAuthenticationType;
  }


  public void setLogFieldAuthenticationType(String logFieldAuthenticationType) {
    
    
    
    this.logFieldAuthenticationType = logFieldAuthenticationType;
  }


  public AccessLogFieldMappingResponse logFieldNewSuperiorDN(String logFieldNewSuperiorDN) {
    
    
    
    
    this.logFieldNewSuperiorDN = logFieldNewSuperiorDN;
    return this;
  }

   /**
   * The new superior DN from a modify DN operation.
   * @return logFieldNewSuperiorDN
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The new superior DN from a modify DN operation.")

  public String getLogFieldNewSuperiorDN() {
    return logFieldNewSuperiorDN;
  }


  public void setLogFieldNewSuperiorDN(String logFieldNewSuperiorDN) {
    
    
    
    this.logFieldNewSuperiorDN = logFieldNewSuperiorDN;
  }


  public AccessLogFieldMappingResponse logFieldFilter(String logFieldFilter) {
    
    
    
    
    this.logFieldFilter = logFieldFilter;
    return this;
  }

   /**
   * The filter from a search operation.
   * @return logFieldFilter
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The filter from a search operation.")

  public String getLogFieldFilter() {
    return logFieldFilter;
  }


  public void setLogFieldFilter(String logFieldFilter) {
    
    
    
    this.logFieldFilter = logFieldFilter;
  }


  public AccessLogFieldMappingResponse logFieldAlternateAuthorizationDN(String logFieldAlternateAuthorizationDN) {
    
    
    
    
    this.logFieldAlternateAuthorizationDN = logFieldAlternateAuthorizationDN;
    return this;
  }

   /**
   * The DN of the alternate authorization identity used when processing the operation.
   * @return logFieldAlternateAuthorizationDN
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The DN of the alternate authorization identity used when processing the operation.")

  public String getLogFieldAlternateAuthorizationDN() {
    return logFieldAlternateAuthorizationDN;
  }


  public void setLogFieldAlternateAuthorizationDN(String logFieldAlternateAuthorizationDN) {
    
    
    
    this.logFieldAlternateAuthorizationDN = logFieldAlternateAuthorizationDN;
  }


  public AccessLogFieldMappingResponse logFieldEntryDN(String logFieldEntryDN) {
    
    
    
    
    this.logFieldEntryDN = logFieldEntryDN;
    return this;
  }

   /**
   * The DN of the entry targeted by the operation.
   * @return logFieldEntryDN
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The DN of the entry targeted by the operation.")

  public String getLogFieldEntryDN() {
    return logFieldEntryDN;
  }


  public void setLogFieldEntryDN(String logFieldEntryDN) {
    
    
    
    this.logFieldEntryDN = logFieldEntryDN;
  }


  public AccessLogFieldMappingResponse logFieldEntriesReturned(String logFieldEntriesReturned) {
    
    
    
    
    this.logFieldEntriesReturned = logFieldEntriesReturned;
    return this;
  }

   /**
   * The number of search result entries returned to the client.
   * @return logFieldEntriesReturned
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of search result entries returned to the client.")

  public String getLogFieldEntriesReturned() {
    return logFieldEntriesReturned;
  }


  public void setLogFieldEntriesReturned(String logFieldEntriesReturned) {
    
    
    
    this.logFieldEntriesReturned = logFieldEntriesReturned;
  }


  public AccessLogFieldMappingResponse logFieldAuthenticationFailureID(String logFieldAuthenticationFailureID) {
    
    
    
    
    this.logFieldAuthenticationFailureID = logFieldAuthenticationFailureID;
    return this;
  }

   /**
   * The numeric identifier for the authentication failure reason.
   * @return logFieldAuthenticationFailureID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The numeric identifier for the authentication failure reason.")

  public String getLogFieldAuthenticationFailureID() {
    return logFieldAuthenticationFailureID;
  }


  public void setLogFieldAuthenticationFailureID(String logFieldAuthenticationFailureID) {
    
    
    
    this.logFieldAuthenticationFailureID = logFieldAuthenticationFailureID;
  }


  public AccessLogFieldMappingResponse logFieldRequestOID(String logFieldRequestOID) {
    
    
    
    
    this.logFieldRequestOID = logFieldRequestOID;
    return this;
  }

   /**
   * The OID of an extended request.
   * @return logFieldRequestOID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The OID of an extended request.")

  public String getLogFieldRequestOID() {
    return logFieldRequestOID;
  }


  public void setLogFieldRequestOID(String logFieldRequestOID) {
    
    
    
    this.logFieldRequestOID = logFieldRequestOID;
  }


  public AccessLogFieldMappingResponse logFieldResponseOID(String logFieldResponseOID) {
    
    
    
    
    this.logFieldResponseOID = logFieldResponseOID;
    return this;
  }

   /**
   * The OID of an extended response.
   * @return logFieldResponseOID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The OID of an extended response.")

  public String getLogFieldResponseOID() {
    return logFieldResponseOID;
  }


  public void setLogFieldResponseOID(String logFieldResponseOID) {
    
    
    
    this.logFieldResponseOID = logFieldResponseOID;
  }


  public AccessLogFieldMappingResponse logFieldTargetProtocol(String logFieldTargetProtocol) {
    
    
    
    
    this.logFieldTargetProtocol = logFieldTargetProtocol;
    return this;
  }

   /**
   * The protocol used when forwarding the request to a backend server.
   * @return logFieldTargetProtocol
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The protocol used when forwarding the request to a backend server.")

  public String getLogFieldTargetProtocol() {
    return logFieldTargetProtocol;
  }


  public void setLogFieldTargetProtocol(String logFieldTargetProtocol) {
    
    
    
    this.logFieldTargetProtocol = logFieldTargetProtocol;
  }


  public AccessLogFieldMappingResponse logFieldTargetPort(String logFieldTargetPort) {
    
    
    
    
    this.logFieldTargetPort = logFieldTargetPort;
    return this;
  }

   /**
   * The network port of the Directory Server to which the client connection has been established, or of the backend server to which the request has been forwarded.
   * @return logFieldTargetPort
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The network port of the Directory Server to which the client connection has been established, or of the backend server to which the request has been forwarded.")

  public String getLogFieldTargetPort() {
    return logFieldTargetPort;
  }


  public void setLogFieldTargetPort(String logFieldTargetPort) {
    
    
    
    this.logFieldTargetPort = logFieldTargetPort;
  }


  public AccessLogFieldMappingResponse logFieldTargetAddress(String logFieldTargetAddress) {
    
    
    
    
    this.logFieldTargetAddress = logFieldTargetAddress;
    return this;
  }

   /**
   * The network address of the Directory Server to which the client connection has been established.
   * @return logFieldTargetAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The network address of the Directory Server to which the client connection has been established.")

  public String getLogFieldTargetAddress() {
    return logFieldTargetAddress;
  }


  public void setLogFieldTargetAddress(String logFieldTargetAddress) {
    
    
    
    this.logFieldTargetAddress = logFieldTargetAddress;
  }


  public AccessLogFieldMappingResponse logFieldTargetAttribute(String logFieldTargetAttribute) {
    
    
    
    
    this.logFieldTargetAttribute = logFieldTargetAttribute;
    return this;
  }

   /**
   * The name of the attribute targeted by a compare operation.
   * @return logFieldTargetAttribute
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the attribute targeted by a compare operation.")

  public String getLogFieldTargetAttribute() {
    return logFieldTargetAttribute;
  }


  public void setLogFieldTargetAttribute(String logFieldTargetAttribute) {
    
    
    
    this.logFieldTargetAttribute = logFieldTargetAttribute;
  }


  public AccessLogFieldMappingResponse logFieldTargetHost(String logFieldTargetHost) {
    
    
    
    
    this.logFieldTargetHost = logFieldTargetHost;
    return this;
  }

   /**
   * The address of the server to which the request has been forwarded.
   * @return logFieldTargetHost
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The address of the server to which the request has been forwarded.")

  public String getLogFieldTargetHost() {
    return logFieldTargetHost;
  }


  public void setLogFieldTargetHost(String logFieldTargetHost) {
    
    
    
    this.logFieldTargetHost = logFieldTargetHost;
  }


  public AccessLogFieldMappingResponse logFieldProtocolVersion(String logFieldProtocolVersion) {
    
    
    
    
    this.logFieldProtocolVersion = logFieldProtocolVersion;
    return this;
  }

   /**
   * The protocol version used by the client when communicating with the Directory Server.
   * @return logFieldProtocolVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The protocol version used by the client when communicating with the Directory Server.")

  public String getLogFieldProtocolVersion() {
    return logFieldProtocolVersion;
  }


  public void setLogFieldProtocolVersion(String logFieldProtocolVersion) {
    
    
    
    this.logFieldProtocolVersion = logFieldProtocolVersion;
  }


  public AccessLogFieldMappingResponse logFieldProtocolName(String logFieldProtocolName) {
    
    
    
    
    this.logFieldProtocolName = logFieldProtocolName;
    return this;
  }

   /**
   * The name of the protocol the client is using to communicate with the Directory Server.
   * @return logFieldProtocolName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the protocol the client is using to communicate with the Directory Server.")

  public String getLogFieldProtocolName() {
    return logFieldProtocolName;
  }


  public void setLogFieldProtocolName(String logFieldProtocolName) {
    
    
    
    this.logFieldProtocolName = logFieldProtocolName;
  }


  public AccessLogFieldMappingResponse logFieldAuthenticationFailureReason(String logFieldAuthenticationFailureReason) {
    
    
    
    
    this.logFieldAuthenticationFailureReason = logFieldAuthenticationFailureReason;
    return this;
  }

   /**
   * A message explaining the reason that the authentication attempt failed.
   * @return logFieldAuthenticationFailureReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A message explaining the reason that the authentication attempt failed.")

  public String getLogFieldAuthenticationFailureReason() {
    return logFieldAuthenticationFailureReason;
  }


  public void setLogFieldAuthenticationFailureReason(String logFieldAuthenticationFailureReason) {
    
    
    
    this.logFieldAuthenticationFailureReason = logFieldAuthenticationFailureReason;
  }


  public AccessLogFieldMappingResponse logFieldAdditionalInformation(String logFieldAdditionalInformation) {
    
    
    
    
    this.logFieldAdditionalInformation = logFieldAdditionalInformation;
    return this;
  }

   /**
   * Additional information about the operation that was processed which was not returned to the client.
   * @return logFieldAdditionalInformation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Additional information about the operation that was processed which was not returned to the client.")

  public String getLogFieldAdditionalInformation() {
    return logFieldAdditionalInformation;
  }


  public void setLogFieldAdditionalInformation(String logFieldAdditionalInformation) {
    
    
    
    this.logFieldAdditionalInformation = logFieldAdditionalInformation;
  }


  public AccessLogFieldMappingResponse logFieldUnindexed(String logFieldUnindexed) {
    
    
    
    
    this.logFieldUnindexed = logFieldUnindexed;
    return this;
  }

   /**
   * Indicates whether the requested search operation was unindexed.
   * @return logFieldUnindexed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether the requested search operation was unindexed.")

  public String getLogFieldUnindexed() {
    return logFieldUnindexed;
  }


  public void setLogFieldUnindexed(String logFieldUnindexed) {
    
    
    
    this.logFieldUnindexed = logFieldUnindexed;
  }


  public AccessLogFieldMappingResponse logFieldScope(String logFieldScope) {
    
    
    
    
    this.logFieldScope = logFieldScope;
    return this;
  }

   /**
   * The scope for the search operation.
   * @return logFieldScope
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The scope for the search operation.")

  public String getLogFieldScope() {
    return logFieldScope;
  }


  public void setLogFieldScope(String logFieldScope) {
    
    
    
    this.logFieldScope = logFieldScope;
  }


  public AccessLogFieldMappingResponse logFieldReferralUrls(String logFieldReferralUrls) {
    
    
    
    
    this.logFieldReferralUrls = logFieldReferralUrls;
    return this;
  }

   /**
   * The referral URLs returned to the client.
   * @return logFieldReferralUrls
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The referral URLs returned to the client.")

  public String getLogFieldReferralUrls() {
    return logFieldReferralUrls;
  }


  public void setLogFieldReferralUrls(String logFieldReferralUrls) {
    
    
    
    this.logFieldReferralUrls = logFieldReferralUrls;
  }


  public AccessLogFieldMappingResponse logFieldSourceAddress(String logFieldSourceAddress) {
    
    
    
    
    this.logFieldSourceAddress = logFieldSourceAddress;
    return this;
  }

   /**
   * The address of the client from which the connection was established.
   * @return logFieldSourceAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The address of the client from which the connection was established.")

  public String getLogFieldSourceAddress() {
    return logFieldSourceAddress;
  }


  public void setLogFieldSourceAddress(String logFieldSourceAddress) {
    
    
    
    this.logFieldSourceAddress = logFieldSourceAddress;
  }


  public AccessLogFieldMappingResponse logFieldMessageIDToAbandon(String logFieldMessageIDToAbandon) {
    
    
    
    
    this.logFieldMessageIDToAbandon = logFieldMessageIDToAbandon;
    return this;
  }

   /**
   * The message ID of the operation to be abandoned.
   * @return logFieldMessageIDToAbandon
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The message ID of the operation to be abandoned.")

  public String getLogFieldMessageIDToAbandon() {
    return logFieldMessageIDToAbandon;
  }


  public void setLogFieldMessageIDToAbandon(String logFieldMessageIDToAbandon) {
    
    
    
    this.logFieldMessageIDToAbandon = logFieldMessageIDToAbandon;
  }


  public AccessLogFieldMappingResponse logFieldResponseControls(String logFieldResponseControls) {
    
    
    
    
    this.logFieldResponseControls = logFieldResponseControls;
    return this;
  }

   /**
   * The OIDs of the response controls returned to the client.
   * @return logFieldResponseControls
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The OIDs of the response controls returned to the client.")

  public String getLogFieldResponseControls() {
    return logFieldResponseControls;
  }


  public void setLogFieldResponseControls(String logFieldResponseControls) {
    
    
    
    this.logFieldResponseControls = logFieldResponseControls;
  }


  public AccessLogFieldMappingResponse logFieldRequestControls(String logFieldRequestControls) {
    
    
    
    
    this.logFieldRequestControls = logFieldRequestControls;
    return this;
  }

   /**
   * The OIDs of the request controls returned to the client.
   * @return logFieldRequestControls
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The OIDs of the request controls returned to the client.")

  public String getLogFieldRequestControls() {
    return logFieldRequestControls;
  }


  public void setLogFieldRequestControls(String logFieldRequestControls) {
    
    
    
    this.logFieldRequestControls = logFieldRequestControls;
  }


  public AccessLogFieldMappingResponse logFieldIntermediateClientResult(String logFieldIntermediateClientResult) {
    
    
    
    
    this.logFieldIntermediateClientResult = logFieldIntermediateClientResult;
    return this;
  }

   /**
   * The contents of the intermediate client response control returned to the client.
   * @return logFieldIntermediateClientResult
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The contents of the intermediate client response control returned to the client.")

  public String getLogFieldIntermediateClientResult() {
    return logFieldIntermediateClientResult;
  }


  public void setLogFieldIntermediateClientResult(String logFieldIntermediateClientResult) {
    
    
    
    this.logFieldIntermediateClientResult = logFieldIntermediateClientResult;
  }


  public AccessLogFieldMappingResponse logFieldIntermediateClientRequest(String logFieldIntermediateClientRequest) {
    
    
    
    
    this.logFieldIntermediateClientRequest = logFieldIntermediateClientRequest;
    return this;
  }

   /**
   * The contents of the intermediate client request control provided by the client.
   * @return logFieldIntermediateClientRequest
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The contents of the intermediate client request control provided by the client.")

  public String getLogFieldIntermediateClientRequest() {
    return logFieldIntermediateClientRequest;
  }


  public void setLogFieldIntermediateClientRequest(String logFieldIntermediateClientRequest) {
    
    
    
    this.logFieldIntermediateClientRequest = logFieldIntermediateClientRequest;
  }


  public AccessLogFieldMappingResponse logFieldReplicationChangeID(String logFieldReplicationChangeID) {
    
    
    
    
    this.logFieldReplicationChangeID = logFieldReplicationChangeID;
    return this;
  }

   /**
   * The replication change ID.
   * @return logFieldReplicationChangeID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The replication change ID.")

  public String getLogFieldReplicationChangeID() {
    return logFieldReplicationChangeID;
  }


  public void setLogFieldReplicationChangeID(String logFieldReplicationChangeID) {
    
    
    
    this.logFieldReplicationChangeID = logFieldReplicationChangeID;
  }


  public AccessLogFieldMappingResponse meta(MetaMeta meta) {
    
    
    
    
    this.meta = meta;
    return this;
  }

   /**
   * Get meta
   * @return meta
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public MetaMeta getMeta() {
    return meta;
  }


  public void setMeta(MetaMeta meta) {
    
    
    
    this.meta = meta;
  }


  public AccessLogFieldMappingResponse urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20(MetaUrnPingidentitySchemasConfigurationMessages20 urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20) {
    
    
    
    
    this.urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20 = urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20;
    return this;
  }

   /**
   * Get urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20
   * @return urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public MetaUrnPingidentitySchemasConfigurationMessages20 getUrnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20() {
    return urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20;
  }


  public void setUrnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20(MetaUrnPingidentitySchemasConfigurationMessages20 urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20) {
    
    
    
    this.urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20 = urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the AccessLogFieldMappingResponse instance itself
   */
  public AccessLogFieldMappingResponse putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccessLogFieldMappingResponse accessLogFieldMappingResponse = (AccessLogFieldMappingResponse) o;
    return Objects.equals(this.id, accessLogFieldMappingResponse.id) &&
        Objects.equals(this.description, accessLogFieldMappingResponse.description) &&
        Objects.equals(this.schemas, accessLogFieldMappingResponse.schemas) &&
        Objects.equals(this.logFieldTimestamp, accessLogFieldMappingResponse.logFieldTimestamp) &&
        Objects.equals(this.logFieldConnectionID, accessLogFieldMappingResponse.logFieldConnectionID) &&
        Objects.equals(this.logFieldStartupid, accessLogFieldMappingResponse.logFieldStartupid) &&
        Objects.equals(this.logFieldProductName, accessLogFieldMappingResponse.logFieldProductName) &&
        Objects.equals(this.logFieldInstanceName, accessLogFieldMappingResponse.logFieldInstanceName) &&
        Objects.equals(this.logFieldOperationID, accessLogFieldMappingResponse.logFieldOperationID) &&
        Objects.equals(this.logFieldMessageType, accessLogFieldMappingResponse.logFieldMessageType) &&
        Objects.equals(this.logFieldOperationType, accessLogFieldMappingResponse.logFieldOperationType) &&
        Objects.equals(this.logFieldMessageID, accessLogFieldMappingResponse.logFieldMessageID) &&
        Objects.equals(this.logFieldResultCode, accessLogFieldMappingResponse.logFieldResultCode) &&
        Objects.equals(this.logFieldMessage, accessLogFieldMappingResponse.logFieldMessage) &&
        Objects.equals(this.logFieldOrigin, accessLogFieldMappingResponse.logFieldOrigin) &&
        Objects.equals(this.logFieldRequesterDN, accessLogFieldMappingResponse.logFieldRequesterDN) &&
        Objects.equals(this.logFieldDisconnectReason, accessLogFieldMappingResponse.logFieldDisconnectReason) &&
        Objects.equals(this.logFieldDeleteOldRDN, accessLogFieldMappingResponse.logFieldDeleteOldRDN) &&
        Objects.equals(this.logFieldAuthenticatedUserDN, accessLogFieldMappingResponse.logFieldAuthenticatedUserDN) &&
        Objects.equals(this.logFieldProcessingTime, accessLogFieldMappingResponse.logFieldProcessingTime) &&
        Objects.equals(this.logFieldRequestedAttributes, accessLogFieldMappingResponse.logFieldRequestedAttributes) &&
        Objects.equals(this.logFieldSASLMechanismName, accessLogFieldMappingResponse.logFieldSASLMechanismName) &&
        Objects.equals(this.logFieldNewRDN, accessLogFieldMappingResponse.logFieldNewRDN) &&
        Objects.equals(this.logFieldBaseDN, accessLogFieldMappingResponse.logFieldBaseDN) &&
        Objects.equals(this.logFieldBindDN, accessLogFieldMappingResponse.logFieldBindDN) &&
        Objects.equals(this.logFieldMatchedDN, accessLogFieldMappingResponse.logFieldMatchedDN) &&
        Objects.equals(this.logFieldRequesterIPAddress, accessLogFieldMappingResponse.logFieldRequesterIPAddress) &&
        Objects.equals(this.logFieldAuthenticationType, accessLogFieldMappingResponse.logFieldAuthenticationType) &&
        Objects.equals(this.logFieldNewSuperiorDN, accessLogFieldMappingResponse.logFieldNewSuperiorDN) &&
        Objects.equals(this.logFieldFilter, accessLogFieldMappingResponse.logFieldFilter) &&
        Objects.equals(this.logFieldAlternateAuthorizationDN, accessLogFieldMappingResponse.logFieldAlternateAuthorizationDN) &&
        Objects.equals(this.logFieldEntryDN, accessLogFieldMappingResponse.logFieldEntryDN) &&
        Objects.equals(this.logFieldEntriesReturned, accessLogFieldMappingResponse.logFieldEntriesReturned) &&
        Objects.equals(this.logFieldAuthenticationFailureID, accessLogFieldMappingResponse.logFieldAuthenticationFailureID) &&
        Objects.equals(this.logFieldRequestOID, accessLogFieldMappingResponse.logFieldRequestOID) &&
        Objects.equals(this.logFieldResponseOID, accessLogFieldMappingResponse.logFieldResponseOID) &&
        Objects.equals(this.logFieldTargetProtocol, accessLogFieldMappingResponse.logFieldTargetProtocol) &&
        Objects.equals(this.logFieldTargetPort, accessLogFieldMappingResponse.logFieldTargetPort) &&
        Objects.equals(this.logFieldTargetAddress, accessLogFieldMappingResponse.logFieldTargetAddress) &&
        Objects.equals(this.logFieldTargetAttribute, accessLogFieldMappingResponse.logFieldTargetAttribute) &&
        Objects.equals(this.logFieldTargetHost, accessLogFieldMappingResponse.logFieldTargetHost) &&
        Objects.equals(this.logFieldProtocolVersion, accessLogFieldMappingResponse.logFieldProtocolVersion) &&
        Objects.equals(this.logFieldProtocolName, accessLogFieldMappingResponse.logFieldProtocolName) &&
        Objects.equals(this.logFieldAuthenticationFailureReason, accessLogFieldMappingResponse.logFieldAuthenticationFailureReason) &&
        Objects.equals(this.logFieldAdditionalInformation, accessLogFieldMappingResponse.logFieldAdditionalInformation) &&
        Objects.equals(this.logFieldUnindexed, accessLogFieldMappingResponse.logFieldUnindexed) &&
        Objects.equals(this.logFieldScope, accessLogFieldMappingResponse.logFieldScope) &&
        Objects.equals(this.logFieldReferralUrls, accessLogFieldMappingResponse.logFieldReferralUrls) &&
        Objects.equals(this.logFieldSourceAddress, accessLogFieldMappingResponse.logFieldSourceAddress) &&
        Objects.equals(this.logFieldMessageIDToAbandon, accessLogFieldMappingResponse.logFieldMessageIDToAbandon) &&
        Objects.equals(this.logFieldResponseControls, accessLogFieldMappingResponse.logFieldResponseControls) &&
        Objects.equals(this.logFieldRequestControls, accessLogFieldMappingResponse.logFieldRequestControls) &&
        Objects.equals(this.logFieldIntermediateClientResult, accessLogFieldMappingResponse.logFieldIntermediateClientResult) &&
        Objects.equals(this.logFieldIntermediateClientRequest, accessLogFieldMappingResponse.logFieldIntermediateClientRequest) &&
        Objects.equals(this.logFieldReplicationChangeID, accessLogFieldMappingResponse.logFieldReplicationChangeID) &&
        Objects.equals(this.meta, accessLogFieldMappingResponse.meta) &&
        Objects.equals(this.urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20, accessLogFieldMappingResponse.urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20)&&
        Objects.equals(this.additionalProperties, accessLogFieldMappingResponse.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, description, schemas, logFieldTimestamp, logFieldConnectionID, logFieldStartupid, logFieldProductName, logFieldInstanceName, logFieldOperationID, logFieldMessageType, logFieldOperationType, logFieldMessageID, logFieldResultCode, logFieldMessage, logFieldOrigin, logFieldRequesterDN, logFieldDisconnectReason, logFieldDeleteOldRDN, logFieldAuthenticatedUserDN, logFieldProcessingTime, logFieldRequestedAttributes, logFieldSASLMechanismName, logFieldNewRDN, logFieldBaseDN, logFieldBindDN, logFieldMatchedDN, logFieldRequesterIPAddress, logFieldAuthenticationType, logFieldNewSuperiorDN, logFieldFilter, logFieldAlternateAuthorizationDN, logFieldEntryDN, logFieldEntriesReturned, logFieldAuthenticationFailureID, logFieldRequestOID, logFieldResponseOID, logFieldTargetProtocol, logFieldTargetPort, logFieldTargetAddress, logFieldTargetAttribute, logFieldTargetHost, logFieldProtocolVersion, logFieldProtocolName, logFieldAuthenticationFailureReason, logFieldAdditionalInformation, logFieldUnindexed, logFieldScope, logFieldReferralUrls, logFieldSourceAddress, logFieldMessageIDToAbandon, logFieldResponseControls, logFieldRequestControls, logFieldIntermediateClientResult, logFieldIntermediateClientRequest, logFieldReplicationChangeID, meta, urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccessLogFieldMappingResponse {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    schemas: ").append(toIndentedString(schemas)).append("\n");
    sb.append("    logFieldTimestamp: ").append(toIndentedString(logFieldTimestamp)).append("\n");
    sb.append("    logFieldConnectionID: ").append(toIndentedString(logFieldConnectionID)).append("\n");
    sb.append("    logFieldStartupid: ").append(toIndentedString(logFieldStartupid)).append("\n");
    sb.append("    logFieldProductName: ").append(toIndentedString(logFieldProductName)).append("\n");
    sb.append("    logFieldInstanceName: ").append(toIndentedString(logFieldInstanceName)).append("\n");
    sb.append("    logFieldOperationID: ").append(toIndentedString(logFieldOperationID)).append("\n");
    sb.append("    logFieldMessageType: ").append(toIndentedString(logFieldMessageType)).append("\n");
    sb.append("    logFieldOperationType: ").append(toIndentedString(logFieldOperationType)).append("\n");
    sb.append("    logFieldMessageID: ").append(toIndentedString(logFieldMessageID)).append("\n");
    sb.append("    logFieldResultCode: ").append(toIndentedString(logFieldResultCode)).append("\n");
    sb.append("    logFieldMessage: ").append(toIndentedString(logFieldMessage)).append("\n");
    sb.append("    logFieldOrigin: ").append(toIndentedString(logFieldOrigin)).append("\n");
    sb.append("    logFieldRequesterDN: ").append(toIndentedString(logFieldRequesterDN)).append("\n");
    sb.append("    logFieldDisconnectReason: ").append(toIndentedString(logFieldDisconnectReason)).append("\n");
    sb.append("    logFieldDeleteOldRDN: ").append(toIndentedString(logFieldDeleteOldRDN)).append("\n");
    sb.append("    logFieldAuthenticatedUserDN: ").append(toIndentedString(logFieldAuthenticatedUserDN)).append("\n");
    sb.append("    logFieldProcessingTime: ").append(toIndentedString(logFieldProcessingTime)).append("\n");
    sb.append("    logFieldRequestedAttributes: ").append(toIndentedString(logFieldRequestedAttributes)).append("\n");
    sb.append("    logFieldSASLMechanismName: ").append(toIndentedString(logFieldSASLMechanismName)).append("\n");
    sb.append("    logFieldNewRDN: ").append(toIndentedString(logFieldNewRDN)).append("\n");
    sb.append("    logFieldBaseDN: ").append(toIndentedString(logFieldBaseDN)).append("\n");
    sb.append("    logFieldBindDN: ").append(toIndentedString(logFieldBindDN)).append("\n");
    sb.append("    logFieldMatchedDN: ").append(toIndentedString(logFieldMatchedDN)).append("\n");
    sb.append("    logFieldRequesterIPAddress: ").append(toIndentedString(logFieldRequesterIPAddress)).append("\n");
    sb.append("    logFieldAuthenticationType: ").append(toIndentedString(logFieldAuthenticationType)).append("\n");
    sb.append("    logFieldNewSuperiorDN: ").append(toIndentedString(logFieldNewSuperiorDN)).append("\n");
    sb.append("    logFieldFilter: ").append(toIndentedString(logFieldFilter)).append("\n");
    sb.append("    logFieldAlternateAuthorizationDN: ").append(toIndentedString(logFieldAlternateAuthorizationDN)).append("\n");
    sb.append("    logFieldEntryDN: ").append(toIndentedString(logFieldEntryDN)).append("\n");
    sb.append("    logFieldEntriesReturned: ").append(toIndentedString(logFieldEntriesReturned)).append("\n");
    sb.append("    logFieldAuthenticationFailureID: ").append(toIndentedString(logFieldAuthenticationFailureID)).append("\n");
    sb.append("    logFieldRequestOID: ").append(toIndentedString(logFieldRequestOID)).append("\n");
    sb.append("    logFieldResponseOID: ").append(toIndentedString(logFieldResponseOID)).append("\n");
    sb.append("    logFieldTargetProtocol: ").append(toIndentedString(logFieldTargetProtocol)).append("\n");
    sb.append("    logFieldTargetPort: ").append(toIndentedString(logFieldTargetPort)).append("\n");
    sb.append("    logFieldTargetAddress: ").append(toIndentedString(logFieldTargetAddress)).append("\n");
    sb.append("    logFieldTargetAttribute: ").append(toIndentedString(logFieldTargetAttribute)).append("\n");
    sb.append("    logFieldTargetHost: ").append(toIndentedString(logFieldTargetHost)).append("\n");
    sb.append("    logFieldProtocolVersion: ").append(toIndentedString(logFieldProtocolVersion)).append("\n");
    sb.append("    logFieldProtocolName: ").append(toIndentedString(logFieldProtocolName)).append("\n");
    sb.append("    logFieldAuthenticationFailureReason: ").append(toIndentedString(logFieldAuthenticationFailureReason)).append("\n");
    sb.append("    logFieldAdditionalInformation: ").append(toIndentedString(logFieldAdditionalInformation)).append("\n");
    sb.append("    logFieldUnindexed: ").append(toIndentedString(logFieldUnindexed)).append("\n");
    sb.append("    logFieldScope: ").append(toIndentedString(logFieldScope)).append("\n");
    sb.append("    logFieldReferralUrls: ").append(toIndentedString(logFieldReferralUrls)).append("\n");
    sb.append("    logFieldSourceAddress: ").append(toIndentedString(logFieldSourceAddress)).append("\n");
    sb.append("    logFieldMessageIDToAbandon: ").append(toIndentedString(logFieldMessageIDToAbandon)).append("\n");
    sb.append("    logFieldResponseControls: ").append(toIndentedString(logFieldResponseControls)).append("\n");
    sb.append("    logFieldRequestControls: ").append(toIndentedString(logFieldRequestControls)).append("\n");
    sb.append("    logFieldIntermediateClientResult: ").append(toIndentedString(logFieldIntermediateClientResult)).append("\n");
    sb.append("    logFieldIntermediateClientRequest: ").append(toIndentedString(logFieldIntermediateClientRequest)).append("\n");
    sb.append("    logFieldReplicationChangeID: ").append(toIndentedString(logFieldReplicationChangeID)).append("\n");
    sb.append("    meta: ").append(toIndentedString(meta)).append("\n");
    sb.append("    urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20: ").append(toIndentedString(urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("description");
    openapiFields.add("schemas");
    openapiFields.add("logFieldTimestamp");
    openapiFields.add("logFieldConnectionID");
    openapiFields.add("logFieldStartupid");
    openapiFields.add("logFieldProductName");
    openapiFields.add("logFieldInstanceName");
    openapiFields.add("logFieldOperationID");
    openapiFields.add("logFieldMessageType");
    openapiFields.add("logFieldOperationType");
    openapiFields.add("logFieldMessageID");
    openapiFields.add("logFieldResultCode");
    openapiFields.add("logFieldMessage");
    openapiFields.add("logFieldOrigin");
    openapiFields.add("logFieldRequesterDN");
    openapiFields.add("logFieldDisconnectReason");
    openapiFields.add("logFieldDeleteOldRDN");
    openapiFields.add("logFieldAuthenticatedUserDN");
    openapiFields.add("logFieldProcessingTime");
    openapiFields.add("logFieldRequestedAttributes");
    openapiFields.add("logFieldSASLMechanismName");
    openapiFields.add("logFieldNewRDN");
    openapiFields.add("logFieldBaseDN");
    openapiFields.add("logFieldBindDN");
    openapiFields.add("logFieldMatchedDN");
    openapiFields.add("logFieldRequesterIPAddress");
    openapiFields.add("logFieldAuthenticationType");
    openapiFields.add("logFieldNewSuperiorDN");
    openapiFields.add("logFieldFilter");
    openapiFields.add("logFieldAlternateAuthorizationDN");
    openapiFields.add("logFieldEntryDN");
    openapiFields.add("logFieldEntriesReturned");
    openapiFields.add("logFieldAuthenticationFailureID");
    openapiFields.add("logFieldRequestOID");
    openapiFields.add("logFieldResponseOID");
    openapiFields.add("logFieldTargetProtocol");
    openapiFields.add("logFieldTargetPort");
    openapiFields.add("logFieldTargetAddress");
    openapiFields.add("logFieldTargetAttribute");
    openapiFields.add("logFieldTargetHost");
    openapiFields.add("logFieldProtocolVersion");
    openapiFields.add("logFieldProtocolName");
    openapiFields.add("logFieldAuthenticationFailureReason");
    openapiFields.add("logFieldAdditionalInformation");
    openapiFields.add("logFieldUnindexed");
    openapiFields.add("logFieldScope");
    openapiFields.add("logFieldReferralUrls");
    openapiFields.add("logFieldSourceAddress");
    openapiFields.add("logFieldMessageIDToAbandon");
    openapiFields.add("logFieldResponseControls");
    openapiFields.add("logFieldRequestControls");
    openapiFields.add("logFieldIntermediateClientResult");
    openapiFields.add("logFieldIntermediateClientRequest");
    openapiFields.add("logFieldReplicationChangeID");
    openapiFields.add("meta");
    openapiFields.add("urn:pingidentity:schemas:configuration:messages:2.0");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("schemas");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to AccessLogFieldMappingResponse
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!AccessLogFieldMappingResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AccessLogFieldMappingResponse is not found in the empty JSON string", AccessLogFieldMappingResponse.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : AccessLogFieldMappingResponse.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("schemas") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("schemas").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `schemas` to be an array in the JSON string but got `%s`", jsonObj.get("schemas").toString()));
      }
      if ((jsonObj.get("logFieldTimestamp") != null && !jsonObj.get("logFieldTimestamp").isJsonNull()) && !jsonObj.get("logFieldTimestamp").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logFieldTimestamp` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logFieldTimestamp").toString()));
      }
      if ((jsonObj.get("logFieldConnectionID") != null && !jsonObj.get("logFieldConnectionID").isJsonNull()) && !jsonObj.get("logFieldConnectionID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logFieldConnectionID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logFieldConnectionID").toString()));
      }
      if ((jsonObj.get("logFieldStartupid") != null && !jsonObj.get("logFieldStartupid").isJsonNull()) && !jsonObj.get("logFieldStartupid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logFieldStartupid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logFieldStartupid").toString()));
      }
      if ((jsonObj.get("logFieldProductName") != null && !jsonObj.get("logFieldProductName").isJsonNull()) && !jsonObj.get("logFieldProductName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logFieldProductName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logFieldProductName").toString()));
      }
      if ((jsonObj.get("logFieldInstanceName") != null && !jsonObj.get("logFieldInstanceName").isJsonNull()) && !jsonObj.get("logFieldInstanceName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logFieldInstanceName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logFieldInstanceName").toString()));
      }
      if ((jsonObj.get("logFieldOperationID") != null && !jsonObj.get("logFieldOperationID").isJsonNull()) && !jsonObj.get("logFieldOperationID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logFieldOperationID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logFieldOperationID").toString()));
      }
      if ((jsonObj.get("logFieldMessageType") != null && !jsonObj.get("logFieldMessageType").isJsonNull()) && !jsonObj.get("logFieldMessageType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logFieldMessageType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logFieldMessageType").toString()));
      }
      if ((jsonObj.get("logFieldOperationType") != null && !jsonObj.get("logFieldOperationType").isJsonNull()) && !jsonObj.get("logFieldOperationType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logFieldOperationType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logFieldOperationType").toString()));
      }
      if ((jsonObj.get("logFieldMessageID") != null && !jsonObj.get("logFieldMessageID").isJsonNull()) && !jsonObj.get("logFieldMessageID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logFieldMessageID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logFieldMessageID").toString()));
      }
      if ((jsonObj.get("logFieldResultCode") != null && !jsonObj.get("logFieldResultCode").isJsonNull()) && !jsonObj.get("logFieldResultCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logFieldResultCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logFieldResultCode").toString()));
      }
      if ((jsonObj.get("logFieldMessage") != null && !jsonObj.get("logFieldMessage").isJsonNull()) && !jsonObj.get("logFieldMessage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logFieldMessage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logFieldMessage").toString()));
      }
      if ((jsonObj.get("logFieldOrigin") != null && !jsonObj.get("logFieldOrigin").isJsonNull()) && !jsonObj.get("logFieldOrigin").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logFieldOrigin` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logFieldOrigin").toString()));
      }
      if ((jsonObj.get("logFieldRequesterDN") != null && !jsonObj.get("logFieldRequesterDN").isJsonNull()) && !jsonObj.get("logFieldRequesterDN").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logFieldRequesterDN` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logFieldRequesterDN").toString()));
      }
      if ((jsonObj.get("logFieldDisconnectReason") != null && !jsonObj.get("logFieldDisconnectReason").isJsonNull()) && !jsonObj.get("logFieldDisconnectReason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logFieldDisconnectReason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logFieldDisconnectReason").toString()));
      }
      if ((jsonObj.get("logFieldDeleteOldRDN") != null && !jsonObj.get("logFieldDeleteOldRDN").isJsonNull()) && !jsonObj.get("logFieldDeleteOldRDN").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logFieldDeleteOldRDN` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logFieldDeleteOldRDN").toString()));
      }
      if ((jsonObj.get("logFieldAuthenticatedUserDN") != null && !jsonObj.get("logFieldAuthenticatedUserDN").isJsonNull()) && !jsonObj.get("logFieldAuthenticatedUserDN").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logFieldAuthenticatedUserDN` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logFieldAuthenticatedUserDN").toString()));
      }
      if ((jsonObj.get("logFieldProcessingTime") != null && !jsonObj.get("logFieldProcessingTime").isJsonNull()) && !jsonObj.get("logFieldProcessingTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logFieldProcessingTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logFieldProcessingTime").toString()));
      }
      if ((jsonObj.get("logFieldRequestedAttributes") != null && !jsonObj.get("logFieldRequestedAttributes").isJsonNull()) && !jsonObj.get("logFieldRequestedAttributes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logFieldRequestedAttributes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logFieldRequestedAttributes").toString()));
      }
      if ((jsonObj.get("logFieldSASLMechanismName") != null && !jsonObj.get("logFieldSASLMechanismName").isJsonNull()) && !jsonObj.get("logFieldSASLMechanismName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logFieldSASLMechanismName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logFieldSASLMechanismName").toString()));
      }
      if ((jsonObj.get("logFieldNewRDN") != null && !jsonObj.get("logFieldNewRDN").isJsonNull()) && !jsonObj.get("logFieldNewRDN").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logFieldNewRDN` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logFieldNewRDN").toString()));
      }
      if ((jsonObj.get("logFieldBaseDN") != null && !jsonObj.get("logFieldBaseDN").isJsonNull()) && !jsonObj.get("logFieldBaseDN").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logFieldBaseDN` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logFieldBaseDN").toString()));
      }
      if ((jsonObj.get("logFieldBindDN") != null && !jsonObj.get("logFieldBindDN").isJsonNull()) && !jsonObj.get("logFieldBindDN").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logFieldBindDN` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logFieldBindDN").toString()));
      }
      if ((jsonObj.get("logFieldMatchedDN") != null && !jsonObj.get("logFieldMatchedDN").isJsonNull()) && !jsonObj.get("logFieldMatchedDN").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logFieldMatchedDN` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logFieldMatchedDN").toString()));
      }
      if ((jsonObj.get("logFieldRequesterIPAddress") != null && !jsonObj.get("logFieldRequesterIPAddress").isJsonNull()) && !jsonObj.get("logFieldRequesterIPAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logFieldRequesterIPAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logFieldRequesterIPAddress").toString()));
      }
      if ((jsonObj.get("logFieldAuthenticationType") != null && !jsonObj.get("logFieldAuthenticationType").isJsonNull()) && !jsonObj.get("logFieldAuthenticationType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logFieldAuthenticationType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logFieldAuthenticationType").toString()));
      }
      if ((jsonObj.get("logFieldNewSuperiorDN") != null && !jsonObj.get("logFieldNewSuperiorDN").isJsonNull()) && !jsonObj.get("logFieldNewSuperiorDN").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logFieldNewSuperiorDN` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logFieldNewSuperiorDN").toString()));
      }
      if ((jsonObj.get("logFieldFilter") != null && !jsonObj.get("logFieldFilter").isJsonNull()) && !jsonObj.get("logFieldFilter").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logFieldFilter` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logFieldFilter").toString()));
      }
      if ((jsonObj.get("logFieldAlternateAuthorizationDN") != null && !jsonObj.get("logFieldAlternateAuthorizationDN").isJsonNull()) && !jsonObj.get("logFieldAlternateAuthorizationDN").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logFieldAlternateAuthorizationDN` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logFieldAlternateAuthorizationDN").toString()));
      }
      if ((jsonObj.get("logFieldEntryDN") != null && !jsonObj.get("logFieldEntryDN").isJsonNull()) && !jsonObj.get("logFieldEntryDN").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logFieldEntryDN` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logFieldEntryDN").toString()));
      }
      if ((jsonObj.get("logFieldEntriesReturned") != null && !jsonObj.get("logFieldEntriesReturned").isJsonNull()) && !jsonObj.get("logFieldEntriesReturned").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logFieldEntriesReturned` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logFieldEntriesReturned").toString()));
      }
      if ((jsonObj.get("logFieldAuthenticationFailureID") != null && !jsonObj.get("logFieldAuthenticationFailureID").isJsonNull()) && !jsonObj.get("logFieldAuthenticationFailureID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logFieldAuthenticationFailureID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logFieldAuthenticationFailureID").toString()));
      }
      if ((jsonObj.get("logFieldRequestOID") != null && !jsonObj.get("logFieldRequestOID").isJsonNull()) && !jsonObj.get("logFieldRequestOID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logFieldRequestOID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logFieldRequestOID").toString()));
      }
      if ((jsonObj.get("logFieldResponseOID") != null && !jsonObj.get("logFieldResponseOID").isJsonNull()) && !jsonObj.get("logFieldResponseOID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logFieldResponseOID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logFieldResponseOID").toString()));
      }
      if ((jsonObj.get("logFieldTargetProtocol") != null && !jsonObj.get("logFieldTargetProtocol").isJsonNull()) && !jsonObj.get("logFieldTargetProtocol").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logFieldTargetProtocol` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logFieldTargetProtocol").toString()));
      }
      if ((jsonObj.get("logFieldTargetPort") != null && !jsonObj.get("logFieldTargetPort").isJsonNull()) && !jsonObj.get("logFieldTargetPort").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logFieldTargetPort` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logFieldTargetPort").toString()));
      }
      if ((jsonObj.get("logFieldTargetAddress") != null && !jsonObj.get("logFieldTargetAddress").isJsonNull()) && !jsonObj.get("logFieldTargetAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logFieldTargetAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logFieldTargetAddress").toString()));
      }
      if ((jsonObj.get("logFieldTargetAttribute") != null && !jsonObj.get("logFieldTargetAttribute").isJsonNull()) && !jsonObj.get("logFieldTargetAttribute").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logFieldTargetAttribute` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logFieldTargetAttribute").toString()));
      }
      if ((jsonObj.get("logFieldTargetHost") != null && !jsonObj.get("logFieldTargetHost").isJsonNull()) && !jsonObj.get("logFieldTargetHost").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logFieldTargetHost` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logFieldTargetHost").toString()));
      }
      if ((jsonObj.get("logFieldProtocolVersion") != null && !jsonObj.get("logFieldProtocolVersion").isJsonNull()) && !jsonObj.get("logFieldProtocolVersion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logFieldProtocolVersion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logFieldProtocolVersion").toString()));
      }
      if ((jsonObj.get("logFieldProtocolName") != null && !jsonObj.get("logFieldProtocolName").isJsonNull()) && !jsonObj.get("logFieldProtocolName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logFieldProtocolName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logFieldProtocolName").toString()));
      }
      if ((jsonObj.get("logFieldAuthenticationFailureReason") != null && !jsonObj.get("logFieldAuthenticationFailureReason").isJsonNull()) && !jsonObj.get("logFieldAuthenticationFailureReason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logFieldAuthenticationFailureReason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logFieldAuthenticationFailureReason").toString()));
      }
      if ((jsonObj.get("logFieldAdditionalInformation") != null && !jsonObj.get("logFieldAdditionalInformation").isJsonNull()) && !jsonObj.get("logFieldAdditionalInformation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logFieldAdditionalInformation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logFieldAdditionalInformation").toString()));
      }
      if ((jsonObj.get("logFieldUnindexed") != null && !jsonObj.get("logFieldUnindexed").isJsonNull()) && !jsonObj.get("logFieldUnindexed").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logFieldUnindexed` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logFieldUnindexed").toString()));
      }
      if ((jsonObj.get("logFieldScope") != null && !jsonObj.get("logFieldScope").isJsonNull()) && !jsonObj.get("logFieldScope").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logFieldScope` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logFieldScope").toString()));
      }
      if ((jsonObj.get("logFieldReferralUrls") != null && !jsonObj.get("logFieldReferralUrls").isJsonNull()) && !jsonObj.get("logFieldReferralUrls").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logFieldReferralUrls` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logFieldReferralUrls").toString()));
      }
      if ((jsonObj.get("logFieldSourceAddress") != null && !jsonObj.get("logFieldSourceAddress").isJsonNull()) && !jsonObj.get("logFieldSourceAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logFieldSourceAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logFieldSourceAddress").toString()));
      }
      if ((jsonObj.get("logFieldMessageIDToAbandon") != null && !jsonObj.get("logFieldMessageIDToAbandon").isJsonNull()) && !jsonObj.get("logFieldMessageIDToAbandon").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logFieldMessageIDToAbandon` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logFieldMessageIDToAbandon").toString()));
      }
      if ((jsonObj.get("logFieldResponseControls") != null && !jsonObj.get("logFieldResponseControls").isJsonNull()) && !jsonObj.get("logFieldResponseControls").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logFieldResponseControls` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logFieldResponseControls").toString()));
      }
      if ((jsonObj.get("logFieldRequestControls") != null && !jsonObj.get("logFieldRequestControls").isJsonNull()) && !jsonObj.get("logFieldRequestControls").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logFieldRequestControls` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logFieldRequestControls").toString()));
      }
      if ((jsonObj.get("logFieldIntermediateClientResult") != null && !jsonObj.get("logFieldIntermediateClientResult").isJsonNull()) && !jsonObj.get("logFieldIntermediateClientResult").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logFieldIntermediateClientResult` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logFieldIntermediateClientResult").toString()));
      }
      if ((jsonObj.get("logFieldIntermediateClientRequest") != null && !jsonObj.get("logFieldIntermediateClientRequest").isJsonNull()) && !jsonObj.get("logFieldIntermediateClientRequest").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logFieldIntermediateClientRequest` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logFieldIntermediateClientRequest").toString()));
      }
      if ((jsonObj.get("logFieldReplicationChangeID") != null && !jsonObj.get("logFieldReplicationChangeID").isJsonNull()) && !jsonObj.get("logFieldReplicationChangeID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logFieldReplicationChangeID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logFieldReplicationChangeID").toString()));
      }
      // validate the optional field `meta`
      if (jsonObj.get("meta") != null && !jsonObj.get("meta").isJsonNull()) {
        MetaMeta.validateJsonObject(jsonObj.getAsJsonObject("meta"));
      }
      // validate the optional field `urn:pingidentity:schemas:configuration:messages:2.0`
      if (jsonObj.get("urn:pingidentity:schemas:configuration:messages:2.0") != null && !jsonObj.get("urn:pingidentity:schemas:configuration:messages:2.0").isJsonNull()) {
        MetaUrnPingidentitySchemasConfigurationMessages20.validateJsonObject(jsonObj.getAsJsonObject("urn:pingidentity:schemas:configuration:messages:2.0"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AccessLogFieldMappingResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AccessLogFieldMappingResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AccessLogFieldMappingResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AccessLogFieldMappingResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<AccessLogFieldMappingResponse>() {
           @Override
           public void write(JsonWriter out, AccessLogFieldMappingResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public AccessLogFieldMappingResponse read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             AccessLogFieldMappingResponse instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AccessLogFieldMappingResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AccessLogFieldMappingResponse
  * @throws IOException if the JSON string is invalid with respect to AccessLogFieldMappingResponse
  */
  public static AccessLogFieldMappingResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AccessLogFieldMappingResponse.class);
  }

 /**
  * Convert an instance of AccessLogFieldMappingResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

