/*
 * PingData Config - OpenAPI 3.0
 * This is the PingData Configuration API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.EnumfileBasedTrustManagerProviderSchemaUrn;
import com.konfigthis.client.model.MetaMeta;
import com.konfigthis.client.model.MetaUrnPingidentitySchemasConfigurationMessages20;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * FileBasedTrustManagerProviderResponse
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class FileBasedTrustManagerProviderResponse {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_SCHEMAS = "schemas";
  @SerializedName(SERIALIZED_NAME_SCHEMAS)
  private List<EnumfileBasedTrustManagerProviderSchemaUrn> schemas = new ArrayList<>();

  public static final String SERIALIZED_NAME_TRUST_STORE_FILE = "trustStoreFile";
  @SerializedName(SERIALIZED_NAME_TRUST_STORE_FILE)
  private String trustStoreFile;

  public static final String SERIALIZED_NAME_TRUST_STORE_TYPE = "trustStoreType";
  @SerializedName(SERIALIZED_NAME_TRUST_STORE_TYPE)
  private String trustStoreType;

  public static final String SERIALIZED_NAME_TRUST_STORE_PIN = "trustStorePin";
  @SerializedName(SERIALIZED_NAME_TRUST_STORE_PIN)
  private String trustStorePin;

  public static final String SERIALIZED_NAME_TRUST_STORE_PIN_FILE = "trustStorePinFile";
  @SerializedName(SERIALIZED_NAME_TRUST_STORE_PIN_FILE)
  private String trustStorePinFile;

  public static final String SERIALIZED_NAME_TRUST_STORE_PIN_PASSPHRASE_PROVIDER = "trustStorePinPassphraseProvider";
  @SerializedName(SERIALIZED_NAME_TRUST_STORE_PIN_PASSPHRASE_PROVIDER)
  private String trustStorePinPassphraseProvider;

  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled;

  public static final String SERIALIZED_NAME_INCLUDE_J_V_M_DEFAULT_ISSUERS = "includeJVMDefaultIssuers";
  @SerializedName(SERIALIZED_NAME_INCLUDE_J_V_M_DEFAULT_ISSUERS)
  private Boolean includeJVMDefaultIssuers;

  public static final String SERIALIZED_NAME_META = "meta";
  @SerializedName(SERIALIZED_NAME_META)
  private MetaMeta meta;

  public static final String SERIALIZED_NAME_URN_COLON_PINGIDENTITY_COLON_SCHEMAS_COLON_CONFIGURATION_COLON_MESSAGES_COLON20 = "urn:pingidentity:schemas:configuration:messages:2.0";
  @SerializedName(SERIALIZED_NAME_URN_COLON_PINGIDENTITY_COLON_SCHEMAS_COLON_CONFIGURATION_COLON_MESSAGES_COLON20)
  private MetaUrnPingidentitySchemasConfigurationMessages20 urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20;

  public FileBasedTrustManagerProviderResponse() {
  }

  public FileBasedTrustManagerProviderResponse id(String id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * Name of the Trust Manager Provider
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Name of the Trust Manager Provider")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    
    
    
    this.id = id;
  }


  public FileBasedTrustManagerProviderResponse schemas(List<EnumfileBasedTrustManagerProviderSchemaUrn> schemas) {
    
    
    
    
    this.schemas = schemas;
    return this;
  }

  public FileBasedTrustManagerProviderResponse addSchemasItem(EnumfileBasedTrustManagerProviderSchemaUrn schemasItem) {
    this.schemas.add(schemasItem);
    return this;
  }

   /**
   * Get schemas
   * @return schemas
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<EnumfileBasedTrustManagerProviderSchemaUrn> getSchemas() {
    return schemas;
  }


  public void setSchemas(List<EnumfileBasedTrustManagerProviderSchemaUrn> schemas) {
    
    
    
    this.schemas = schemas;
  }


  public FileBasedTrustManagerProviderResponse trustStoreFile(String trustStoreFile) {
    
    
    
    
    this.trustStoreFile = trustStoreFile;
    return this;
  }

   /**
   * Specifies the path to the file containing the trust information. It can be an absolute path or a path that is relative to the Directory Server instance root.
   * @return trustStoreFile
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Specifies the path to the file containing the trust information. It can be an absolute path or a path that is relative to the Directory Server instance root.")

  public String getTrustStoreFile() {
    return trustStoreFile;
  }


  public void setTrustStoreFile(String trustStoreFile) {
    
    
    
    this.trustStoreFile = trustStoreFile;
  }


  public FileBasedTrustManagerProviderResponse trustStoreType(String trustStoreType) {
    
    
    
    
    this.trustStoreType = trustStoreType;
    return this;
  }

   /**
   * Specifies the format for the data in the trust store file.
   * @return trustStoreType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the format for the data in the trust store file.")

  public String getTrustStoreType() {
    return trustStoreType;
  }


  public void setTrustStoreType(String trustStoreType) {
    
    
    
    this.trustStoreType = trustStoreType;
  }


  public FileBasedTrustManagerProviderResponse trustStorePin(String trustStorePin) {
    
    
    
    
    this.trustStorePin = trustStorePin;
    return this;
  }

   /**
   * Specifies the clear-text PIN needed to access the File Based Trust Manager Provider.
   * @return trustStorePin
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the clear-text PIN needed to access the File Based Trust Manager Provider.")

  public String getTrustStorePin() {
    return trustStorePin;
  }


  public void setTrustStorePin(String trustStorePin) {
    
    
    
    this.trustStorePin = trustStorePin;
  }


  public FileBasedTrustManagerProviderResponse trustStorePinFile(String trustStorePinFile) {
    
    
    
    
    this.trustStorePinFile = trustStorePinFile;
    return this;
  }

   /**
   * Specifies the path to the text file whose only contents should be a single line containing the clear-text PIN needed to access the File Based Trust Manager Provider.
   * @return trustStorePinFile
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the path to the text file whose only contents should be a single line containing the clear-text PIN needed to access the File Based Trust Manager Provider.")

  public String getTrustStorePinFile() {
    return trustStorePinFile;
  }


  public void setTrustStorePinFile(String trustStorePinFile) {
    
    
    
    this.trustStorePinFile = trustStorePinFile;
  }


  public FileBasedTrustManagerProviderResponse trustStorePinPassphraseProvider(String trustStorePinPassphraseProvider) {
    
    
    
    
    this.trustStorePinPassphraseProvider = trustStorePinPassphraseProvider;
    return this;
  }

   /**
   * The passphrase provider to use to obtain the clear-text PIN needed to access the File Based Trust Manager Provider.
   * @return trustStorePinPassphraseProvider
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The passphrase provider to use to obtain the clear-text PIN needed to access the File Based Trust Manager Provider.")

  public String getTrustStorePinPassphraseProvider() {
    return trustStorePinPassphraseProvider;
  }


  public void setTrustStorePinPassphraseProvider(String trustStorePinPassphraseProvider) {
    
    
    
    this.trustStorePinPassphraseProvider = trustStorePinPassphraseProvider;
  }


  public FileBasedTrustManagerProviderResponse enabled(Boolean enabled) {
    
    
    
    
    this.enabled = enabled;
    return this;
  }

   /**
   * Indicate whether the Trust Manager Provider is enabled for use.
   * @return enabled
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Indicate whether the Trust Manager Provider is enabled for use.")

  public Boolean getEnabled() {
    return enabled;
  }


  public void setEnabled(Boolean enabled) {
    
    
    
    this.enabled = enabled;
  }


  public FileBasedTrustManagerProviderResponse includeJVMDefaultIssuers(Boolean includeJVMDefaultIssuers) {
    
    
    
    
    this.includeJVMDefaultIssuers = includeJVMDefaultIssuers;
    return this;
  }

   /**
   * Indicates whether certificates issued by an authority included in the JVM&#39;s set of default issuers should be automatically trusted, even if they would not otherwise be trusted by this provider.
   * @return includeJVMDefaultIssuers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether certificates issued by an authority included in the JVM's set of default issuers should be automatically trusted, even if they would not otherwise be trusted by this provider.")

  public Boolean getIncludeJVMDefaultIssuers() {
    return includeJVMDefaultIssuers;
  }


  public void setIncludeJVMDefaultIssuers(Boolean includeJVMDefaultIssuers) {
    
    
    
    this.includeJVMDefaultIssuers = includeJVMDefaultIssuers;
  }


  public FileBasedTrustManagerProviderResponse meta(MetaMeta meta) {
    
    
    
    
    this.meta = meta;
    return this;
  }

   /**
   * Get meta
   * @return meta
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public MetaMeta getMeta() {
    return meta;
  }


  public void setMeta(MetaMeta meta) {
    
    
    
    this.meta = meta;
  }


  public FileBasedTrustManagerProviderResponse urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20(MetaUrnPingidentitySchemasConfigurationMessages20 urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20) {
    
    
    
    
    this.urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20 = urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20;
    return this;
  }

   /**
   * Get urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20
   * @return urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public MetaUrnPingidentitySchemasConfigurationMessages20 getUrnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20() {
    return urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20;
  }


  public void setUrnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20(MetaUrnPingidentitySchemasConfigurationMessages20 urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20) {
    
    
    
    this.urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20 = urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the FileBasedTrustManagerProviderResponse instance itself
   */
  public FileBasedTrustManagerProviderResponse putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FileBasedTrustManagerProviderResponse fileBasedTrustManagerProviderResponse = (FileBasedTrustManagerProviderResponse) o;
    return Objects.equals(this.id, fileBasedTrustManagerProviderResponse.id) &&
        Objects.equals(this.schemas, fileBasedTrustManagerProviderResponse.schemas) &&
        Objects.equals(this.trustStoreFile, fileBasedTrustManagerProviderResponse.trustStoreFile) &&
        Objects.equals(this.trustStoreType, fileBasedTrustManagerProviderResponse.trustStoreType) &&
        Objects.equals(this.trustStorePin, fileBasedTrustManagerProviderResponse.trustStorePin) &&
        Objects.equals(this.trustStorePinFile, fileBasedTrustManagerProviderResponse.trustStorePinFile) &&
        Objects.equals(this.trustStorePinPassphraseProvider, fileBasedTrustManagerProviderResponse.trustStorePinPassphraseProvider) &&
        Objects.equals(this.enabled, fileBasedTrustManagerProviderResponse.enabled) &&
        Objects.equals(this.includeJVMDefaultIssuers, fileBasedTrustManagerProviderResponse.includeJVMDefaultIssuers) &&
        Objects.equals(this.meta, fileBasedTrustManagerProviderResponse.meta) &&
        Objects.equals(this.urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20, fileBasedTrustManagerProviderResponse.urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20)&&
        Objects.equals(this.additionalProperties, fileBasedTrustManagerProviderResponse.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, schemas, trustStoreFile, trustStoreType, trustStorePin, trustStorePinFile, trustStorePinPassphraseProvider, enabled, includeJVMDefaultIssuers, meta, urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FileBasedTrustManagerProviderResponse {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    schemas: ").append(toIndentedString(schemas)).append("\n");
    sb.append("    trustStoreFile: ").append(toIndentedString(trustStoreFile)).append("\n");
    sb.append("    trustStoreType: ").append(toIndentedString(trustStoreType)).append("\n");
    sb.append("    trustStorePin: ").append(toIndentedString(trustStorePin)).append("\n");
    sb.append("    trustStorePinFile: ").append(toIndentedString(trustStorePinFile)).append("\n");
    sb.append("    trustStorePinPassphraseProvider: ").append(toIndentedString(trustStorePinPassphraseProvider)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    includeJVMDefaultIssuers: ").append(toIndentedString(includeJVMDefaultIssuers)).append("\n");
    sb.append("    meta: ").append(toIndentedString(meta)).append("\n");
    sb.append("    urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20: ").append(toIndentedString(urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("schemas");
    openapiFields.add("trustStoreFile");
    openapiFields.add("trustStoreType");
    openapiFields.add("trustStorePin");
    openapiFields.add("trustStorePinFile");
    openapiFields.add("trustStorePinPassphraseProvider");
    openapiFields.add("enabled");
    openapiFields.add("includeJVMDefaultIssuers");
    openapiFields.add("meta");
    openapiFields.add("urn:pingidentity:schemas:configuration:messages:2.0");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("schemas");
    openapiRequiredFields.add("trustStoreFile");
    openapiRequiredFields.add("enabled");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to FileBasedTrustManagerProviderResponse
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!FileBasedTrustManagerProviderResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in FileBasedTrustManagerProviderResponse is not found in the empty JSON string", FileBasedTrustManagerProviderResponse.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : FileBasedTrustManagerProviderResponse.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("schemas") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("schemas").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `schemas` to be an array in the JSON string but got `%s`", jsonObj.get("schemas").toString()));
      }
      if (!jsonObj.get("trustStoreFile").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `trustStoreFile` to be a primitive type in the JSON string but got `%s`", jsonObj.get("trustStoreFile").toString()));
      }
      if ((jsonObj.get("trustStoreType") != null && !jsonObj.get("trustStoreType").isJsonNull()) && !jsonObj.get("trustStoreType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `trustStoreType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("trustStoreType").toString()));
      }
      if ((jsonObj.get("trustStorePin") != null && !jsonObj.get("trustStorePin").isJsonNull()) && !jsonObj.get("trustStorePin").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `trustStorePin` to be a primitive type in the JSON string but got `%s`", jsonObj.get("trustStorePin").toString()));
      }
      if ((jsonObj.get("trustStorePinFile") != null && !jsonObj.get("trustStorePinFile").isJsonNull()) && !jsonObj.get("trustStorePinFile").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `trustStorePinFile` to be a primitive type in the JSON string but got `%s`", jsonObj.get("trustStorePinFile").toString()));
      }
      if ((jsonObj.get("trustStorePinPassphraseProvider") != null && !jsonObj.get("trustStorePinPassphraseProvider").isJsonNull()) && !jsonObj.get("trustStorePinPassphraseProvider").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `trustStorePinPassphraseProvider` to be a primitive type in the JSON string but got `%s`", jsonObj.get("trustStorePinPassphraseProvider").toString()));
      }
      // validate the optional field `meta`
      if (jsonObj.get("meta") != null && !jsonObj.get("meta").isJsonNull()) {
        MetaMeta.validateJsonObject(jsonObj.getAsJsonObject("meta"));
      }
      // validate the optional field `urn:pingidentity:schemas:configuration:messages:2.0`
      if (jsonObj.get("urn:pingidentity:schemas:configuration:messages:2.0") != null && !jsonObj.get("urn:pingidentity:schemas:configuration:messages:2.0").isJsonNull()) {
        MetaUrnPingidentitySchemasConfigurationMessages20.validateJsonObject(jsonObj.getAsJsonObject("urn:pingidentity:schemas:configuration:messages:2.0"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!FileBasedTrustManagerProviderResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'FileBasedTrustManagerProviderResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<FileBasedTrustManagerProviderResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(FileBasedTrustManagerProviderResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<FileBasedTrustManagerProviderResponse>() {
           @Override
           public void write(JsonWriter out, FileBasedTrustManagerProviderResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public FileBasedTrustManagerProviderResponse read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             FileBasedTrustManagerProviderResponse instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of FileBasedTrustManagerProviderResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of FileBasedTrustManagerProviderResponse
  * @throws IOException if the JSON string is invalid with respect to FileBasedTrustManagerProviderResponse
  */
  public static FileBasedTrustManagerProviderResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, FileBasedTrustManagerProviderResponse.class);
  }

 /**
  * Convert an instance of FileBasedTrustManagerProviderResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

