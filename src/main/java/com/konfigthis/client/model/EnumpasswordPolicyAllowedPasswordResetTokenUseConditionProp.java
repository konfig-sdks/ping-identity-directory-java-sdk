/*
 * PingData Config - OpenAPI 3.0
 * This is the PingData Configuration API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * The set of conditions under which a user governed by this Password Policy will be permitted to generate a password reset token via the deliver password reset token extended operation, and to use that token in lieu of the current password via the password modify extended operation.
 */
@JsonAdapter(EnumpasswordPolicyAllowedPasswordResetTokenUseConditionProp.Adapter.class)public enum EnumpasswordPolicyAllowedPasswordResetTokenUseConditionProp {
  
  ACCOUNT_USABLE("account-usable"),
  
  PASSWORD_EXPIRED("password-expired"),
  
  ACCOUNT_LOCKED_DUE_TO_FAILURES("account-locked-due-to-failures"),
  
  ACCOUNT_LOCKED_DUE_TO_IDLE_TIME_LIMIT("account-locked-due-to-idle-time-limit"),
  
  ACCOUNT_LOCKED_DUE_TO_ADMIN_RESET_TIMEOUT("account-locked-due-to-admin-reset-timeout"),
  
  ACCOUNT_LOCKED_DUE_TO_VALIDATION_FAILURE("account-locked-due-to-validation-failure");

  private String value;

  EnumpasswordPolicyAllowedPasswordResetTokenUseConditionProp(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static EnumpasswordPolicyAllowedPasswordResetTokenUseConditionProp fromValue(String value) {
    for (EnumpasswordPolicyAllowedPasswordResetTokenUseConditionProp b : EnumpasswordPolicyAllowedPasswordResetTokenUseConditionProp.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<EnumpasswordPolicyAllowedPasswordResetTokenUseConditionProp> {
    @Override
    public void write(final JsonWriter jsonWriter, final EnumpasswordPolicyAllowedPasswordResetTokenUseConditionProp enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public EnumpasswordPolicyAllowedPasswordResetTokenUseConditionProp read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return EnumpasswordPolicyAllowedPasswordResetTokenUseConditionProp.fromValue(value);
    }
  }
}

