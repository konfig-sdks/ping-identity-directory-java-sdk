/*
 * PingData Config - OpenAPI 3.0
 * This is the PingData Configuration API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.EnumcomposedAttributePluginSchemaUrn;
import com.konfigthis.client.model.EnumpluginMultiValuedAttributeBehaviorProp;
import com.konfigthis.client.model.EnumpluginMultipleValuePatternBehaviorProp;
import com.konfigthis.client.model.EnumpluginPluginTypeProp;
import com.konfigthis.client.model.EnumpluginSourceAttributeRemovalBehaviorProp;
import com.konfigthis.client.model.EnumpluginTargetAttributeExistsDuringInitialPopulationBehaviorProp;
import com.konfigthis.client.model.EnumpluginUpdateSourceAttributeBehaviorProp;
import com.konfigthis.client.model.EnumpluginUpdateTargetAttributeBehaviorProp;
import com.konfigthis.client.model.EnumpluginUpdatedEntryNewlyMatchesCriteriaBehaviorProp;
import com.konfigthis.client.model.EnumpluginUpdatedEntryNoLongerMatchesCriteriaBehaviorProp;
import com.konfigthis.client.model.MetaMeta;
import com.konfigthis.client.model.MetaUrnPingidentitySchemasConfigurationMessages20;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * ComposedAttributePluginResponse
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class ComposedAttributePluginResponse {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_SCHEMAS = "schemas";
  @SerializedName(SERIALIZED_NAME_SCHEMAS)
  private List<EnumcomposedAttributePluginSchemaUrn> schemas = new ArrayList<>();

  public static final String SERIALIZED_NAME_PLUGIN_TYPE = "pluginType";
  @SerializedName(SERIALIZED_NAME_PLUGIN_TYPE)
  private List<EnumpluginPluginTypeProp> pluginType = new ArrayList<>();

  public static final String SERIALIZED_NAME_ATTRIBUTE_TYPE = "attributeType";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTE_TYPE)
  private String attributeType;

  public static final String SERIALIZED_NAME_VALUE_PATTERN = "valuePattern";
  @SerializedName(SERIALIZED_NAME_VALUE_PATTERN)
  private List<String> valuePattern = new ArrayList<>();

  public static final String SERIALIZED_NAME_MULTIPLE_VALUE_PATTERN_BEHAVIOR = "multipleValuePatternBehavior";
  @SerializedName(SERIALIZED_NAME_MULTIPLE_VALUE_PATTERN_BEHAVIOR)
  private EnumpluginMultipleValuePatternBehaviorProp multipleValuePatternBehavior;

  public static final String SERIALIZED_NAME_MULTI_VALUED_ATTRIBUTE_BEHAVIOR = "multiValuedAttributeBehavior";
  @SerializedName(SERIALIZED_NAME_MULTI_VALUED_ATTRIBUTE_BEHAVIOR)
  private EnumpluginMultiValuedAttributeBehaviorProp multiValuedAttributeBehavior;

  public static final String SERIALIZED_NAME_TARGET_ATTRIBUTE_EXISTS_DURING_INITIAL_POPULATION_BEHAVIOR = "targetAttributeExistsDuringInitialPopulationBehavior";
  @SerializedName(SERIALIZED_NAME_TARGET_ATTRIBUTE_EXISTS_DURING_INITIAL_POPULATION_BEHAVIOR)
  private EnumpluginTargetAttributeExistsDuringInitialPopulationBehaviorProp targetAttributeExistsDuringInitialPopulationBehavior;

  public static final String SERIALIZED_NAME_UPDATE_SOURCE_ATTRIBUTE_BEHAVIOR = "updateSourceAttributeBehavior";
  @SerializedName(SERIALIZED_NAME_UPDATE_SOURCE_ATTRIBUTE_BEHAVIOR)
  private EnumpluginUpdateSourceAttributeBehaviorProp updateSourceAttributeBehavior;

  public static final String SERIALIZED_NAME_SOURCE_ATTRIBUTE_REMOVAL_BEHAVIOR = "sourceAttributeRemovalBehavior";
  @SerializedName(SERIALIZED_NAME_SOURCE_ATTRIBUTE_REMOVAL_BEHAVIOR)
  private EnumpluginSourceAttributeRemovalBehaviorProp sourceAttributeRemovalBehavior;

  public static final String SERIALIZED_NAME_UPDATE_TARGET_ATTRIBUTE_BEHAVIOR = "updateTargetAttributeBehavior";
  @SerializedName(SERIALIZED_NAME_UPDATE_TARGET_ATTRIBUTE_BEHAVIOR)
  private EnumpluginUpdateTargetAttributeBehaviorProp updateTargetAttributeBehavior;

  public static final String SERIALIZED_NAME_INCLUDE_BASE_D_N = "includeBaseDN";
  @SerializedName(SERIALIZED_NAME_INCLUDE_BASE_D_N)
  private List<String> includeBaseDN = null;

  public static final String SERIALIZED_NAME_EXCLUDE_BASE_D_N = "excludeBaseDN";
  @SerializedName(SERIALIZED_NAME_EXCLUDE_BASE_D_N)
  private List<String> excludeBaseDN = null;

  public static final String SERIALIZED_NAME_INCLUDE_FILTER = "includeFilter";
  @SerializedName(SERIALIZED_NAME_INCLUDE_FILTER)
  private List<String> includeFilter = null;

  public static final String SERIALIZED_NAME_EXCLUDE_FILTER = "excludeFilter";
  @SerializedName(SERIALIZED_NAME_EXCLUDE_FILTER)
  private List<String> excludeFilter = null;

  public static final String SERIALIZED_NAME_UPDATED_ENTRY_NEWLY_MATCHES_CRITERIA_BEHAVIOR = "updatedEntryNewlyMatchesCriteriaBehavior";
  @SerializedName(SERIALIZED_NAME_UPDATED_ENTRY_NEWLY_MATCHES_CRITERIA_BEHAVIOR)
  private EnumpluginUpdatedEntryNewlyMatchesCriteriaBehaviorProp updatedEntryNewlyMatchesCriteriaBehavior;

  public static final String SERIALIZED_NAME_UPDATED_ENTRY_NO_LONGER_MATCHES_CRITERIA_BEHAVIOR = "updatedEntryNoLongerMatchesCriteriaBehavior";
  @SerializedName(SERIALIZED_NAME_UPDATED_ENTRY_NO_LONGER_MATCHES_CRITERIA_BEHAVIOR)
  private EnumpluginUpdatedEntryNoLongerMatchesCriteriaBehaviorProp updatedEntryNoLongerMatchesCriteriaBehavior;

  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled;

  public static final String SERIALIZED_NAME_INVOKE_FOR_INTERNAL_OPERATIONS = "invokeForInternalOperations";
  @SerializedName(SERIALIZED_NAME_INVOKE_FOR_INTERNAL_OPERATIONS)
  private Boolean invokeForInternalOperations;

  public static final String SERIALIZED_NAME_META = "meta";
  @SerializedName(SERIALIZED_NAME_META)
  private MetaMeta meta;

  public static final String SERIALIZED_NAME_URN_COLON_PINGIDENTITY_COLON_SCHEMAS_COLON_CONFIGURATION_COLON_MESSAGES_COLON20 = "urn:pingidentity:schemas:configuration:messages:2.0";
  @SerializedName(SERIALIZED_NAME_URN_COLON_PINGIDENTITY_COLON_SCHEMAS_COLON_CONFIGURATION_COLON_MESSAGES_COLON20)
  private MetaUrnPingidentitySchemasConfigurationMessages20 urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20;

  public ComposedAttributePluginResponse() {
  }

  public ComposedAttributePluginResponse id(String id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * Name of the Plugin
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Name of the Plugin")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    
    
    
    this.id = id;
  }


  public ComposedAttributePluginResponse description(String description) {
    
    
    
    
    this.description = description;
    return this;
  }

   /**
   * A description for this Plugin
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A description for this Plugin")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    
    
    
    this.description = description;
  }


  public ComposedAttributePluginResponse schemas(List<EnumcomposedAttributePluginSchemaUrn> schemas) {
    
    
    
    
    this.schemas = schemas;
    return this;
  }

  public ComposedAttributePluginResponse addSchemasItem(EnumcomposedAttributePluginSchemaUrn schemasItem) {
    this.schemas.add(schemasItem);
    return this;
  }

   /**
   * Get schemas
   * @return schemas
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<EnumcomposedAttributePluginSchemaUrn> getSchemas() {
    return schemas;
  }


  public void setSchemas(List<EnumcomposedAttributePluginSchemaUrn> schemas) {
    
    
    
    this.schemas = schemas;
  }


  public ComposedAttributePluginResponse pluginType(List<EnumpluginPluginTypeProp> pluginType) {
    
    
    
    
    this.pluginType = pluginType;
    return this;
  }

  public ComposedAttributePluginResponse addPluginTypeItem(EnumpluginPluginTypeProp pluginTypeItem) {
    this.pluginType.add(pluginTypeItem);
    return this;
  }

   /**
   * Get pluginType
   * @return pluginType
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<EnumpluginPluginTypeProp> getPluginType() {
    return pluginType;
  }


  public void setPluginType(List<EnumpluginPluginTypeProp> pluginType) {
    
    
    
    this.pluginType = pluginType;
  }


  public ComposedAttributePluginResponse attributeType(String attributeType) {
    
    
    
    
    this.attributeType = attributeType;
    return this;
  }

   /**
   * The name or OID of the attribute type for which values are to be generated.
   * @return attributeType
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The name or OID of the attribute type for which values are to be generated.")

  public String getAttributeType() {
    return attributeType;
  }


  public void setAttributeType(String attributeType) {
    
    
    
    this.attributeType = attributeType;
  }


  public ComposedAttributePluginResponse valuePattern(List<String> valuePattern) {
    
    
    
    
    this.valuePattern = valuePattern;
    return this;
  }

  public ComposedAttributePluginResponse addValuePatternItem(String valuePatternItem) {
    this.valuePattern.add(valuePatternItem);
    return this;
  }

   /**
   * Specifies a pattern for constructing the values to use for the target attribute type.
   * @return valuePattern
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Specifies a pattern for constructing the values to use for the target attribute type.")

  public List<String> getValuePattern() {
    return valuePattern;
  }


  public void setValuePattern(List<String> valuePattern) {
    
    
    
    this.valuePattern = valuePattern;
  }


  public ComposedAttributePluginResponse multipleValuePatternBehavior(EnumpluginMultipleValuePatternBehaviorProp multipleValuePatternBehavior) {
    
    
    
    
    this.multipleValuePatternBehavior = multipleValuePatternBehavior;
    return this;
  }

   /**
   * Get multipleValuePatternBehavior
   * @return multipleValuePatternBehavior
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EnumpluginMultipleValuePatternBehaviorProp getMultipleValuePatternBehavior() {
    return multipleValuePatternBehavior;
  }


  public void setMultipleValuePatternBehavior(EnumpluginMultipleValuePatternBehaviorProp multipleValuePatternBehavior) {
    
    
    
    this.multipleValuePatternBehavior = multipleValuePatternBehavior;
  }


  public ComposedAttributePluginResponse multiValuedAttributeBehavior(EnumpluginMultiValuedAttributeBehaviorProp multiValuedAttributeBehavior) {
    
    
    
    
    this.multiValuedAttributeBehavior = multiValuedAttributeBehavior;
    return this;
  }

   /**
   * Get multiValuedAttributeBehavior
   * @return multiValuedAttributeBehavior
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EnumpluginMultiValuedAttributeBehaviorProp getMultiValuedAttributeBehavior() {
    return multiValuedAttributeBehavior;
  }


  public void setMultiValuedAttributeBehavior(EnumpluginMultiValuedAttributeBehaviorProp multiValuedAttributeBehavior) {
    
    
    
    this.multiValuedAttributeBehavior = multiValuedAttributeBehavior;
  }


  public ComposedAttributePluginResponse targetAttributeExistsDuringInitialPopulationBehavior(EnumpluginTargetAttributeExistsDuringInitialPopulationBehaviorProp targetAttributeExistsDuringInitialPopulationBehavior) {
    
    
    
    
    this.targetAttributeExistsDuringInitialPopulationBehavior = targetAttributeExistsDuringInitialPopulationBehavior;
    return this;
  }

   /**
   * Get targetAttributeExistsDuringInitialPopulationBehavior
   * @return targetAttributeExistsDuringInitialPopulationBehavior
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EnumpluginTargetAttributeExistsDuringInitialPopulationBehaviorProp getTargetAttributeExistsDuringInitialPopulationBehavior() {
    return targetAttributeExistsDuringInitialPopulationBehavior;
  }


  public void setTargetAttributeExistsDuringInitialPopulationBehavior(EnumpluginTargetAttributeExistsDuringInitialPopulationBehaviorProp targetAttributeExistsDuringInitialPopulationBehavior) {
    
    
    
    this.targetAttributeExistsDuringInitialPopulationBehavior = targetAttributeExistsDuringInitialPopulationBehavior;
  }


  public ComposedAttributePluginResponse updateSourceAttributeBehavior(EnumpluginUpdateSourceAttributeBehaviorProp updateSourceAttributeBehavior) {
    
    
    
    
    this.updateSourceAttributeBehavior = updateSourceAttributeBehavior;
    return this;
  }

   /**
   * Get updateSourceAttributeBehavior
   * @return updateSourceAttributeBehavior
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EnumpluginUpdateSourceAttributeBehaviorProp getUpdateSourceAttributeBehavior() {
    return updateSourceAttributeBehavior;
  }


  public void setUpdateSourceAttributeBehavior(EnumpluginUpdateSourceAttributeBehaviorProp updateSourceAttributeBehavior) {
    
    
    
    this.updateSourceAttributeBehavior = updateSourceAttributeBehavior;
  }


  public ComposedAttributePluginResponse sourceAttributeRemovalBehavior(EnumpluginSourceAttributeRemovalBehaviorProp sourceAttributeRemovalBehavior) {
    
    
    
    
    this.sourceAttributeRemovalBehavior = sourceAttributeRemovalBehavior;
    return this;
  }

   /**
   * Get sourceAttributeRemovalBehavior
   * @return sourceAttributeRemovalBehavior
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EnumpluginSourceAttributeRemovalBehaviorProp getSourceAttributeRemovalBehavior() {
    return sourceAttributeRemovalBehavior;
  }


  public void setSourceAttributeRemovalBehavior(EnumpluginSourceAttributeRemovalBehaviorProp sourceAttributeRemovalBehavior) {
    
    
    
    this.sourceAttributeRemovalBehavior = sourceAttributeRemovalBehavior;
  }


  public ComposedAttributePluginResponse updateTargetAttributeBehavior(EnumpluginUpdateTargetAttributeBehaviorProp updateTargetAttributeBehavior) {
    
    
    
    
    this.updateTargetAttributeBehavior = updateTargetAttributeBehavior;
    return this;
  }

   /**
   * Get updateTargetAttributeBehavior
   * @return updateTargetAttributeBehavior
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EnumpluginUpdateTargetAttributeBehaviorProp getUpdateTargetAttributeBehavior() {
    return updateTargetAttributeBehavior;
  }


  public void setUpdateTargetAttributeBehavior(EnumpluginUpdateTargetAttributeBehaviorProp updateTargetAttributeBehavior) {
    
    
    
    this.updateTargetAttributeBehavior = updateTargetAttributeBehavior;
  }


  public ComposedAttributePluginResponse includeBaseDN(List<String> includeBaseDN) {
    
    
    
    
    this.includeBaseDN = includeBaseDN;
    return this;
  }

  public ComposedAttributePluginResponse addIncludeBaseDNItem(String includeBaseDNItem) {
    if (this.includeBaseDN == null) {
      this.includeBaseDN = new ArrayList<>();
    }
    this.includeBaseDN.add(includeBaseDNItem);
    return this;
  }

   /**
   * The set of base DNs below which composed values may be generated.
   * @return includeBaseDN
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The set of base DNs below which composed values may be generated.")

  public List<String> getIncludeBaseDN() {
    return includeBaseDN;
  }


  public void setIncludeBaseDN(List<String> includeBaseDN) {
    
    
    
    this.includeBaseDN = includeBaseDN;
  }


  public ComposedAttributePluginResponse excludeBaseDN(List<String> excludeBaseDN) {
    
    
    
    
    this.excludeBaseDN = excludeBaseDN;
    return this;
  }

  public ComposedAttributePluginResponse addExcludeBaseDNItem(String excludeBaseDNItem) {
    if (this.excludeBaseDN == null) {
      this.excludeBaseDN = new ArrayList<>();
    }
    this.excludeBaseDN.add(excludeBaseDNItem);
    return this;
  }

   /**
   * The set of base DNs below which composed values will not be generated.
   * @return excludeBaseDN
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The set of base DNs below which composed values will not be generated.")

  public List<String> getExcludeBaseDN() {
    return excludeBaseDN;
  }


  public void setExcludeBaseDN(List<String> excludeBaseDN) {
    
    
    
    this.excludeBaseDN = excludeBaseDN;
  }


  public ComposedAttributePluginResponse includeFilter(List<String> includeFilter) {
    
    
    
    
    this.includeFilter = includeFilter;
    return this;
  }

  public ComposedAttributePluginResponse addIncludeFilterItem(String includeFilterItem) {
    if (this.includeFilter == null) {
      this.includeFilter = new ArrayList<>();
    }
    this.includeFilter.add(includeFilterItem);
    return this;
  }

   /**
   * The set of search filters that identify entries for which composed values may be generated.
   * @return includeFilter
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The set of search filters that identify entries for which composed values may be generated.")

  public List<String> getIncludeFilter() {
    return includeFilter;
  }


  public void setIncludeFilter(List<String> includeFilter) {
    
    
    
    this.includeFilter = includeFilter;
  }


  public ComposedAttributePluginResponse excludeFilter(List<String> excludeFilter) {
    
    
    
    
    this.excludeFilter = excludeFilter;
    return this;
  }

  public ComposedAttributePluginResponse addExcludeFilterItem(String excludeFilterItem) {
    if (this.excludeFilter == null) {
      this.excludeFilter = new ArrayList<>();
    }
    this.excludeFilter.add(excludeFilterItem);
    return this;
  }

   /**
   * The set of search filters that identify entries for which composed values will not be generated.
   * @return excludeFilter
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The set of search filters that identify entries for which composed values will not be generated.")

  public List<String> getExcludeFilter() {
    return excludeFilter;
  }


  public void setExcludeFilter(List<String> excludeFilter) {
    
    
    
    this.excludeFilter = excludeFilter;
  }


  public ComposedAttributePluginResponse updatedEntryNewlyMatchesCriteriaBehavior(EnumpluginUpdatedEntryNewlyMatchesCriteriaBehaviorProp updatedEntryNewlyMatchesCriteriaBehavior) {
    
    
    
    
    this.updatedEntryNewlyMatchesCriteriaBehavior = updatedEntryNewlyMatchesCriteriaBehavior;
    return this;
  }

   /**
   * Get updatedEntryNewlyMatchesCriteriaBehavior
   * @return updatedEntryNewlyMatchesCriteriaBehavior
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EnumpluginUpdatedEntryNewlyMatchesCriteriaBehaviorProp getUpdatedEntryNewlyMatchesCriteriaBehavior() {
    return updatedEntryNewlyMatchesCriteriaBehavior;
  }


  public void setUpdatedEntryNewlyMatchesCriteriaBehavior(EnumpluginUpdatedEntryNewlyMatchesCriteriaBehaviorProp updatedEntryNewlyMatchesCriteriaBehavior) {
    
    
    
    this.updatedEntryNewlyMatchesCriteriaBehavior = updatedEntryNewlyMatchesCriteriaBehavior;
  }


  public ComposedAttributePluginResponse updatedEntryNoLongerMatchesCriteriaBehavior(EnumpluginUpdatedEntryNoLongerMatchesCriteriaBehaviorProp updatedEntryNoLongerMatchesCriteriaBehavior) {
    
    
    
    
    this.updatedEntryNoLongerMatchesCriteriaBehavior = updatedEntryNoLongerMatchesCriteriaBehavior;
    return this;
  }

   /**
   * Get updatedEntryNoLongerMatchesCriteriaBehavior
   * @return updatedEntryNoLongerMatchesCriteriaBehavior
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EnumpluginUpdatedEntryNoLongerMatchesCriteriaBehaviorProp getUpdatedEntryNoLongerMatchesCriteriaBehavior() {
    return updatedEntryNoLongerMatchesCriteriaBehavior;
  }


  public void setUpdatedEntryNoLongerMatchesCriteriaBehavior(EnumpluginUpdatedEntryNoLongerMatchesCriteriaBehaviorProp updatedEntryNoLongerMatchesCriteriaBehavior) {
    
    
    
    this.updatedEntryNoLongerMatchesCriteriaBehavior = updatedEntryNoLongerMatchesCriteriaBehavior;
  }


  public ComposedAttributePluginResponse enabled(Boolean enabled) {
    
    
    
    
    this.enabled = enabled;
    return this;
  }

   /**
   * Indicates whether the plug-in is enabled for use.
   * @return enabled
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Indicates whether the plug-in is enabled for use.")

  public Boolean getEnabled() {
    return enabled;
  }


  public void setEnabled(Boolean enabled) {
    
    
    
    this.enabled = enabled;
  }


  public ComposedAttributePluginResponse invokeForInternalOperations(Boolean invokeForInternalOperations) {
    
    
    
    
    this.invokeForInternalOperations = invokeForInternalOperations;
    return this;
  }

   /**
   * Indicates whether the plug-in should be invoked for internal operations.
   * @return invokeForInternalOperations
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether the plug-in should be invoked for internal operations.")

  public Boolean getInvokeForInternalOperations() {
    return invokeForInternalOperations;
  }


  public void setInvokeForInternalOperations(Boolean invokeForInternalOperations) {
    
    
    
    this.invokeForInternalOperations = invokeForInternalOperations;
  }


  public ComposedAttributePluginResponse meta(MetaMeta meta) {
    
    
    
    
    this.meta = meta;
    return this;
  }

   /**
   * Get meta
   * @return meta
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public MetaMeta getMeta() {
    return meta;
  }


  public void setMeta(MetaMeta meta) {
    
    
    
    this.meta = meta;
  }


  public ComposedAttributePluginResponse urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20(MetaUrnPingidentitySchemasConfigurationMessages20 urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20) {
    
    
    
    
    this.urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20 = urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20;
    return this;
  }

   /**
   * Get urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20
   * @return urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public MetaUrnPingidentitySchemasConfigurationMessages20 getUrnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20() {
    return urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20;
  }


  public void setUrnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20(MetaUrnPingidentitySchemasConfigurationMessages20 urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20) {
    
    
    
    this.urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20 = urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the ComposedAttributePluginResponse instance itself
   */
  public ComposedAttributePluginResponse putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComposedAttributePluginResponse composedAttributePluginResponse = (ComposedAttributePluginResponse) o;
    return Objects.equals(this.id, composedAttributePluginResponse.id) &&
        Objects.equals(this.description, composedAttributePluginResponse.description) &&
        Objects.equals(this.schemas, composedAttributePluginResponse.schemas) &&
        Objects.equals(this.pluginType, composedAttributePluginResponse.pluginType) &&
        Objects.equals(this.attributeType, composedAttributePluginResponse.attributeType) &&
        Objects.equals(this.valuePattern, composedAttributePluginResponse.valuePattern) &&
        Objects.equals(this.multipleValuePatternBehavior, composedAttributePluginResponse.multipleValuePatternBehavior) &&
        Objects.equals(this.multiValuedAttributeBehavior, composedAttributePluginResponse.multiValuedAttributeBehavior) &&
        Objects.equals(this.targetAttributeExistsDuringInitialPopulationBehavior, composedAttributePluginResponse.targetAttributeExistsDuringInitialPopulationBehavior) &&
        Objects.equals(this.updateSourceAttributeBehavior, composedAttributePluginResponse.updateSourceAttributeBehavior) &&
        Objects.equals(this.sourceAttributeRemovalBehavior, composedAttributePluginResponse.sourceAttributeRemovalBehavior) &&
        Objects.equals(this.updateTargetAttributeBehavior, composedAttributePluginResponse.updateTargetAttributeBehavior) &&
        Objects.equals(this.includeBaseDN, composedAttributePluginResponse.includeBaseDN) &&
        Objects.equals(this.excludeBaseDN, composedAttributePluginResponse.excludeBaseDN) &&
        Objects.equals(this.includeFilter, composedAttributePluginResponse.includeFilter) &&
        Objects.equals(this.excludeFilter, composedAttributePluginResponse.excludeFilter) &&
        Objects.equals(this.updatedEntryNewlyMatchesCriteriaBehavior, composedAttributePluginResponse.updatedEntryNewlyMatchesCriteriaBehavior) &&
        Objects.equals(this.updatedEntryNoLongerMatchesCriteriaBehavior, composedAttributePluginResponse.updatedEntryNoLongerMatchesCriteriaBehavior) &&
        Objects.equals(this.enabled, composedAttributePluginResponse.enabled) &&
        Objects.equals(this.invokeForInternalOperations, composedAttributePluginResponse.invokeForInternalOperations) &&
        Objects.equals(this.meta, composedAttributePluginResponse.meta) &&
        Objects.equals(this.urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20, composedAttributePluginResponse.urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20)&&
        Objects.equals(this.additionalProperties, composedAttributePluginResponse.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, description, schemas, pluginType, attributeType, valuePattern, multipleValuePatternBehavior, multiValuedAttributeBehavior, targetAttributeExistsDuringInitialPopulationBehavior, updateSourceAttributeBehavior, sourceAttributeRemovalBehavior, updateTargetAttributeBehavior, includeBaseDN, excludeBaseDN, includeFilter, excludeFilter, updatedEntryNewlyMatchesCriteriaBehavior, updatedEntryNoLongerMatchesCriteriaBehavior, enabled, invokeForInternalOperations, meta, urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComposedAttributePluginResponse {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    schemas: ").append(toIndentedString(schemas)).append("\n");
    sb.append("    pluginType: ").append(toIndentedString(pluginType)).append("\n");
    sb.append("    attributeType: ").append(toIndentedString(attributeType)).append("\n");
    sb.append("    valuePattern: ").append(toIndentedString(valuePattern)).append("\n");
    sb.append("    multipleValuePatternBehavior: ").append(toIndentedString(multipleValuePatternBehavior)).append("\n");
    sb.append("    multiValuedAttributeBehavior: ").append(toIndentedString(multiValuedAttributeBehavior)).append("\n");
    sb.append("    targetAttributeExistsDuringInitialPopulationBehavior: ").append(toIndentedString(targetAttributeExistsDuringInitialPopulationBehavior)).append("\n");
    sb.append("    updateSourceAttributeBehavior: ").append(toIndentedString(updateSourceAttributeBehavior)).append("\n");
    sb.append("    sourceAttributeRemovalBehavior: ").append(toIndentedString(sourceAttributeRemovalBehavior)).append("\n");
    sb.append("    updateTargetAttributeBehavior: ").append(toIndentedString(updateTargetAttributeBehavior)).append("\n");
    sb.append("    includeBaseDN: ").append(toIndentedString(includeBaseDN)).append("\n");
    sb.append("    excludeBaseDN: ").append(toIndentedString(excludeBaseDN)).append("\n");
    sb.append("    includeFilter: ").append(toIndentedString(includeFilter)).append("\n");
    sb.append("    excludeFilter: ").append(toIndentedString(excludeFilter)).append("\n");
    sb.append("    updatedEntryNewlyMatchesCriteriaBehavior: ").append(toIndentedString(updatedEntryNewlyMatchesCriteriaBehavior)).append("\n");
    sb.append("    updatedEntryNoLongerMatchesCriteriaBehavior: ").append(toIndentedString(updatedEntryNoLongerMatchesCriteriaBehavior)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    invokeForInternalOperations: ").append(toIndentedString(invokeForInternalOperations)).append("\n");
    sb.append("    meta: ").append(toIndentedString(meta)).append("\n");
    sb.append("    urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20: ").append(toIndentedString(urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("description");
    openapiFields.add("schemas");
    openapiFields.add("pluginType");
    openapiFields.add("attributeType");
    openapiFields.add("valuePattern");
    openapiFields.add("multipleValuePatternBehavior");
    openapiFields.add("multiValuedAttributeBehavior");
    openapiFields.add("targetAttributeExistsDuringInitialPopulationBehavior");
    openapiFields.add("updateSourceAttributeBehavior");
    openapiFields.add("sourceAttributeRemovalBehavior");
    openapiFields.add("updateTargetAttributeBehavior");
    openapiFields.add("includeBaseDN");
    openapiFields.add("excludeBaseDN");
    openapiFields.add("includeFilter");
    openapiFields.add("excludeFilter");
    openapiFields.add("updatedEntryNewlyMatchesCriteriaBehavior");
    openapiFields.add("updatedEntryNoLongerMatchesCriteriaBehavior");
    openapiFields.add("enabled");
    openapiFields.add("invokeForInternalOperations");
    openapiFields.add("meta");
    openapiFields.add("urn:pingidentity:schemas:configuration:messages:2.0");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("schemas");
    openapiRequiredFields.add("pluginType");
    openapiRequiredFields.add("attributeType");
    openapiRequiredFields.add("valuePattern");
    openapiRequiredFields.add("enabled");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ComposedAttributePluginResponse
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ComposedAttributePluginResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ComposedAttributePluginResponse is not found in the empty JSON string", ComposedAttributePluginResponse.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ComposedAttributePluginResponse.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("schemas") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("schemas").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `schemas` to be an array in the JSON string but got `%s`", jsonObj.get("schemas").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("pluginType") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("pluginType").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `pluginType` to be an array in the JSON string but got `%s`", jsonObj.get("pluginType").toString()));
      }
      if (!jsonObj.get("attributeType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `attributeType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("attributeType").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("valuePattern") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("valuePattern").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `valuePattern` to be an array in the JSON string but got `%s`", jsonObj.get("valuePattern").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("includeBaseDN") != null && !jsonObj.get("includeBaseDN").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `includeBaseDN` to be an array in the JSON string but got `%s`", jsonObj.get("includeBaseDN").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("excludeBaseDN") != null && !jsonObj.get("excludeBaseDN").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `excludeBaseDN` to be an array in the JSON string but got `%s`", jsonObj.get("excludeBaseDN").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("includeFilter") != null && !jsonObj.get("includeFilter").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `includeFilter` to be an array in the JSON string but got `%s`", jsonObj.get("includeFilter").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("excludeFilter") != null && !jsonObj.get("excludeFilter").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `excludeFilter` to be an array in the JSON string but got `%s`", jsonObj.get("excludeFilter").toString()));
      }
      // validate the optional field `meta`
      if (jsonObj.get("meta") != null && !jsonObj.get("meta").isJsonNull()) {
        MetaMeta.validateJsonObject(jsonObj.getAsJsonObject("meta"));
      }
      // validate the optional field `urn:pingidentity:schemas:configuration:messages:2.0`
      if (jsonObj.get("urn:pingidentity:schemas:configuration:messages:2.0") != null && !jsonObj.get("urn:pingidentity:schemas:configuration:messages:2.0").isJsonNull()) {
        MetaUrnPingidentitySchemasConfigurationMessages20.validateJsonObject(jsonObj.getAsJsonObject("urn:pingidentity:schemas:configuration:messages:2.0"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ComposedAttributePluginResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ComposedAttributePluginResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ComposedAttributePluginResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ComposedAttributePluginResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<ComposedAttributePluginResponse>() {
           @Override
           public void write(JsonWriter out, ComposedAttributePluginResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public ComposedAttributePluginResponse read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             ComposedAttributePluginResponse instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ComposedAttributePluginResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ComposedAttributePluginResponse
  * @throws IOException if the JSON string is invalid with respect to ComposedAttributePluginResponse
  */
  public static ComposedAttributePluginResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ComposedAttributePluginResponse.class);
  }

 /**
  * Convert an instance of ComposedAttributePluginResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

