/*
 * PingData Config - OpenAPI 3.0
 * This is the PingData Configuration API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.EnumlogPublisherCompressionMechanismProp;
import com.konfigthis.client.model.EnumlogPublisherLoggingErrorBehaviorProp;
import com.konfigthis.client.model.EnumoperationTimingAccessLogPublisherSchemaUrn;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * AddOperationTimingAccessLogPublisherRequest
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class AddOperationTimingAccessLogPublisherRequest {
  public static final String SERIALIZED_NAME_PUBLISHER_NAME = "publisherName";
  @SerializedName(SERIALIZED_NAME_PUBLISHER_NAME)
  private String publisherName;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_SCHEMAS = "schemas";
  @SerializedName(SERIALIZED_NAME_SCHEMAS)
  private List<EnumoperationTimingAccessLogPublisherSchemaUrn> schemas = new ArrayList<>();

  public static final String SERIALIZED_NAME_LOG_FILE = "logFile";
  @SerializedName(SERIALIZED_NAME_LOG_FILE)
  private String logFile;

  public static final String SERIALIZED_NAME_LOG_FILE_PERMISSIONS = "logFilePermissions";
  @SerializedName(SERIALIZED_NAME_LOG_FILE_PERMISSIONS)
  private String logFilePermissions;

  public static final String SERIALIZED_NAME_ROTATION_POLICY = "rotationPolicy";
  @SerializedName(SERIALIZED_NAME_ROTATION_POLICY)
  private List<String> rotationPolicy = null;

  public static final String SERIALIZED_NAME_ROTATION_LISTENER = "rotationListener";
  @SerializedName(SERIALIZED_NAME_ROTATION_LISTENER)
  private List<String> rotationListener = null;

  public static final String SERIALIZED_NAME_RETENTION_POLICY = "retentionPolicy";
  @SerializedName(SERIALIZED_NAME_RETENTION_POLICY)
  private List<String> retentionPolicy = null;

  public static final String SERIALIZED_NAME_COMPRESSION_MECHANISM = "compressionMechanism";
  @SerializedName(SERIALIZED_NAME_COMPRESSION_MECHANISM)
  private EnumlogPublisherCompressionMechanismProp compressionMechanism;

  public static final String SERIALIZED_NAME_SIGN_LOG = "signLog";
  @SerializedName(SERIALIZED_NAME_SIGN_LOG)
  private Boolean signLog;

  public static final String SERIALIZED_NAME_ENCRYPT_LOG = "encryptLog";
  @SerializedName(SERIALIZED_NAME_ENCRYPT_LOG)
  private Boolean encryptLog;

  public static final String SERIALIZED_NAME_ENCRYPTION_SETTINGS_DEFINITION_I_D = "encryptionSettingsDefinitionID";
  @SerializedName(SERIALIZED_NAME_ENCRYPTION_SETTINGS_DEFINITION_I_D)
  private String encryptionSettingsDefinitionID;

  public static final String SERIALIZED_NAME_APPEND = "append";
  @SerializedName(SERIALIZED_NAME_APPEND)
  private Boolean append;

  public static final String SERIALIZED_NAME_INCLUDE_PRODUCT_NAME = "includeProductName";
  @SerializedName(SERIALIZED_NAME_INCLUDE_PRODUCT_NAME)
  private Boolean includeProductName;

  public static final String SERIALIZED_NAME_INCLUDE_INSTANCE_NAME = "includeInstanceName";
  @SerializedName(SERIALIZED_NAME_INCLUDE_INSTANCE_NAME)
  private Boolean includeInstanceName;

  public static final String SERIALIZED_NAME_INCLUDE_STARTUP_I_D = "includeStartupID";
  @SerializedName(SERIALIZED_NAME_INCLUDE_STARTUP_I_D)
  private Boolean includeStartupID;

  public static final String SERIALIZED_NAME_INCLUDE_THREAD_I_D = "includeThreadID";
  @SerializedName(SERIALIZED_NAME_INCLUDE_THREAD_I_D)
  private Boolean includeThreadID;

  public static final String SERIALIZED_NAME_INCLUDE_REQUESTER_I_P_ADDRESS = "includeRequesterIPAddress";
  @SerializedName(SERIALIZED_NAME_INCLUDE_REQUESTER_I_P_ADDRESS)
  private Boolean includeRequesterIPAddress;

  public static final String SERIALIZED_NAME_INCLUDE_REQUESTER_D_N = "includeRequesterDN";
  @SerializedName(SERIALIZED_NAME_INCLUDE_REQUESTER_D_N)
  private Boolean includeRequesterDN;

  public static final String SERIALIZED_NAME_MIN_INCLUDED_OPERATION_PROCESSING_TIME = "minIncludedOperationProcessingTime";
  @SerializedName(SERIALIZED_NAME_MIN_INCLUDED_OPERATION_PROCESSING_TIME)
  private String minIncludedOperationProcessingTime;

  public static final String SERIALIZED_NAME_MIN_INCLUDED_PHASE_TIME_NANOS = "minIncludedPhaseTimeNanos";
  @SerializedName(SERIALIZED_NAME_MIN_INCLUDED_PHASE_TIME_NANOS)
  private Integer minIncludedPhaseTimeNanos;

  public static final String SERIALIZED_NAME_ASYNCHRONOUS = "asynchronous";
  @SerializedName(SERIALIZED_NAME_ASYNCHRONOUS)
  private Boolean asynchronous;

  public static final String SERIALIZED_NAME_AUTO_FLUSH = "autoFlush";
  @SerializedName(SERIALIZED_NAME_AUTO_FLUSH)
  private Boolean autoFlush;

  public static final String SERIALIZED_NAME_BUFFER_SIZE = "bufferSize";
  @SerializedName(SERIALIZED_NAME_BUFFER_SIZE)
  private String bufferSize;

  public static final String SERIALIZED_NAME_MAX_STRING_LENGTH = "maxStringLength";
  @SerializedName(SERIALIZED_NAME_MAX_STRING_LENGTH)
  private Integer maxStringLength;

  public static final String SERIALIZED_NAME_QUEUE_SIZE = "queueSize";
  @SerializedName(SERIALIZED_NAME_QUEUE_SIZE)
  private Integer queueSize;

  public static final String SERIALIZED_NAME_TIME_INTERVAL = "timeInterval";
  @SerializedName(SERIALIZED_NAME_TIME_INTERVAL)
  private String timeInterval;

  public static final String SERIALIZED_NAME_LOG_SECURITY_NEGOTIATION = "logSecurityNegotiation";
  @SerializedName(SERIALIZED_NAME_LOG_SECURITY_NEGOTIATION)
  private Boolean logSecurityNegotiation;

  public static final String SERIALIZED_NAME_LOG_INTERMEDIATE_RESPONSES = "logIntermediateResponses";
  @SerializedName(SERIALIZED_NAME_LOG_INTERMEDIATE_RESPONSES)
  private Boolean logIntermediateResponses;

  public static final String SERIALIZED_NAME_SUPPRESS_INTERNAL_OPERATIONS = "suppressInternalOperations";
  @SerializedName(SERIALIZED_NAME_SUPPRESS_INTERNAL_OPERATIONS)
  private Boolean suppressInternalOperations;

  public static final String SERIALIZED_NAME_SUPPRESS_REPLICATION_OPERATIONS = "suppressReplicationOperations";
  @SerializedName(SERIALIZED_NAME_SUPPRESS_REPLICATION_OPERATIONS)
  private Boolean suppressReplicationOperations;

  public static final String SERIALIZED_NAME_CONNECTION_CRITERIA = "connectionCriteria";
  @SerializedName(SERIALIZED_NAME_CONNECTION_CRITERIA)
  private String connectionCriteria;

  public static final String SERIALIZED_NAME_REQUEST_CRITERIA = "requestCriteria";
  @SerializedName(SERIALIZED_NAME_REQUEST_CRITERIA)
  private String requestCriteria;

  public static final String SERIALIZED_NAME_RESULT_CRITERIA = "resultCriteria";
  @SerializedName(SERIALIZED_NAME_RESULT_CRITERIA)
  private String resultCriteria;

  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled;

  public static final String SERIALIZED_NAME_LOGGING_ERROR_BEHAVIOR = "loggingErrorBehavior";
  @SerializedName(SERIALIZED_NAME_LOGGING_ERROR_BEHAVIOR)
  private EnumlogPublisherLoggingErrorBehaviorProp loggingErrorBehavior;

  public AddOperationTimingAccessLogPublisherRequest() {
  }

  public AddOperationTimingAccessLogPublisherRequest publisherName(String publisherName) {
    
    
    
    
    this.publisherName = publisherName;
    return this;
  }

   /**
   * Name of the new Log Publisher
   * @return publisherName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Name of the new Log Publisher")

  public String getPublisherName() {
    return publisherName;
  }


  public void setPublisherName(String publisherName) {
    
    
    
    this.publisherName = publisherName;
  }


  public AddOperationTimingAccessLogPublisherRequest description(String description) {
    
    
    
    
    this.description = description;
    return this;
  }

   /**
   * A description for this Log Publisher
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A description for this Log Publisher")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    
    
    
    this.description = description;
  }


  public AddOperationTimingAccessLogPublisherRequest schemas(List<EnumoperationTimingAccessLogPublisherSchemaUrn> schemas) {
    
    
    
    
    this.schemas = schemas;
    return this;
  }

  public AddOperationTimingAccessLogPublisherRequest addSchemasItem(EnumoperationTimingAccessLogPublisherSchemaUrn schemasItem) {
    this.schemas.add(schemasItem);
    return this;
  }

   /**
   * Get schemas
   * @return schemas
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<EnumoperationTimingAccessLogPublisherSchemaUrn> getSchemas() {
    return schemas;
  }


  public void setSchemas(List<EnumoperationTimingAccessLogPublisherSchemaUrn> schemas) {
    
    
    
    this.schemas = schemas;
  }


  public AddOperationTimingAccessLogPublisherRequest logFile(String logFile) {
    
    
    
    
    this.logFile = logFile;
    return this;
  }

   /**
   * The file name to use for the log files generated by the Operation Timing Access Log Publisher. The path to the file can be specified either as relative to the server root or as an absolute path.
   * @return logFile
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The file name to use for the log files generated by the Operation Timing Access Log Publisher. The path to the file can be specified either as relative to the server root or as an absolute path.")

  public String getLogFile() {
    return logFile;
  }


  public void setLogFile(String logFile) {
    
    
    
    this.logFile = logFile;
  }


  public AddOperationTimingAccessLogPublisherRequest logFilePermissions(String logFilePermissions) {
    
    
    
    
    this.logFilePermissions = logFilePermissions;
    return this;
  }

   /**
   * The UNIX permissions of the log files created by this Operation Timing Access Log Publisher.
   * @return logFilePermissions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The UNIX permissions of the log files created by this Operation Timing Access Log Publisher.")

  public String getLogFilePermissions() {
    return logFilePermissions;
  }


  public void setLogFilePermissions(String logFilePermissions) {
    
    
    
    this.logFilePermissions = logFilePermissions;
  }


  public AddOperationTimingAccessLogPublisherRequest rotationPolicy(List<String> rotationPolicy) {
    
    
    
    
    this.rotationPolicy = rotationPolicy;
    return this;
  }

  public AddOperationTimingAccessLogPublisherRequest addRotationPolicyItem(String rotationPolicyItem) {
    if (this.rotationPolicy == null) {
      this.rotationPolicy = new ArrayList<>();
    }
    this.rotationPolicy.add(rotationPolicyItem);
    return this;
  }

   /**
   * The rotation policy to use for the Operation Timing Access Log Publisher .
   * @return rotationPolicy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The rotation policy to use for the Operation Timing Access Log Publisher .")

  public List<String> getRotationPolicy() {
    return rotationPolicy;
  }


  public void setRotationPolicy(List<String> rotationPolicy) {
    
    
    
    this.rotationPolicy = rotationPolicy;
  }


  public AddOperationTimingAccessLogPublisherRequest rotationListener(List<String> rotationListener) {
    
    
    
    
    this.rotationListener = rotationListener;
    return this;
  }

  public AddOperationTimingAccessLogPublisherRequest addRotationListenerItem(String rotationListenerItem) {
    if (this.rotationListener == null) {
      this.rotationListener = new ArrayList<>();
    }
    this.rotationListener.add(rotationListenerItem);
    return this;
  }

   /**
   * A listener that should be notified whenever a log file is rotated out of service.
   * @return rotationListener
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A listener that should be notified whenever a log file is rotated out of service.")

  public List<String> getRotationListener() {
    return rotationListener;
  }


  public void setRotationListener(List<String> rotationListener) {
    
    
    
    this.rotationListener = rotationListener;
  }


  public AddOperationTimingAccessLogPublisherRequest retentionPolicy(List<String> retentionPolicy) {
    
    
    
    
    this.retentionPolicy = retentionPolicy;
    return this;
  }

  public AddOperationTimingAccessLogPublisherRequest addRetentionPolicyItem(String retentionPolicyItem) {
    if (this.retentionPolicy == null) {
      this.retentionPolicy = new ArrayList<>();
    }
    this.retentionPolicy.add(retentionPolicyItem);
    return this;
  }

   /**
   * The retention policy to use for the Operation Timing Access Log Publisher .
   * @return retentionPolicy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The retention policy to use for the Operation Timing Access Log Publisher .")

  public List<String> getRetentionPolicy() {
    return retentionPolicy;
  }


  public void setRetentionPolicy(List<String> retentionPolicy) {
    
    
    
    this.retentionPolicy = retentionPolicy;
  }


  public AddOperationTimingAccessLogPublisherRequest compressionMechanism(EnumlogPublisherCompressionMechanismProp compressionMechanism) {
    
    
    
    
    this.compressionMechanism = compressionMechanism;
    return this;
  }

   /**
   * Get compressionMechanism
   * @return compressionMechanism
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EnumlogPublisherCompressionMechanismProp getCompressionMechanism() {
    return compressionMechanism;
  }


  public void setCompressionMechanism(EnumlogPublisherCompressionMechanismProp compressionMechanism) {
    
    
    
    this.compressionMechanism = compressionMechanism;
  }


  public AddOperationTimingAccessLogPublisherRequest signLog(Boolean signLog) {
    
    
    
    
    this.signLog = signLog;
    return this;
  }

   /**
   * Indicates whether the log should be cryptographically signed so that the log content cannot be altered in an undetectable manner.
   * @return signLog
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether the log should be cryptographically signed so that the log content cannot be altered in an undetectable manner.")

  public Boolean getSignLog() {
    return signLog;
  }


  public void setSignLog(Boolean signLog) {
    
    
    
    this.signLog = signLog;
  }


  public AddOperationTimingAccessLogPublisherRequest encryptLog(Boolean encryptLog) {
    
    
    
    
    this.encryptLog = encryptLog;
    return this;
  }

   /**
   * Indicates whether log files should be encrypted so that their content is not available to unauthorized users.
   * @return encryptLog
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether log files should be encrypted so that their content is not available to unauthorized users.")

  public Boolean getEncryptLog() {
    return encryptLog;
  }


  public void setEncryptLog(Boolean encryptLog) {
    
    
    
    this.encryptLog = encryptLog;
  }


  public AddOperationTimingAccessLogPublisherRequest encryptionSettingsDefinitionID(String encryptionSettingsDefinitionID) {
    
    
    
    
    this.encryptionSettingsDefinitionID = encryptionSettingsDefinitionID;
    return this;
  }

   /**
   * Specifies the ID of the encryption settings definition that should be used to encrypt the data. If this is not provided, the server&#39;s preferred encryption settings definition will be used. The \&quot;encryption-settings list\&quot; command can be used to obtain a list of the encryption settings definitions available in the server.
   * @return encryptionSettingsDefinitionID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the ID of the encryption settings definition that should be used to encrypt the data. If this is not provided, the server's preferred encryption settings definition will be used. The \"encryption-settings list\" command can be used to obtain a list of the encryption settings definitions available in the server.")

  public String getEncryptionSettingsDefinitionID() {
    return encryptionSettingsDefinitionID;
  }


  public void setEncryptionSettingsDefinitionID(String encryptionSettingsDefinitionID) {
    
    
    
    this.encryptionSettingsDefinitionID = encryptionSettingsDefinitionID;
  }


  public AddOperationTimingAccessLogPublisherRequest append(Boolean append) {
    
    
    
    
    this.append = append;
    return this;
  }

   /**
   * Specifies whether to append to existing log files.
   * @return append
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies whether to append to existing log files.")

  public Boolean getAppend() {
    return append;
  }


  public void setAppend(Boolean append) {
    
    
    
    this.append = append;
  }


  public AddOperationTimingAccessLogPublisherRequest includeProductName(Boolean includeProductName) {
    
    
    
    
    this.includeProductName = includeProductName;
    return this;
  }

   /**
   * Indicates whether log messages should include the product name for the Directory Server.
   * @return includeProductName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether log messages should include the product name for the Directory Server.")

  public Boolean getIncludeProductName() {
    return includeProductName;
  }


  public void setIncludeProductName(Boolean includeProductName) {
    
    
    
    this.includeProductName = includeProductName;
  }


  public AddOperationTimingAccessLogPublisherRequest includeInstanceName(Boolean includeInstanceName) {
    
    
    
    
    this.includeInstanceName = includeInstanceName;
    return this;
  }

   /**
   * Indicates whether log messages should include the instance name for the Directory Server.
   * @return includeInstanceName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether log messages should include the instance name for the Directory Server.")

  public Boolean getIncludeInstanceName() {
    return includeInstanceName;
  }


  public void setIncludeInstanceName(Boolean includeInstanceName) {
    
    
    
    this.includeInstanceName = includeInstanceName;
  }


  public AddOperationTimingAccessLogPublisherRequest includeStartupID(Boolean includeStartupID) {
    
    
    
    
    this.includeStartupID = includeStartupID;
    return this;
  }

   /**
   * Indicates whether log messages should include the startup ID for the Directory Server, which is a value assigned to the server instance at startup and may be used to identify when the server has been restarted.
   * @return includeStartupID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether log messages should include the startup ID for the Directory Server, which is a value assigned to the server instance at startup and may be used to identify when the server has been restarted.")

  public Boolean getIncludeStartupID() {
    return includeStartupID;
  }


  public void setIncludeStartupID(Boolean includeStartupID) {
    
    
    
    this.includeStartupID = includeStartupID;
  }


  public AddOperationTimingAccessLogPublisherRequest includeThreadID(Boolean includeThreadID) {
    
    
    
    
    this.includeThreadID = includeThreadID;
    return this;
  }

   /**
   * Indicates whether log messages should include the thread ID for the Directory Server in each log message. This ID can be used to correlate log messages from the same thread within a single log as well as generated by the same thread across different types of log files. More information about the thread with a specific ID can be obtained using the cn&#x3D;JVM Stack Trace,cn&#x3D;monitor entry.
   * @return includeThreadID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether log messages should include the thread ID for the Directory Server in each log message. This ID can be used to correlate log messages from the same thread within a single log as well as generated by the same thread across different types of log files. More information about the thread with a specific ID can be obtained using the cn=JVM Stack Trace,cn=monitor entry.")

  public Boolean getIncludeThreadID() {
    return includeThreadID;
  }


  public void setIncludeThreadID(Boolean includeThreadID) {
    
    
    
    this.includeThreadID = includeThreadID;
  }


  public AddOperationTimingAccessLogPublisherRequest includeRequesterIPAddress(Boolean includeRequesterIPAddress) {
    
    
    
    
    this.includeRequesterIPAddress = includeRequesterIPAddress;
    return this;
  }

   /**
   * Indicates whether log messages for operation requests should include the IP address of the client that requested the operation.
   * @return includeRequesterIPAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether log messages for operation requests should include the IP address of the client that requested the operation.")

  public Boolean getIncludeRequesterIPAddress() {
    return includeRequesterIPAddress;
  }


  public void setIncludeRequesterIPAddress(Boolean includeRequesterIPAddress) {
    
    
    
    this.includeRequesterIPAddress = includeRequesterIPAddress;
  }


  public AddOperationTimingAccessLogPublisherRequest includeRequesterDN(Boolean includeRequesterDN) {
    
    
    
    
    this.includeRequesterDN = includeRequesterDN;
    return this;
  }

   /**
   * Indicates whether log messages should include the DN of the authenticated user for the client connection on which the operation was requested.
   * @return includeRequesterDN
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether log messages should include the DN of the authenticated user for the client connection on which the operation was requested.")

  public Boolean getIncludeRequesterDN() {
    return includeRequesterDN;
  }


  public void setIncludeRequesterDN(Boolean includeRequesterDN) {
    
    
    
    this.includeRequesterDN = includeRequesterDN;
  }


  public AddOperationTimingAccessLogPublisherRequest minIncludedOperationProcessingTime(String minIncludedOperationProcessingTime) {
    
    
    
    
    this.minIncludedOperationProcessingTime = minIncludedOperationProcessingTime;
    return this;
  }

   /**
   * The minimum processing time (i.e., \&quot;etime\&quot;) for operations that should be logged by this Operation Timing Access Log Publisher
   * @return minIncludedOperationProcessingTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The minimum processing time (i.e., \"etime\") for operations that should be logged by this Operation Timing Access Log Publisher")

  public String getMinIncludedOperationProcessingTime() {
    return minIncludedOperationProcessingTime;
  }


  public void setMinIncludedOperationProcessingTime(String minIncludedOperationProcessingTime) {
    
    
    
    this.minIncludedOperationProcessingTime = minIncludedOperationProcessingTime;
  }


  public AddOperationTimingAccessLogPublisherRequest minIncludedPhaseTimeNanos(Integer minIncludedPhaseTimeNanos) {
    
    
    
    
    this.minIncludedPhaseTimeNanos = minIncludedPhaseTimeNanos;
    return this;
  }

   /**
   * The minimum length of time in nanoseconds that an operation phase should take before it is included in a log message.
   * @return minIncludedPhaseTimeNanos
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The minimum length of time in nanoseconds that an operation phase should take before it is included in a log message.")

  public Integer getMinIncludedPhaseTimeNanos() {
    return minIncludedPhaseTimeNanos;
  }


  public void setMinIncludedPhaseTimeNanos(Integer minIncludedPhaseTimeNanos) {
    
    
    
    this.minIncludedPhaseTimeNanos = minIncludedPhaseTimeNanos;
  }


  public AddOperationTimingAccessLogPublisherRequest asynchronous(Boolean asynchronous) {
    
    
    
    
    this.asynchronous = asynchronous;
    return this;
  }

   /**
   * Indicates whether the Operation Timing Access Log Publisher will publish records asynchronously.
   * @return asynchronous
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether the Operation Timing Access Log Publisher will publish records asynchronously.")

  public Boolean getAsynchronous() {
    return asynchronous;
  }


  public void setAsynchronous(Boolean asynchronous) {
    
    
    
    this.asynchronous = asynchronous;
  }


  public AddOperationTimingAccessLogPublisherRequest autoFlush(Boolean autoFlush) {
    
    
    
    
    this.autoFlush = autoFlush;
    return this;
  }

   /**
   * Specifies whether to flush the writer after every log record.
   * @return autoFlush
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies whether to flush the writer after every log record.")

  public Boolean getAutoFlush() {
    return autoFlush;
  }


  public void setAutoFlush(Boolean autoFlush) {
    
    
    
    this.autoFlush = autoFlush;
  }


  public AddOperationTimingAccessLogPublisherRequest bufferSize(String bufferSize) {
    
    
    
    
    this.bufferSize = bufferSize;
    return this;
  }

   /**
   * Specifies the log file buffer size.
   * @return bufferSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the log file buffer size.")

  public String getBufferSize() {
    return bufferSize;
  }


  public void setBufferSize(String bufferSize) {
    
    
    
    this.bufferSize = bufferSize;
  }


  public AddOperationTimingAccessLogPublisherRequest maxStringLength(Integer maxStringLength) {
    
    
    
    
    this.maxStringLength = maxStringLength;
    return this;
  }

   /**
   * Specifies the maximum number of characters that may be included in any string in a log message before that string is truncated and replaced with a placeholder indicating the number of characters that were omitted. This can help prevent extremely long log messages from being written.
   * @return maxStringLength
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the maximum number of characters that may be included in any string in a log message before that string is truncated and replaced with a placeholder indicating the number of characters that were omitted. This can help prevent extremely long log messages from being written.")

  public Integer getMaxStringLength() {
    return maxStringLength;
  }


  public void setMaxStringLength(Integer maxStringLength) {
    
    
    
    this.maxStringLength = maxStringLength;
  }


  public AddOperationTimingAccessLogPublisherRequest queueSize(Integer queueSize) {
    
    
    
    
    this.queueSize = queueSize;
    return this;
  }

   /**
   * The maximum number of log records that can be stored in the asynchronous queue.
   * @return queueSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The maximum number of log records that can be stored in the asynchronous queue.")

  public Integer getQueueSize() {
    return queueSize;
  }


  public void setQueueSize(Integer queueSize) {
    
    
    
    this.queueSize = queueSize;
  }


  public AddOperationTimingAccessLogPublisherRequest timeInterval(String timeInterval) {
    
    
    
    
    this.timeInterval = timeInterval;
    return this;
  }

   /**
   * Specifies the interval at which to check whether the log files need to be rotated.
   * @return timeInterval
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the interval at which to check whether the log files need to be rotated.")

  public String getTimeInterval() {
    return timeInterval;
  }


  public void setTimeInterval(String timeInterval) {
    
    
    
    this.timeInterval = timeInterval;
  }


  public AddOperationTimingAccessLogPublisherRequest logSecurityNegotiation(Boolean logSecurityNegotiation) {
    
    
    
    
    this.logSecurityNegotiation = logSecurityNegotiation;
    return this;
  }

   /**
   * Indicates whether to log information about the result of any security negotiation (e.g., SSL handshake) processing that has been performed.
   * @return logSecurityNegotiation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether to log information about the result of any security negotiation (e.g., SSL handshake) processing that has been performed.")

  public Boolean getLogSecurityNegotiation() {
    return logSecurityNegotiation;
  }


  public void setLogSecurityNegotiation(Boolean logSecurityNegotiation) {
    
    
    
    this.logSecurityNegotiation = logSecurityNegotiation;
  }


  public AddOperationTimingAccessLogPublisherRequest logIntermediateResponses(Boolean logIntermediateResponses) {
    
    
    
    
    this.logIntermediateResponses = logIntermediateResponses;
    return this;
  }

   /**
   * Indicates whether to log information about intermediate responses sent to the client.
   * @return logIntermediateResponses
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether to log information about intermediate responses sent to the client.")

  public Boolean getLogIntermediateResponses() {
    return logIntermediateResponses;
  }


  public void setLogIntermediateResponses(Boolean logIntermediateResponses) {
    
    
    
    this.logIntermediateResponses = logIntermediateResponses;
  }


  public AddOperationTimingAccessLogPublisherRequest suppressInternalOperations(Boolean suppressInternalOperations) {
    
    
    
    
    this.suppressInternalOperations = suppressInternalOperations;
    return this;
  }

   /**
   * Indicates whether internal operations (for example, operations that are initiated by plugins) should be logged along with the operations that are requested by users.
   * @return suppressInternalOperations
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether internal operations (for example, operations that are initiated by plugins) should be logged along with the operations that are requested by users.")

  public Boolean getSuppressInternalOperations() {
    return suppressInternalOperations;
  }


  public void setSuppressInternalOperations(Boolean suppressInternalOperations) {
    
    
    
    this.suppressInternalOperations = suppressInternalOperations;
  }


  public AddOperationTimingAccessLogPublisherRequest suppressReplicationOperations(Boolean suppressReplicationOperations) {
    
    
    
    
    this.suppressReplicationOperations = suppressReplicationOperations;
    return this;
  }

   /**
   * Indicates whether access messages that are generated by replication operations should be suppressed.
   * @return suppressReplicationOperations
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether access messages that are generated by replication operations should be suppressed.")

  public Boolean getSuppressReplicationOperations() {
    return suppressReplicationOperations;
  }


  public void setSuppressReplicationOperations(Boolean suppressReplicationOperations) {
    
    
    
    this.suppressReplicationOperations = suppressReplicationOperations;
  }


  public AddOperationTimingAccessLogPublisherRequest connectionCriteria(String connectionCriteria) {
    
    
    
    
    this.connectionCriteria = connectionCriteria;
    return this;
  }

   /**
   * Specifies a set of connection criteria that must match the associated client connection in order for a connect, disconnect, request, or result message to be logged.
   * @return connectionCriteria
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies a set of connection criteria that must match the associated client connection in order for a connect, disconnect, request, or result message to be logged.")

  public String getConnectionCriteria() {
    return connectionCriteria;
  }


  public void setConnectionCriteria(String connectionCriteria) {
    
    
    
    this.connectionCriteria = connectionCriteria;
  }


  public AddOperationTimingAccessLogPublisherRequest requestCriteria(String requestCriteria) {
    
    
    
    
    this.requestCriteria = requestCriteria;
    return this;
  }

   /**
   * Specifies a set of request criteria that must match the associated operation request in order for a request or result to be logged by this Access Log Publisher.
   * @return requestCriteria
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies a set of request criteria that must match the associated operation request in order for a request or result to be logged by this Access Log Publisher.")

  public String getRequestCriteria() {
    return requestCriteria;
  }


  public void setRequestCriteria(String requestCriteria) {
    
    
    
    this.requestCriteria = requestCriteria;
  }


  public AddOperationTimingAccessLogPublisherRequest resultCriteria(String resultCriteria) {
    
    
    
    
    this.resultCriteria = resultCriteria;
    return this;
  }

   /**
   * Specifies a set of result criteria that must match the associated operation result in order for that result to be logged by this Access Log Publisher.
   * @return resultCriteria
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies a set of result criteria that must match the associated operation result in order for that result to be logged by this Access Log Publisher.")

  public String getResultCriteria() {
    return resultCriteria;
  }


  public void setResultCriteria(String resultCriteria) {
    
    
    
    this.resultCriteria = resultCriteria;
  }


  public AddOperationTimingAccessLogPublisherRequest enabled(Boolean enabled) {
    
    
    
    
    this.enabled = enabled;
    return this;
  }

   /**
   * Indicates whether the Log Publisher is enabled for use.
   * @return enabled
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Indicates whether the Log Publisher is enabled for use.")

  public Boolean getEnabled() {
    return enabled;
  }


  public void setEnabled(Boolean enabled) {
    
    
    
    this.enabled = enabled;
  }


  public AddOperationTimingAccessLogPublisherRequest loggingErrorBehavior(EnumlogPublisherLoggingErrorBehaviorProp loggingErrorBehavior) {
    
    
    
    
    this.loggingErrorBehavior = loggingErrorBehavior;
    return this;
  }

   /**
   * Get loggingErrorBehavior
   * @return loggingErrorBehavior
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EnumlogPublisherLoggingErrorBehaviorProp getLoggingErrorBehavior() {
    return loggingErrorBehavior;
  }


  public void setLoggingErrorBehavior(EnumlogPublisherLoggingErrorBehaviorProp loggingErrorBehavior) {
    
    
    
    this.loggingErrorBehavior = loggingErrorBehavior;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the AddOperationTimingAccessLogPublisherRequest instance itself
   */
  public AddOperationTimingAccessLogPublisherRequest putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AddOperationTimingAccessLogPublisherRequest addOperationTimingAccessLogPublisherRequest = (AddOperationTimingAccessLogPublisherRequest) o;
    return Objects.equals(this.publisherName, addOperationTimingAccessLogPublisherRequest.publisherName) &&
        Objects.equals(this.description, addOperationTimingAccessLogPublisherRequest.description) &&
        Objects.equals(this.schemas, addOperationTimingAccessLogPublisherRequest.schemas) &&
        Objects.equals(this.logFile, addOperationTimingAccessLogPublisherRequest.logFile) &&
        Objects.equals(this.logFilePermissions, addOperationTimingAccessLogPublisherRequest.logFilePermissions) &&
        Objects.equals(this.rotationPolicy, addOperationTimingAccessLogPublisherRequest.rotationPolicy) &&
        Objects.equals(this.rotationListener, addOperationTimingAccessLogPublisherRequest.rotationListener) &&
        Objects.equals(this.retentionPolicy, addOperationTimingAccessLogPublisherRequest.retentionPolicy) &&
        Objects.equals(this.compressionMechanism, addOperationTimingAccessLogPublisherRequest.compressionMechanism) &&
        Objects.equals(this.signLog, addOperationTimingAccessLogPublisherRequest.signLog) &&
        Objects.equals(this.encryptLog, addOperationTimingAccessLogPublisherRequest.encryptLog) &&
        Objects.equals(this.encryptionSettingsDefinitionID, addOperationTimingAccessLogPublisherRequest.encryptionSettingsDefinitionID) &&
        Objects.equals(this.append, addOperationTimingAccessLogPublisherRequest.append) &&
        Objects.equals(this.includeProductName, addOperationTimingAccessLogPublisherRequest.includeProductName) &&
        Objects.equals(this.includeInstanceName, addOperationTimingAccessLogPublisherRequest.includeInstanceName) &&
        Objects.equals(this.includeStartupID, addOperationTimingAccessLogPublisherRequest.includeStartupID) &&
        Objects.equals(this.includeThreadID, addOperationTimingAccessLogPublisherRequest.includeThreadID) &&
        Objects.equals(this.includeRequesterIPAddress, addOperationTimingAccessLogPublisherRequest.includeRequesterIPAddress) &&
        Objects.equals(this.includeRequesterDN, addOperationTimingAccessLogPublisherRequest.includeRequesterDN) &&
        Objects.equals(this.minIncludedOperationProcessingTime, addOperationTimingAccessLogPublisherRequest.minIncludedOperationProcessingTime) &&
        Objects.equals(this.minIncludedPhaseTimeNanos, addOperationTimingAccessLogPublisherRequest.minIncludedPhaseTimeNanos) &&
        Objects.equals(this.asynchronous, addOperationTimingAccessLogPublisherRequest.asynchronous) &&
        Objects.equals(this.autoFlush, addOperationTimingAccessLogPublisherRequest.autoFlush) &&
        Objects.equals(this.bufferSize, addOperationTimingAccessLogPublisherRequest.bufferSize) &&
        Objects.equals(this.maxStringLength, addOperationTimingAccessLogPublisherRequest.maxStringLength) &&
        Objects.equals(this.queueSize, addOperationTimingAccessLogPublisherRequest.queueSize) &&
        Objects.equals(this.timeInterval, addOperationTimingAccessLogPublisherRequest.timeInterval) &&
        Objects.equals(this.logSecurityNegotiation, addOperationTimingAccessLogPublisherRequest.logSecurityNegotiation) &&
        Objects.equals(this.logIntermediateResponses, addOperationTimingAccessLogPublisherRequest.logIntermediateResponses) &&
        Objects.equals(this.suppressInternalOperations, addOperationTimingAccessLogPublisherRequest.suppressInternalOperations) &&
        Objects.equals(this.suppressReplicationOperations, addOperationTimingAccessLogPublisherRequest.suppressReplicationOperations) &&
        Objects.equals(this.connectionCriteria, addOperationTimingAccessLogPublisherRequest.connectionCriteria) &&
        Objects.equals(this.requestCriteria, addOperationTimingAccessLogPublisherRequest.requestCriteria) &&
        Objects.equals(this.resultCriteria, addOperationTimingAccessLogPublisherRequest.resultCriteria) &&
        Objects.equals(this.enabled, addOperationTimingAccessLogPublisherRequest.enabled) &&
        Objects.equals(this.loggingErrorBehavior, addOperationTimingAccessLogPublisherRequest.loggingErrorBehavior)&&
        Objects.equals(this.additionalProperties, addOperationTimingAccessLogPublisherRequest.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(publisherName, description, schemas, logFile, logFilePermissions, rotationPolicy, rotationListener, retentionPolicy, compressionMechanism, signLog, encryptLog, encryptionSettingsDefinitionID, append, includeProductName, includeInstanceName, includeStartupID, includeThreadID, includeRequesterIPAddress, includeRequesterDN, minIncludedOperationProcessingTime, minIncludedPhaseTimeNanos, asynchronous, autoFlush, bufferSize, maxStringLength, queueSize, timeInterval, logSecurityNegotiation, logIntermediateResponses, suppressInternalOperations, suppressReplicationOperations, connectionCriteria, requestCriteria, resultCriteria, enabled, loggingErrorBehavior, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AddOperationTimingAccessLogPublisherRequest {\n");
    sb.append("    publisherName: ").append(toIndentedString(publisherName)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    schemas: ").append(toIndentedString(schemas)).append("\n");
    sb.append("    logFile: ").append(toIndentedString(logFile)).append("\n");
    sb.append("    logFilePermissions: ").append(toIndentedString(logFilePermissions)).append("\n");
    sb.append("    rotationPolicy: ").append(toIndentedString(rotationPolicy)).append("\n");
    sb.append("    rotationListener: ").append(toIndentedString(rotationListener)).append("\n");
    sb.append("    retentionPolicy: ").append(toIndentedString(retentionPolicy)).append("\n");
    sb.append("    compressionMechanism: ").append(toIndentedString(compressionMechanism)).append("\n");
    sb.append("    signLog: ").append(toIndentedString(signLog)).append("\n");
    sb.append("    encryptLog: ").append(toIndentedString(encryptLog)).append("\n");
    sb.append("    encryptionSettingsDefinitionID: ").append(toIndentedString(encryptionSettingsDefinitionID)).append("\n");
    sb.append("    append: ").append(toIndentedString(append)).append("\n");
    sb.append("    includeProductName: ").append(toIndentedString(includeProductName)).append("\n");
    sb.append("    includeInstanceName: ").append(toIndentedString(includeInstanceName)).append("\n");
    sb.append("    includeStartupID: ").append(toIndentedString(includeStartupID)).append("\n");
    sb.append("    includeThreadID: ").append(toIndentedString(includeThreadID)).append("\n");
    sb.append("    includeRequesterIPAddress: ").append(toIndentedString(includeRequesterIPAddress)).append("\n");
    sb.append("    includeRequesterDN: ").append(toIndentedString(includeRequesterDN)).append("\n");
    sb.append("    minIncludedOperationProcessingTime: ").append(toIndentedString(minIncludedOperationProcessingTime)).append("\n");
    sb.append("    minIncludedPhaseTimeNanos: ").append(toIndentedString(minIncludedPhaseTimeNanos)).append("\n");
    sb.append("    asynchronous: ").append(toIndentedString(asynchronous)).append("\n");
    sb.append("    autoFlush: ").append(toIndentedString(autoFlush)).append("\n");
    sb.append("    bufferSize: ").append(toIndentedString(bufferSize)).append("\n");
    sb.append("    maxStringLength: ").append(toIndentedString(maxStringLength)).append("\n");
    sb.append("    queueSize: ").append(toIndentedString(queueSize)).append("\n");
    sb.append("    timeInterval: ").append(toIndentedString(timeInterval)).append("\n");
    sb.append("    logSecurityNegotiation: ").append(toIndentedString(logSecurityNegotiation)).append("\n");
    sb.append("    logIntermediateResponses: ").append(toIndentedString(logIntermediateResponses)).append("\n");
    sb.append("    suppressInternalOperations: ").append(toIndentedString(suppressInternalOperations)).append("\n");
    sb.append("    suppressReplicationOperations: ").append(toIndentedString(suppressReplicationOperations)).append("\n");
    sb.append("    connectionCriteria: ").append(toIndentedString(connectionCriteria)).append("\n");
    sb.append("    requestCriteria: ").append(toIndentedString(requestCriteria)).append("\n");
    sb.append("    resultCriteria: ").append(toIndentedString(resultCriteria)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    loggingErrorBehavior: ").append(toIndentedString(loggingErrorBehavior)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("publisherName");
    openapiFields.add("description");
    openapiFields.add("schemas");
    openapiFields.add("logFile");
    openapiFields.add("logFilePermissions");
    openapiFields.add("rotationPolicy");
    openapiFields.add("rotationListener");
    openapiFields.add("retentionPolicy");
    openapiFields.add("compressionMechanism");
    openapiFields.add("signLog");
    openapiFields.add("encryptLog");
    openapiFields.add("encryptionSettingsDefinitionID");
    openapiFields.add("append");
    openapiFields.add("includeProductName");
    openapiFields.add("includeInstanceName");
    openapiFields.add("includeStartupID");
    openapiFields.add("includeThreadID");
    openapiFields.add("includeRequesterIPAddress");
    openapiFields.add("includeRequesterDN");
    openapiFields.add("minIncludedOperationProcessingTime");
    openapiFields.add("minIncludedPhaseTimeNanos");
    openapiFields.add("asynchronous");
    openapiFields.add("autoFlush");
    openapiFields.add("bufferSize");
    openapiFields.add("maxStringLength");
    openapiFields.add("queueSize");
    openapiFields.add("timeInterval");
    openapiFields.add("logSecurityNegotiation");
    openapiFields.add("logIntermediateResponses");
    openapiFields.add("suppressInternalOperations");
    openapiFields.add("suppressReplicationOperations");
    openapiFields.add("connectionCriteria");
    openapiFields.add("requestCriteria");
    openapiFields.add("resultCriteria");
    openapiFields.add("enabled");
    openapiFields.add("loggingErrorBehavior");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("publisherName");
    openapiRequiredFields.add("schemas");
    openapiRequiredFields.add("logFile");
    openapiRequiredFields.add("enabled");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to AddOperationTimingAccessLogPublisherRequest
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!AddOperationTimingAccessLogPublisherRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AddOperationTimingAccessLogPublisherRequest is not found in the empty JSON string", AddOperationTimingAccessLogPublisherRequest.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : AddOperationTimingAccessLogPublisherRequest.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("publisherName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `publisherName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("publisherName").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("schemas") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("schemas").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `schemas` to be an array in the JSON string but got `%s`", jsonObj.get("schemas").toString()));
      }
      if (!jsonObj.get("logFile").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logFile` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logFile").toString()));
      }
      if ((jsonObj.get("logFilePermissions") != null && !jsonObj.get("logFilePermissions").isJsonNull()) && !jsonObj.get("logFilePermissions").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logFilePermissions` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logFilePermissions").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("rotationPolicy") != null && !jsonObj.get("rotationPolicy").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `rotationPolicy` to be an array in the JSON string but got `%s`", jsonObj.get("rotationPolicy").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("rotationListener") != null && !jsonObj.get("rotationListener").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `rotationListener` to be an array in the JSON string but got `%s`", jsonObj.get("rotationListener").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("retentionPolicy") != null && !jsonObj.get("retentionPolicy").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `retentionPolicy` to be an array in the JSON string but got `%s`", jsonObj.get("retentionPolicy").toString()));
      }
      if ((jsonObj.get("encryptionSettingsDefinitionID") != null && !jsonObj.get("encryptionSettingsDefinitionID").isJsonNull()) && !jsonObj.get("encryptionSettingsDefinitionID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `encryptionSettingsDefinitionID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("encryptionSettingsDefinitionID").toString()));
      }
      if ((jsonObj.get("minIncludedOperationProcessingTime") != null && !jsonObj.get("minIncludedOperationProcessingTime").isJsonNull()) && !jsonObj.get("minIncludedOperationProcessingTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `minIncludedOperationProcessingTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("minIncludedOperationProcessingTime").toString()));
      }
      if ((jsonObj.get("bufferSize") != null && !jsonObj.get("bufferSize").isJsonNull()) && !jsonObj.get("bufferSize").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bufferSize` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bufferSize").toString()));
      }
      if ((jsonObj.get("timeInterval") != null && !jsonObj.get("timeInterval").isJsonNull()) && !jsonObj.get("timeInterval").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timeInterval` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timeInterval").toString()));
      }
      if ((jsonObj.get("connectionCriteria") != null && !jsonObj.get("connectionCriteria").isJsonNull()) && !jsonObj.get("connectionCriteria").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `connectionCriteria` to be a primitive type in the JSON string but got `%s`", jsonObj.get("connectionCriteria").toString()));
      }
      if ((jsonObj.get("requestCriteria") != null && !jsonObj.get("requestCriteria").isJsonNull()) && !jsonObj.get("requestCriteria").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `requestCriteria` to be a primitive type in the JSON string but got `%s`", jsonObj.get("requestCriteria").toString()));
      }
      if ((jsonObj.get("resultCriteria") != null && !jsonObj.get("resultCriteria").isJsonNull()) && !jsonObj.get("resultCriteria").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resultCriteria` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resultCriteria").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AddOperationTimingAccessLogPublisherRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AddOperationTimingAccessLogPublisherRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AddOperationTimingAccessLogPublisherRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AddOperationTimingAccessLogPublisherRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<AddOperationTimingAccessLogPublisherRequest>() {
           @Override
           public void write(JsonWriter out, AddOperationTimingAccessLogPublisherRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public AddOperationTimingAccessLogPublisherRequest read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             AddOperationTimingAccessLogPublisherRequest instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AddOperationTimingAccessLogPublisherRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AddOperationTimingAccessLogPublisherRequest
  * @throws IOException if the JSON string is invalid with respect to AddOperationTimingAccessLogPublisherRequest
  */
  public static AddOperationTimingAccessLogPublisherRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AddOperationTimingAccessLogPublisherRequest.class);
  }

 /**
  * Convert an instance of AddOperationTimingAccessLogPublisherRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

