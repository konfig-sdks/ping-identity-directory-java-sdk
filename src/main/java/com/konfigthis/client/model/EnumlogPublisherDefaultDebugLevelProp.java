/*
 * PingData Config - OpenAPI 3.0
 * This is the PingData Configuration API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * The lowest severity level of debug messages to log when none of the defined targets match the message.
 */
@JsonAdapter(EnumlogPublisherDefaultDebugLevelProp.Adapter.class)public enum EnumlogPublisherDefaultDebugLevelProp {
  
  DISABLED("disabled"),
  
  ERROR("error"),
  
  WARNING("warning"),
  
  INFO("info"),
  
  VERBOSE("verbose"),
  
  ALL("all");

  private String value;

  EnumlogPublisherDefaultDebugLevelProp(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static EnumlogPublisherDefaultDebugLevelProp fromValue(String value) {
    for (EnumlogPublisherDefaultDebugLevelProp b : EnumlogPublisherDefaultDebugLevelProp.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<EnumlogPublisherDefaultDebugLevelProp> {
    @Override
    public void write(final JsonWriter jsonWriter, final EnumlogPublisherDefaultDebugLevelProp enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public EnumlogPublisherDefaultDebugLevelProp read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return EnumlogPublisherDefaultDebugLevelProp.fromValue(value);
    }
  }
}

