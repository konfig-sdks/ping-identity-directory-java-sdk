/*
 * PingData Config - OpenAPI 3.0
 * This is the PingData Configuration API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.EnumpluginRootSchemaUrn;
import com.konfigthis.client.model.MetaMeta;
import com.konfigthis.client.model.MetaUrnPingidentitySchemasConfigurationMessages20;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * PluginRootResponse
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class PluginRootResponse {
  public static final String SERIALIZED_NAME_SCHEMAS = "schemas";
  @SerializedName(SERIALIZED_NAME_SCHEMAS)
  private List<EnumpluginRootSchemaUrn> schemas = null;

  public static final String SERIALIZED_NAME_PLUGIN_ORDER_STARTUP = "pluginOrderStartup";
  @SerializedName(SERIALIZED_NAME_PLUGIN_ORDER_STARTUP)
  private String pluginOrderStartup;

  public static final String SERIALIZED_NAME_PLUGIN_ORDER_SHUTDOWN = "pluginOrderShutdown";
  @SerializedName(SERIALIZED_NAME_PLUGIN_ORDER_SHUTDOWN)
  private String pluginOrderShutdown;

  public static final String SERIALIZED_NAME_PLUGIN_ORDER_POST_CONNECT = "pluginOrderPostConnect";
  @SerializedName(SERIALIZED_NAME_PLUGIN_ORDER_POST_CONNECT)
  private String pluginOrderPostConnect;

  public static final String SERIALIZED_NAME_PLUGIN_ORDER_POST_DISCONNECT = "pluginOrderPostDisconnect";
  @SerializedName(SERIALIZED_NAME_PLUGIN_ORDER_POST_DISCONNECT)
  private String pluginOrderPostDisconnect;

  public static final String SERIALIZED_NAME_PLUGIN_ORDER_L_D_I_F_IMPORT = "pluginOrderLDIFImport";
  @SerializedName(SERIALIZED_NAME_PLUGIN_ORDER_L_D_I_F_IMPORT)
  private String pluginOrderLDIFImport;

  public static final String SERIALIZED_NAME_PLUGIN_ORDER_L_D_I_F_EXPORT = "pluginOrderLDIFExport";
  @SerializedName(SERIALIZED_NAME_PLUGIN_ORDER_L_D_I_F_EXPORT)
  private String pluginOrderLDIFExport;

  public static final String SERIALIZED_NAME_PLUGIN_ORDER_PRE_PARSE_ABANDON = "pluginOrderPreParseAbandon";
  @SerializedName(SERIALIZED_NAME_PLUGIN_ORDER_PRE_PARSE_ABANDON)
  private String pluginOrderPreParseAbandon;

  public static final String SERIALIZED_NAME_PLUGIN_ORDER_PRE_PARSE_ADD = "pluginOrderPreParseAdd";
  @SerializedName(SERIALIZED_NAME_PLUGIN_ORDER_PRE_PARSE_ADD)
  private String pluginOrderPreParseAdd;

  public static final String SERIALIZED_NAME_PLUGIN_ORDER_PRE_PARSE_BIND = "pluginOrderPreParseBind";
  @SerializedName(SERIALIZED_NAME_PLUGIN_ORDER_PRE_PARSE_BIND)
  private String pluginOrderPreParseBind;

  public static final String SERIALIZED_NAME_PLUGIN_ORDER_PRE_PARSE_COMPARE = "pluginOrderPreParseCompare";
  @SerializedName(SERIALIZED_NAME_PLUGIN_ORDER_PRE_PARSE_COMPARE)
  private String pluginOrderPreParseCompare;

  public static final String SERIALIZED_NAME_PLUGIN_ORDER_PRE_PARSE_DELETE = "pluginOrderPreParseDelete";
  @SerializedName(SERIALIZED_NAME_PLUGIN_ORDER_PRE_PARSE_DELETE)
  private String pluginOrderPreParseDelete;

  public static final String SERIALIZED_NAME_PLUGIN_ORDER_PRE_PARSE_EXTENDED = "pluginOrderPreParseExtended";
  @SerializedName(SERIALIZED_NAME_PLUGIN_ORDER_PRE_PARSE_EXTENDED)
  private String pluginOrderPreParseExtended;

  public static final String SERIALIZED_NAME_PLUGIN_ORDER_PRE_PARSE_MODIFY = "pluginOrderPreParseModify";
  @SerializedName(SERIALIZED_NAME_PLUGIN_ORDER_PRE_PARSE_MODIFY)
  private String pluginOrderPreParseModify;

  public static final String SERIALIZED_NAME_PLUGIN_ORDER_PRE_PARSE_MODIFY_D_N = "pluginOrderPreParseModifyDN";
  @SerializedName(SERIALIZED_NAME_PLUGIN_ORDER_PRE_PARSE_MODIFY_D_N)
  private String pluginOrderPreParseModifyDN;

  public static final String SERIALIZED_NAME_PLUGIN_ORDER_PRE_PARSE_SEARCH = "pluginOrderPreParseSearch";
  @SerializedName(SERIALIZED_NAME_PLUGIN_ORDER_PRE_PARSE_SEARCH)
  private String pluginOrderPreParseSearch;

  public static final String SERIALIZED_NAME_PLUGIN_ORDER_PRE_PARSE_UNBIND = "pluginOrderPreParseUnbind";
  @SerializedName(SERIALIZED_NAME_PLUGIN_ORDER_PRE_PARSE_UNBIND)
  private String pluginOrderPreParseUnbind;

  public static final String SERIALIZED_NAME_PLUGIN_ORDER_PRE_OPERATION_ADD = "pluginOrderPreOperationAdd";
  @SerializedName(SERIALIZED_NAME_PLUGIN_ORDER_PRE_OPERATION_ADD)
  private String pluginOrderPreOperationAdd;

  public static final String SERIALIZED_NAME_PLUGIN_ORDER_PRE_OPERATION_BIND = "pluginOrderPreOperationBind";
  @SerializedName(SERIALIZED_NAME_PLUGIN_ORDER_PRE_OPERATION_BIND)
  private String pluginOrderPreOperationBind;

  public static final String SERIALIZED_NAME_PLUGIN_ORDER_PRE_OPERATION_COMPARE = "pluginOrderPreOperationCompare";
  @SerializedName(SERIALIZED_NAME_PLUGIN_ORDER_PRE_OPERATION_COMPARE)
  private String pluginOrderPreOperationCompare;

  public static final String SERIALIZED_NAME_PLUGIN_ORDER_PRE_OPERATION_DELETE = "pluginOrderPreOperationDelete";
  @SerializedName(SERIALIZED_NAME_PLUGIN_ORDER_PRE_OPERATION_DELETE)
  private String pluginOrderPreOperationDelete;

  public static final String SERIALIZED_NAME_PLUGIN_ORDER_PRE_OPERATION_EXTENDED = "pluginOrderPreOperationExtended";
  @SerializedName(SERIALIZED_NAME_PLUGIN_ORDER_PRE_OPERATION_EXTENDED)
  private String pluginOrderPreOperationExtended;

  public static final String SERIALIZED_NAME_PLUGIN_ORDER_PRE_OPERATION_MODIFY = "pluginOrderPreOperationModify";
  @SerializedName(SERIALIZED_NAME_PLUGIN_ORDER_PRE_OPERATION_MODIFY)
  private String pluginOrderPreOperationModify;

  public static final String SERIALIZED_NAME_PLUGIN_ORDER_PRE_OPERATION_MODIFY_D_N = "pluginOrderPreOperationModifyDN";
  @SerializedName(SERIALIZED_NAME_PLUGIN_ORDER_PRE_OPERATION_MODIFY_D_N)
  private String pluginOrderPreOperationModifyDN;

  public static final String SERIALIZED_NAME_PLUGIN_ORDER_PRE_OPERATION_SEARCH = "pluginOrderPreOperationSearch";
  @SerializedName(SERIALIZED_NAME_PLUGIN_ORDER_PRE_OPERATION_SEARCH)
  private String pluginOrderPreOperationSearch;

  public static final String SERIALIZED_NAME_PLUGIN_ORDER_POST_OPERATION_ABANDON = "pluginOrderPostOperationAbandon";
  @SerializedName(SERIALIZED_NAME_PLUGIN_ORDER_POST_OPERATION_ABANDON)
  private String pluginOrderPostOperationAbandon;

  public static final String SERIALIZED_NAME_PLUGIN_ORDER_POST_OPERATION_ADD = "pluginOrderPostOperationAdd";
  @SerializedName(SERIALIZED_NAME_PLUGIN_ORDER_POST_OPERATION_ADD)
  private String pluginOrderPostOperationAdd;

  public static final String SERIALIZED_NAME_PLUGIN_ORDER_POST_OPERATION_BIND = "pluginOrderPostOperationBind";
  @SerializedName(SERIALIZED_NAME_PLUGIN_ORDER_POST_OPERATION_BIND)
  private String pluginOrderPostOperationBind;

  public static final String SERIALIZED_NAME_PLUGIN_ORDER_POST_OPERATION_COMPARE = "pluginOrderPostOperationCompare";
  @SerializedName(SERIALIZED_NAME_PLUGIN_ORDER_POST_OPERATION_COMPARE)
  private String pluginOrderPostOperationCompare;

  public static final String SERIALIZED_NAME_PLUGIN_ORDER_POST_OPERATION_DELETE = "pluginOrderPostOperationDelete";
  @SerializedName(SERIALIZED_NAME_PLUGIN_ORDER_POST_OPERATION_DELETE)
  private String pluginOrderPostOperationDelete;

  public static final String SERIALIZED_NAME_PLUGIN_ORDER_POST_OPERATION_EXTENDED = "pluginOrderPostOperationExtended";
  @SerializedName(SERIALIZED_NAME_PLUGIN_ORDER_POST_OPERATION_EXTENDED)
  private String pluginOrderPostOperationExtended;

  public static final String SERIALIZED_NAME_PLUGIN_ORDER_POST_OPERATION_MODIFY = "pluginOrderPostOperationModify";
  @SerializedName(SERIALIZED_NAME_PLUGIN_ORDER_POST_OPERATION_MODIFY)
  private String pluginOrderPostOperationModify;

  public static final String SERIALIZED_NAME_PLUGIN_ORDER_POST_OPERATION_MODIFY_D_N = "pluginOrderPostOperationModifyDN";
  @SerializedName(SERIALIZED_NAME_PLUGIN_ORDER_POST_OPERATION_MODIFY_D_N)
  private String pluginOrderPostOperationModifyDN;

  public static final String SERIALIZED_NAME_PLUGIN_ORDER_POST_OPERATION_SEARCH = "pluginOrderPostOperationSearch";
  @SerializedName(SERIALIZED_NAME_PLUGIN_ORDER_POST_OPERATION_SEARCH)
  private String pluginOrderPostOperationSearch;

  public static final String SERIALIZED_NAME_PLUGIN_ORDER_POST_OPERATION_UNBIND = "pluginOrderPostOperationUnbind";
  @SerializedName(SERIALIZED_NAME_PLUGIN_ORDER_POST_OPERATION_UNBIND)
  private String pluginOrderPostOperationUnbind;

  public static final String SERIALIZED_NAME_PLUGIN_ORDER_POST_RESPONSE_ADD = "pluginOrderPostResponseAdd";
  @SerializedName(SERIALIZED_NAME_PLUGIN_ORDER_POST_RESPONSE_ADD)
  private String pluginOrderPostResponseAdd;

  public static final String SERIALIZED_NAME_PLUGIN_ORDER_POST_RESPONSE_BIND = "pluginOrderPostResponseBind";
  @SerializedName(SERIALIZED_NAME_PLUGIN_ORDER_POST_RESPONSE_BIND)
  private String pluginOrderPostResponseBind;

  public static final String SERIALIZED_NAME_PLUGIN_ORDER_POST_RESPONSE_COMPARE = "pluginOrderPostResponseCompare";
  @SerializedName(SERIALIZED_NAME_PLUGIN_ORDER_POST_RESPONSE_COMPARE)
  private String pluginOrderPostResponseCompare;

  public static final String SERIALIZED_NAME_PLUGIN_ORDER_POST_RESPONSE_DELETE = "pluginOrderPostResponseDelete";
  @SerializedName(SERIALIZED_NAME_PLUGIN_ORDER_POST_RESPONSE_DELETE)
  private String pluginOrderPostResponseDelete;

  public static final String SERIALIZED_NAME_PLUGIN_ORDER_POST_RESPONSE_EXTENDED = "pluginOrderPostResponseExtended";
  @SerializedName(SERIALIZED_NAME_PLUGIN_ORDER_POST_RESPONSE_EXTENDED)
  private String pluginOrderPostResponseExtended;

  public static final String SERIALIZED_NAME_PLUGIN_ORDER_POST_RESPONSE_MODIFY = "pluginOrderPostResponseModify";
  @SerializedName(SERIALIZED_NAME_PLUGIN_ORDER_POST_RESPONSE_MODIFY)
  private String pluginOrderPostResponseModify;

  public static final String SERIALIZED_NAME_PLUGIN_ORDER_POST_RESPONSE_MODIFY_D_N = "pluginOrderPostResponseModifyDN";
  @SerializedName(SERIALIZED_NAME_PLUGIN_ORDER_POST_RESPONSE_MODIFY_D_N)
  private String pluginOrderPostResponseModifyDN;

  public static final String SERIALIZED_NAME_PLUGIN_ORDER_POST_SYNCHRONIZATION_ADD = "pluginOrderPostSynchronizationAdd";
  @SerializedName(SERIALIZED_NAME_PLUGIN_ORDER_POST_SYNCHRONIZATION_ADD)
  private String pluginOrderPostSynchronizationAdd;

  public static final String SERIALIZED_NAME_PLUGIN_ORDER_POST_SYNCHRONIZATION_DELETE = "pluginOrderPostSynchronizationDelete";
  @SerializedName(SERIALIZED_NAME_PLUGIN_ORDER_POST_SYNCHRONIZATION_DELETE)
  private String pluginOrderPostSynchronizationDelete;

  public static final String SERIALIZED_NAME_PLUGIN_ORDER_POST_SYNCHRONIZATION_MODIFY = "pluginOrderPostSynchronizationModify";
  @SerializedName(SERIALIZED_NAME_PLUGIN_ORDER_POST_SYNCHRONIZATION_MODIFY)
  private String pluginOrderPostSynchronizationModify;

  public static final String SERIALIZED_NAME_PLUGIN_ORDER_POST_SYNCHRONIZATION_MODIFY_D_N = "pluginOrderPostSynchronizationModifyDN";
  @SerializedName(SERIALIZED_NAME_PLUGIN_ORDER_POST_SYNCHRONIZATION_MODIFY_D_N)
  private String pluginOrderPostSynchronizationModifyDN;

  public static final String SERIALIZED_NAME_PLUGIN_ORDER_POST_RESPONSE_SEARCH = "pluginOrderPostResponseSearch";
  @SerializedName(SERIALIZED_NAME_PLUGIN_ORDER_POST_RESPONSE_SEARCH)
  private String pluginOrderPostResponseSearch;

  public static final String SERIALIZED_NAME_PLUGIN_ORDER_SEARCH_RESULT_ENTRY = "pluginOrderSearchResultEntry";
  @SerializedName(SERIALIZED_NAME_PLUGIN_ORDER_SEARCH_RESULT_ENTRY)
  private String pluginOrderSearchResultEntry;

  public static final String SERIALIZED_NAME_PLUGIN_ORDER_SEARCH_RESULT_REFERENCE = "pluginOrderSearchResultReference";
  @SerializedName(SERIALIZED_NAME_PLUGIN_ORDER_SEARCH_RESULT_REFERENCE)
  private String pluginOrderSearchResultReference;

  public static final String SERIALIZED_NAME_PLUGIN_ORDER_SUBORDINATE_MODIFY_D_N = "pluginOrderSubordinateModifyDN";
  @SerializedName(SERIALIZED_NAME_PLUGIN_ORDER_SUBORDINATE_MODIFY_D_N)
  private String pluginOrderSubordinateModifyDN;

  public static final String SERIALIZED_NAME_PLUGIN_ORDER_INTERMEDIATE_RESPONSE = "pluginOrderIntermediateResponse";
  @SerializedName(SERIALIZED_NAME_PLUGIN_ORDER_INTERMEDIATE_RESPONSE)
  private String pluginOrderIntermediateResponse;

  public static final String SERIALIZED_NAME_META = "meta";
  @SerializedName(SERIALIZED_NAME_META)
  private MetaMeta meta;

  public static final String SERIALIZED_NAME_URN_COLON_PINGIDENTITY_COLON_SCHEMAS_COLON_CONFIGURATION_COLON_MESSAGES_COLON20 = "urn:pingidentity:schemas:configuration:messages:2.0";
  @SerializedName(SERIALIZED_NAME_URN_COLON_PINGIDENTITY_COLON_SCHEMAS_COLON_CONFIGURATION_COLON_MESSAGES_COLON20)
  private MetaUrnPingidentitySchemasConfigurationMessages20 urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20;

  public PluginRootResponse() {
  }

  public PluginRootResponse schemas(List<EnumpluginRootSchemaUrn> schemas) {
    
    
    
    
    this.schemas = schemas;
    return this;
  }

  public PluginRootResponse addSchemasItem(EnumpluginRootSchemaUrn schemasItem) {
    if (this.schemas == null) {
      this.schemas = new ArrayList<>();
    }
    this.schemas.add(schemasItem);
    return this;
  }

   /**
   * Get schemas
   * @return schemas
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<EnumpluginRootSchemaUrn> getSchemas() {
    return schemas;
  }


  public void setSchemas(List<EnumpluginRootSchemaUrn> schemas) {
    
    
    
    this.schemas = schemas;
  }


  public PluginRootResponse pluginOrderStartup(String pluginOrderStartup) {
    
    
    
    
    this.pluginOrderStartup = pluginOrderStartup;
    return this;
  }

   /**
   * Specifies the order in which startup plug-ins are to be loaded and invoked.
   * @return pluginOrderStartup
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the order in which startup plug-ins are to be loaded and invoked.")

  public String getPluginOrderStartup() {
    return pluginOrderStartup;
  }


  public void setPluginOrderStartup(String pluginOrderStartup) {
    
    
    
    this.pluginOrderStartup = pluginOrderStartup;
  }


  public PluginRootResponse pluginOrderShutdown(String pluginOrderShutdown) {
    
    
    
    
    this.pluginOrderShutdown = pluginOrderShutdown;
    return this;
  }

   /**
   * Specifies the order in which shutdown plug-ins are to be loaded and invoked.
   * @return pluginOrderShutdown
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the order in which shutdown plug-ins are to be loaded and invoked.")

  public String getPluginOrderShutdown() {
    return pluginOrderShutdown;
  }


  public void setPluginOrderShutdown(String pluginOrderShutdown) {
    
    
    
    this.pluginOrderShutdown = pluginOrderShutdown;
  }


  public PluginRootResponse pluginOrderPostConnect(String pluginOrderPostConnect) {
    
    
    
    
    this.pluginOrderPostConnect = pluginOrderPostConnect;
    return this;
  }

   /**
   * Specifies the order in which post-connect plug-ins are to be loaded and invoked.
   * @return pluginOrderPostConnect
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the order in which post-connect plug-ins are to be loaded and invoked.")

  public String getPluginOrderPostConnect() {
    return pluginOrderPostConnect;
  }


  public void setPluginOrderPostConnect(String pluginOrderPostConnect) {
    
    
    
    this.pluginOrderPostConnect = pluginOrderPostConnect;
  }


  public PluginRootResponse pluginOrderPostDisconnect(String pluginOrderPostDisconnect) {
    
    
    
    
    this.pluginOrderPostDisconnect = pluginOrderPostDisconnect;
    return this;
  }

   /**
   * Specifies the order in which post-disconnect plug-ins are to be loaded and invoked.
   * @return pluginOrderPostDisconnect
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the order in which post-disconnect plug-ins are to be loaded and invoked.")

  public String getPluginOrderPostDisconnect() {
    return pluginOrderPostDisconnect;
  }


  public void setPluginOrderPostDisconnect(String pluginOrderPostDisconnect) {
    
    
    
    this.pluginOrderPostDisconnect = pluginOrderPostDisconnect;
  }


  public PluginRootResponse pluginOrderLDIFImport(String pluginOrderLDIFImport) {
    
    
    
    
    this.pluginOrderLDIFImport = pluginOrderLDIFImport;
    return this;
  }

   /**
   * Specifies the order in which LDIF import plug-ins are to be loaded and invoked.
   * @return pluginOrderLDIFImport
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the order in which LDIF import plug-ins are to be loaded and invoked.")

  public String getPluginOrderLDIFImport() {
    return pluginOrderLDIFImport;
  }


  public void setPluginOrderLDIFImport(String pluginOrderLDIFImport) {
    
    
    
    this.pluginOrderLDIFImport = pluginOrderLDIFImport;
  }


  public PluginRootResponse pluginOrderLDIFExport(String pluginOrderLDIFExport) {
    
    
    
    
    this.pluginOrderLDIFExport = pluginOrderLDIFExport;
    return this;
  }

   /**
   * Specifies the order in which LDIF export plug-ins are to be loaded and invoked.
   * @return pluginOrderLDIFExport
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the order in which LDIF export plug-ins are to be loaded and invoked.")

  public String getPluginOrderLDIFExport() {
    return pluginOrderLDIFExport;
  }


  public void setPluginOrderLDIFExport(String pluginOrderLDIFExport) {
    
    
    
    this.pluginOrderLDIFExport = pluginOrderLDIFExport;
  }


  public PluginRootResponse pluginOrderPreParseAbandon(String pluginOrderPreParseAbandon) {
    
    
    
    
    this.pluginOrderPreParseAbandon = pluginOrderPreParseAbandon;
    return this;
  }

   /**
   * Specifies the order in which pre-parse abandon plug-ins are to be loaded and invoked.
   * @return pluginOrderPreParseAbandon
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the order in which pre-parse abandon plug-ins are to be loaded and invoked.")

  public String getPluginOrderPreParseAbandon() {
    return pluginOrderPreParseAbandon;
  }


  public void setPluginOrderPreParseAbandon(String pluginOrderPreParseAbandon) {
    
    
    
    this.pluginOrderPreParseAbandon = pluginOrderPreParseAbandon;
  }


  public PluginRootResponse pluginOrderPreParseAdd(String pluginOrderPreParseAdd) {
    
    
    
    
    this.pluginOrderPreParseAdd = pluginOrderPreParseAdd;
    return this;
  }

   /**
   * Specifies the order in which pre-parse add plug-ins are to be loaded and invoked.
   * @return pluginOrderPreParseAdd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the order in which pre-parse add plug-ins are to be loaded and invoked.")

  public String getPluginOrderPreParseAdd() {
    return pluginOrderPreParseAdd;
  }


  public void setPluginOrderPreParseAdd(String pluginOrderPreParseAdd) {
    
    
    
    this.pluginOrderPreParseAdd = pluginOrderPreParseAdd;
  }


  public PluginRootResponse pluginOrderPreParseBind(String pluginOrderPreParseBind) {
    
    
    
    
    this.pluginOrderPreParseBind = pluginOrderPreParseBind;
    return this;
  }

   /**
   * Specifies the order in which pre-parse bind plug-ins are to be loaded and invoked.
   * @return pluginOrderPreParseBind
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the order in which pre-parse bind plug-ins are to be loaded and invoked.")

  public String getPluginOrderPreParseBind() {
    return pluginOrderPreParseBind;
  }


  public void setPluginOrderPreParseBind(String pluginOrderPreParseBind) {
    
    
    
    this.pluginOrderPreParseBind = pluginOrderPreParseBind;
  }


  public PluginRootResponse pluginOrderPreParseCompare(String pluginOrderPreParseCompare) {
    
    
    
    
    this.pluginOrderPreParseCompare = pluginOrderPreParseCompare;
    return this;
  }

   /**
   * Specifies the order in which pre-parse compare plug-ins are to be loaded and invoked.
   * @return pluginOrderPreParseCompare
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the order in which pre-parse compare plug-ins are to be loaded and invoked.")

  public String getPluginOrderPreParseCompare() {
    return pluginOrderPreParseCompare;
  }


  public void setPluginOrderPreParseCompare(String pluginOrderPreParseCompare) {
    
    
    
    this.pluginOrderPreParseCompare = pluginOrderPreParseCompare;
  }


  public PluginRootResponse pluginOrderPreParseDelete(String pluginOrderPreParseDelete) {
    
    
    
    
    this.pluginOrderPreParseDelete = pluginOrderPreParseDelete;
    return this;
  }

   /**
   * Specifies the order in which pre-parse delete plug-ins are to be loaded and invoked.
   * @return pluginOrderPreParseDelete
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the order in which pre-parse delete plug-ins are to be loaded and invoked.")

  public String getPluginOrderPreParseDelete() {
    return pluginOrderPreParseDelete;
  }


  public void setPluginOrderPreParseDelete(String pluginOrderPreParseDelete) {
    
    
    
    this.pluginOrderPreParseDelete = pluginOrderPreParseDelete;
  }


  public PluginRootResponse pluginOrderPreParseExtended(String pluginOrderPreParseExtended) {
    
    
    
    
    this.pluginOrderPreParseExtended = pluginOrderPreParseExtended;
    return this;
  }

   /**
   * Specifies the order in which pre-parse extended operation plug-ins are to be loaded and invoked.
   * @return pluginOrderPreParseExtended
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the order in which pre-parse extended operation plug-ins are to be loaded and invoked.")

  public String getPluginOrderPreParseExtended() {
    return pluginOrderPreParseExtended;
  }


  public void setPluginOrderPreParseExtended(String pluginOrderPreParseExtended) {
    
    
    
    this.pluginOrderPreParseExtended = pluginOrderPreParseExtended;
  }


  public PluginRootResponse pluginOrderPreParseModify(String pluginOrderPreParseModify) {
    
    
    
    
    this.pluginOrderPreParseModify = pluginOrderPreParseModify;
    return this;
  }

   /**
   * Specifies the order in which pre-parse modify plug-ins are to be loaded and invoked.
   * @return pluginOrderPreParseModify
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the order in which pre-parse modify plug-ins are to be loaded and invoked.")

  public String getPluginOrderPreParseModify() {
    return pluginOrderPreParseModify;
  }


  public void setPluginOrderPreParseModify(String pluginOrderPreParseModify) {
    
    
    
    this.pluginOrderPreParseModify = pluginOrderPreParseModify;
  }


  public PluginRootResponse pluginOrderPreParseModifyDN(String pluginOrderPreParseModifyDN) {
    
    
    
    
    this.pluginOrderPreParseModifyDN = pluginOrderPreParseModifyDN;
    return this;
  }

   /**
   * Specifies the order in which pre-parse modify DN plug-ins are to be loaded and invoked.
   * @return pluginOrderPreParseModifyDN
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the order in which pre-parse modify DN plug-ins are to be loaded and invoked.")

  public String getPluginOrderPreParseModifyDN() {
    return pluginOrderPreParseModifyDN;
  }


  public void setPluginOrderPreParseModifyDN(String pluginOrderPreParseModifyDN) {
    
    
    
    this.pluginOrderPreParseModifyDN = pluginOrderPreParseModifyDN;
  }


  public PluginRootResponse pluginOrderPreParseSearch(String pluginOrderPreParseSearch) {
    
    
    
    
    this.pluginOrderPreParseSearch = pluginOrderPreParseSearch;
    return this;
  }

   /**
   * Specifies the order in which pre-parse search plug-ins are to be loaded and invoked.
   * @return pluginOrderPreParseSearch
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the order in which pre-parse search plug-ins are to be loaded and invoked.")

  public String getPluginOrderPreParseSearch() {
    return pluginOrderPreParseSearch;
  }


  public void setPluginOrderPreParseSearch(String pluginOrderPreParseSearch) {
    
    
    
    this.pluginOrderPreParseSearch = pluginOrderPreParseSearch;
  }


  public PluginRootResponse pluginOrderPreParseUnbind(String pluginOrderPreParseUnbind) {
    
    
    
    
    this.pluginOrderPreParseUnbind = pluginOrderPreParseUnbind;
    return this;
  }

   /**
   * Specifies the order in which pre-parse unbind plug-ins are to be loaded and invoked.
   * @return pluginOrderPreParseUnbind
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the order in which pre-parse unbind plug-ins are to be loaded and invoked.")

  public String getPluginOrderPreParseUnbind() {
    return pluginOrderPreParseUnbind;
  }


  public void setPluginOrderPreParseUnbind(String pluginOrderPreParseUnbind) {
    
    
    
    this.pluginOrderPreParseUnbind = pluginOrderPreParseUnbind;
  }


  public PluginRootResponse pluginOrderPreOperationAdd(String pluginOrderPreOperationAdd) {
    
    
    
    
    this.pluginOrderPreOperationAdd = pluginOrderPreOperationAdd;
    return this;
  }

   /**
   * Specifies the order in which pre-operation add plug-ins are to be loaded and invoked.
   * @return pluginOrderPreOperationAdd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the order in which pre-operation add plug-ins are to be loaded and invoked.")

  public String getPluginOrderPreOperationAdd() {
    return pluginOrderPreOperationAdd;
  }


  public void setPluginOrderPreOperationAdd(String pluginOrderPreOperationAdd) {
    
    
    
    this.pluginOrderPreOperationAdd = pluginOrderPreOperationAdd;
  }


  public PluginRootResponse pluginOrderPreOperationBind(String pluginOrderPreOperationBind) {
    
    
    
    
    this.pluginOrderPreOperationBind = pluginOrderPreOperationBind;
    return this;
  }

   /**
   * Specifies the order in which pre-operation bind plug-ins are to be loaded and invoked.
   * @return pluginOrderPreOperationBind
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the order in which pre-operation bind plug-ins are to be loaded and invoked.")

  public String getPluginOrderPreOperationBind() {
    return pluginOrderPreOperationBind;
  }


  public void setPluginOrderPreOperationBind(String pluginOrderPreOperationBind) {
    
    
    
    this.pluginOrderPreOperationBind = pluginOrderPreOperationBind;
  }


  public PluginRootResponse pluginOrderPreOperationCompare(String pluginOrderPreOperationCompare) {
    
    
    
    
    this.pluginOrderPreOperationCompare = pluginOrderPreOperationCompare;
    return this;
  }

   /**
   * Specifies the order in which pre-operation compare plug-ins are to be loaded and invoked.
   * @return pluginOrderPreOperationCompare
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the order in which pre-operation compare plug-ins are to be loaded and invoked.")

  public String getPluginOrderPreOperationCompare() {
    return pluginOrderPreOperationCompare;
  }


  public void setPluginOrderPreOperationCompare(String pluginOrderPreOperationCompare) {
    
    
    
    this.pluginOrderPreOperationCompare = pluginOrderPreOperationCompare;
  }


  public PluginRootResponse pluginOrderPreOperationDelete(String pluginOrderPreOperationDelete) {
    
    
    
    
    this.pluginOrderPreOperationDelete = pluginOrderPreOperationDelete;
    return this;
  }

   /**
   * Specifies the order in which pre-operation delete plug-ins are to be loaded and invoked.
   * @return pluginOrderPreOperationDelete
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the order in which pre-operation delete plug-ins are to be loaded and invoked.")

  public String getPluginOrderPreOperationDelete() {
    return pluginOrderPreOperationDelete;
  }


  public void setPluginOrderPreOperationDelete(String pluginOrderPreOperationDelete) {
    
    
    
    this.pluginOrderPreOperationDelete = pluginOrderPreOperationDelete;
  }


  public PluginRootResponse pluginOrderPreOperationExtended(String pluginOrderPreOperationExtended) {
    
    
    
    
    this.pluginOrderPreOperationExtended = pluginOrderPreOperationExtended;
    return this;
  }

   /**
   * Specifies the order in which pre-operation extended operation plug-ins are to be loaded and invoked.
   * @return pluginOrderPreOperationExtended
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the order in which pre-operation extended operation plug-ins are to be loaded and invoked.")

  public String getPluginOrderPreOperationExtended() {
    return pluginOrderPreOperationExtended;
  }


  public void setPluginOrderPreOperationExtended(String pluginOrderPreOperationExtended) {
    
    
    
    this.pluginOrderPreOperationExtended = pluginOrderPreOperationExtended;
  }


  public PluginRootResponse pluginOrderPreOperationModify(String pluginOrderPreOperationModify) {
    
    
    
    
    this.pluginOrderPreOperationModify = pluginOrderPreOperationModify;
    return this;
  }

   /**
   * Specifies the order in which pre-operation modify plug-ins are to be loaded and invoked.
   * @return pluginOrderPreOperationModify
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the order in which pre-operation modify plug-ins are to be loaded and invoked.")

  public String getPluginOrderPreOperationModify() {
    return pluginOrderPreOperationModify;
  }


  public void setPluginOrderPreOperationModify(String pluginOrderPreOperationModify) {
    
    
    
    this.pluginOrderPreOperationModify = pluginOrderPreOperationModify;
  }


  public PluginRootResponse pluginOrderPreOperationModifyDN(String pluginOrderPreOperationModifyDN) {
    
    
    
    
    this.pluginOrderPreOperationModifyDN = pluginOrderPreOperationModifyDN;
    return this;
  }

   /**
   * Specifies the order in which pre-operation modify DN plug-ins are to be loaded and invoked.
   * @return pluginOrderPreOperationModifyDN
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the order in which pre-operation modify DN plug-ins are to be loaded and invoked.")

  public String getPluginOrderPreOperationModifyDN() {
    return pluginOrderPreOperationModifyDN;
  }


  public void setPluginOrderPreOperationModifyDN(String pluginOrderPreOperationModifyDN) {
    
    
    
    this.pluginOrderPreOperationModifyDN = pluginOrderPreOperationModifyDN;
  }


  public PluginRootResponse pluginOrderPreOperationSearch(String pluginOrderPreOperationSearch) {
    
    
    
    
    this.pluginOrderPreOperationSearch = pluginOrderPreOperationSearch;
    return this;
  }

   /**
   * Specifies the order in which pre-operation search plug-ins are to be loaded and invoked.
   * @return pluginOrderPreOperationSearch
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the order in which pre-operation search plug-ins are to be loaded and invoked.")

  public String getPluginOrderPreOperationSearch() {
    return pluginOrderPreOperationSearch;
  }


  public void setPluginOrderPreOperationSearch(String pluginOrderPreOperationSearch) {
    
    
    
    this.pluginOrderPreOperationSearch = pluginOrderPreOperationSearch;
  }


  public PluginRootResponse pluginOrderPostOperationAbandon(String pluginOrderPostOperationAbandon) {
    
    
    
    
    this.pluginOrderPostOperationAbandon = pluginOrderPostOperationAbandon;
    return this;
  }

   /**
   * Specifies the order in which post-operation abandon plug-ins are to be loaded and invoked.
   * @return pluginOrderPostOperationAbandon
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the order in which post-operation abandon plug-ins are to be loaded and invoked.")

  public String getPluginOrderPostOperationAbandon() {
    return pluginOrderPostOperationAbandon;
  }


  public void setPluginOrderPostOperationAbandon(String pluginOrderPostOperationAbandon) {
    
    
    
    this.pluginOrderPostOperationAbandon = pluginOrderPostOperationAbandon;
  }


  public PluginRootResponse pluginOrderPostOperationAdd(String pluginOrderPostOperationAdd) {
    
    
    
    
    this.pluginOrderPostOperationAdd = pluginOrderPostOperationAdd;
    return this;
  }

   /**
   * Specifies the order in which post-operation add plug-ins are to be loaded and invoked.
   * @return pluginOrderPostOperationAdd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the order in which post-operation add plug-ins are to be loaded and invoked.")

  public String getPluginOrderPostOperationAdd() {
    return pluginOrderPostOperationAdd;
  }


  public void setPluginOrderPostOperationAdd(String pluginOrderPostOperationAdd) {
    
    
    
    this.pluginOrderPostOperationAdd = pluginOrderPostOperationAdd;
  }


  public PluginRootResponse pluginOrderPostOperationBind(String pluginOrderPostOperationBind) {
    
    
    
    
    this.pluginOrderPostOperationBind = pluginOrderPostOperationBind;
    return this;
  }

   /**
   * Specifies the order in which post-operation bind plug-ins are to be loaded and invoked.
   * @return pluginOrderPostOperationBind
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the order in which post-operation bind plug-ins are to be loaded and invoked.")

  public String getPluginOrderPostOperationBind() {
    return pluginOrderPostOperationBind;
  }


  public void setPluginOrderPostOperationBind(String pluginOrderPostOperationBind) {
    
    
    
    this.pluginOrderPostOperationBind = pluginOrderPostOperationBind;
  }


  public PluginRootResponse pluginOrderPostOperationCompare(String pluginOrderPostOperationCompare) {
    
    
    
    
    this.pluginOrderPostOperationCompare = pluginOrderPostOperationCompare;
    return this;
  }

   /**
   * Specifies the order in which post-operation compare plug-ins are to be loaded and invoked.
   * @return pluginOrderPostOperationCompare
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the order in which post-operation compare plug-ins are to be loaded and invoked.")

  public String getPluginOrderPostOperationCompare() {
    return pluginOrderPostOperationCompare;
  }


  public void setPluginOrderPostOperationCompare(String pluginOrderPostOperationCompare) {
    
    
    
    this.pluginOrderPostOperationCompare = pluginOrderPostOperationCompare;
  }


  public PluginRootResponse pluginOrderPostOperationDelete(String pluginOrderPostOperationDelete) {
    
    
    
    
    this.pluginOrderPostOperationDelete = pluginOrderPostOperationDelete;
    return this;
  }

   /**
   * Specifies the order in which post-operation delete plug-ins are to be loaded and invoked.
   * @return pluginOrderPostOperationDelete
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the order in which post-operation delete plug-ins are to be loaded and invoked.")

  public String getPluginOrderPostOperationDelete() {
    return pluginOrderPostOperationDelete;
  }


  public void setPluginOrderPostOperationDelete(String pluginOrderPostOperationDelete) {
    
    
    
    this.pluginOrderPostOperationDelete = pluginOrderPostOperationDelete;
  }


  public PluginRootResponse pluginOrderPostOperationExtended(String pluginOrderPostOperationExtended) {
    
    
    
    
    this.pluginOrderPostOperationExtended = pluginOrderPostOperationExtended;
    return this;
  }

   /**
   * Specifies the order in which post-operation extended operation plug-ins are to be loaded and invoked.
   * @return pluginOrderPostOperationExtended
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the order in which post-operation extended operation plug-ins are to be loaded and invoked.")

  public String getPluginOrderPostOperationExtended() {
    return pluginOrderPostOperationExtended;
  }


  public void setPluginOrderPostOperationExtended(String pluginOrderPostOperationExtended) {
    
    
    
    this.pluginOrderPostOperationExtended = pluginOrderPostOperationExtended;
  }


  public PluginRootResponse pluginOrderPostOperationModify(String pluginOrderPostOperationModify) {
    
    
    
    
    this.pluginOrderPostOperationModify = pluginOrderPostOperationModify;
    return this;
  }

   /**
   * Specifies the order in which post-operation modify plug-ins are to be loaded and invoked.
   * @return pluginOrderPostOperationModify
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the order in which post-operation modify plug-ins are to be loaded and invoked.")

  public String getPluginOrderPostOperationModify() {
    return pluginOrderPostOperationModify;
  }


  public void setPluginOrderPostOperationModify(String pluginOrderPostOperationModify) {
    
    
    
    this.pluginOrderPostOperationModify = pluginOrderPostOperationModify;
  }


  public PluginRootResponse pluginOrderPostOperationModifyDN(String pluginOrderPostOperationModifyDN) {
    
    
    
    
    this.pluginOrderPostOperationModifyDN = pluginOrderPostOperationModifyDN;
    return this;
  }

   /**
   * Specifies the order in which post-operation modify DN plug-ins are to be loaded and invoked.
   * @return pluginOrderPostOperationModifyDN
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the order in which post-operation modify DN plug-ins are to be loaded and invoked.")

  public String getPluginOrderPostOperationModifyDN() {
    return pluginOrderPostOperationModifyDN;
  }


  public void setPluginOrderPostOperationModifyDN(String pluginOrderPostOperationModifyDN) {
    
    
    
    this.pluginOrderPostOperationModifyDN = pluginOrderPostOperationModifyDN;
  }


  public PluginRootResponse pluginOrderPostOperationSearch(String pluginOrderPostOperationSearch) {
    
    
    
    
    this.pluginOrderPostOperationSearch = pluginOrderPostOperationSearch;
    return this;
  }

   /**
   * Specifies the order in which post-operation search plug-ins are to be loaded and invoked.
   * @return pluginOrderPostOperationSearch
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the order in which post-operation search plug-ins are to be loaded and invoked.")

  public String getPluginOrderPostOperationSearch() {
    return pluginOrderPostOperationSearch;
  }


  public void setPluginOrderPostOperationSearch(String pluginOrderPostOperationSearch) {
    
    
    
    this.pluginOrderPostOperationSearch = pluginOrderPostOperationSearch;
  }


  public PluginRootResponse pluginOrderPostOperationUnbind(String pluginOrderPostOperationUnbind) {
    
    
    
    
    this.pluginOrderPostOperationUnbind = pluginOrderPostOperationUnbind;
    return this;
  }

   /**
   * Specifies the order in which post-operation unbind plug-ins are to be loaded and invoked.
   * @return pluginOrderPostOperationUnbind
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the order in which post-operation unbind plug-ins are to be loaded and invoked.")

  public String getPluginOrderPostOperationUnbind() {
    return pluginOrderPostOperationUnbind;
  }


  public void setPluginOrderPostOperationUnbind(String pluginOrderPostOperationUnbind) {
    
    
    
    this.pluginOrderPostOperationUnbind = pluginOrderPostOperationUnbind;
  }


  public PluginRootResponse pluginOrderPostResponseAdd(String pluginOrderPostResponseAdd) {
    
    
    
    
    this.pluginOrderPostResponseAdd = pluginOrderPostResponseAdd;
    return this;
  }

   /**
   * Specifies the order in which post-response add plug-ins are to be loaded and invoked.
   * @return pluginOrderPostResponseAdd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the order in which post-response add plug-ins are to be loaded and invoked.")

  public String getPluginOrderPostResponseAdd() {
    return pluginOrderPostResponseAdd;
  }


  public void setPluginOrderPostResponseAdd(String pluginOrderPostResponseAdd) {
    
    
    
    this.pluginOrderPostResponseAdd = pluginOrderPostResponseAdd;
  }


  public PluginRootResponse pluginOrderPostResponseBind(String pluginOrderPostResponseBind) {
    
    
    
    
    this.pluginOrderPostResponseBind = pluginOrderPostResponseBind;
    return this;
  }

   /**
   * Specifies the order in which post-response bind plug-ins are to be loaded and invoked.
   * @return pluginOrderPostResponseBind
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the order in which post-response bind plug-ins are to be loaded and invoked.")

  public String getPluginOrderPostResponseBind() {
    return pluginOrderPostResponseBind;
  }


  public void setPluginOrderPostResponseBind(String pluginOrderPostResponseBind) {
    
    
    
    this.pluginOrderPostResponseBind = pluginOrderPostResponseBind;
  }


  public PluginRootResponse pluginOrderPostResponseCompare(String pluginOrderPostResponseCompare) {
    
    
    
    
    this.pluginOrderPostResponseCompare = pluginOrderPostResponseCompare;
    return this;
  }

   /**
   * Specifies the order in which post-response compare plug-ins are to be loaded and invoked.
   * @return pluginOrderPostResponseCompare
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the order in which post-response compare plug-ins are to be loaded and invoked.")

  public String getPluginOrderPostResponseCompare() {
    return pluginOrderPostResponseCompare;
  }


  public void setPluginOrderPostResponseCompare(String pluginOrderPostResponseCompare) {
    
    
    
    this.pluginOrderPostResponseCompare = pluginOrderPostResponseCompare;
  }


  public PluginRootResponse pluginOrderPostResponseDelete(String pluginOrderPostResponseDelete) {
    
    
    
    
    this.pluginOrderPostResponseDelete = pluginOrderPostResponseDelete;
    return this;
  }

   /**
   * Specifies the order in which post-response delete plug-ins are to be loaded and invoked.
   * @return pluginOrderPostResponseDelete
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the order in which post-response delete plug-ins are to be loaded and invoked.")

  public String getPluginOrderPostResponseDelete() {
    return pluginOrderPostResponseDelete;
  }


  public void setPluginOrderPostResponseDelete(String pluginOrderPostResponseDelete) {
    
    
    
    this.pluginOrderPostResponseDelete = pluginOrderPostResponseDelete;
  }


  public PluginRootResponse pluginOrderPostResponseExtended(String pluginOrderPostResponseExtended) {
    
    
    
    
    this.pluginOrderPostResponseExtended = pluginOrderPostResponseExtended;
    return this;
  }

   /**
   * Specifies the order in which post-response extended operation plug-ins are to be loaded and invoked.
   * @return pluginOrderPostResponseExtended
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the order in which post-response extended operation plug-ins are to be loaded and invoked.")

  public String getPluginOrderPostResponseExtended() {
    return pluginOrderPostResponseExtended;
  }


  public void setPluginOrderPostResponseExtended(String pluginOrderPostResponseExtended) {
    
    
    
    this.pluginOrderPostResponseExtended = pluginOrderPostResponseExtended;
  }


  public PluginRootResponse pluginOrderPostResponseModify(String pluginOrderPostResponseModify) {
    
    
    
    
    this.pluginOrderPostResponseModify = pluginOrderPostResponseModify;
    return this;
  }

   /**
   * Specifies the order in which post-response modify plug-ins are to be loaded and invoked.
   * @return pluginOrderPostResponseModify
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the order in which post-response modify plug-ins are to be loaded and invoked.")

  public String getPluginOrderPostResponseModify() {
    return pluginOrderPostResponseModify;
  }


  public void setPluginOrderPostResponseModify(String pluginOrderPostResponseModify) {
    
    
    
    this.pluginOrderPostResponseModify = pluginOrderPostResponseModify;
  }


  public PluginRootResponse pluginOrderPostResponseModifyDN(String pluginOrderPostResponseModifyDN) {
    
    
    
    
    this.pluginOrderPostResponseModifyDN = pluginOrderPostResponseModifyDN;
    return this;
  }

   /**
   * Specifies the order in which post-response modify DN plug-ins are to be loaded and invoked.
   * @return pluginOrderPostResponseModifyDN
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the order in which post-response modify DN plug-ins are to be loaded and invoked.")

  public String getPluginOrderPostResponseModifyDN() {
    return pluginOrderPostResponseModifyDN;
  }


  public void setPluginOrderPostResponseModifyDN(String pluginOrderPostResponseModifyDN) {
    
    
    
    this.pluginOrderPostResponseModifyDN = pluginOrderPostResponseModifyDN;
  }


  public PluginRootResponse pluginOrderPostSynchronizationAdd(String pluginOrderPostSynchronizationAdd) {
    
    
    
    
    this.pluginOrderPostSynchronizationAdd = pluginOrderPostSynchronizationAdd;
    return this;
  }

   /**
   * Specifies the order in which post-synchronization add plug-ins are to be loaded and invoked.
   * @return pluginOrderPostSynchronizationAdd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the order in which post-synchronization add plug-ins are to be loaded and invoked.")

  public String getPluginOrderPostSynchronizationAdd() {
    return pluginOrderPostSynchronizationAdd;
  }


  public void setPluginOrderPostSynchronizationAdd(String pluginOrderPostSynchronizationAdd) {
    
    
    
    this.pluginOrderPostSynchronizationAdd = pluginOrderPostSynchronizationAdd;
  }


  public PluginRootResponse pluginOrderPostSynchronizationDelete(String pluginOrderPostSynchronizationDelete) {
    
    
    
    
    this.pluginOrderPostSynchronizationDelete = pluginOrderPostSynchronizationDelete;
    return this;
  }

   /**
   * Specifies the order in which post-synchronization delete plug-ins are to be loaded and invoked.
   * @return pluginOrderPostSynchronizationDelete
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the order in which post-synchronization delete plug-ins are to be loaded and invoked.")

  public String getPluginOrderPostSynchronizationDelete() {
    return pluginOrderPostSynchronizationDelete;
  }


  public void setPluginOrderPostSynchronizationDelete(String pluginOrderPostSynchronizationDelete) {
    
    
    
    this.pluginOrderPostSynchronizationDelete = pluginOrderPostSynchronizationDelete;
  }


  public PluginRootResponse pluginOrderPostSynchronizationModify(String pluginOrderPostSynchronizationModify) {
    
    
    
    
    this.pluginOrderPostSynchronizationModify = pluginOrderPostSynchronizationModify;
    return this;
  }

   /**
   * Specifies the order in which post-synchronization modify plug-ins are to be loaded and invoked.
   * @return pluginOrderPostSynchronizationModify
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the order in which post-synchronization modify plug-ins are to be loaded and invoked.")

  public String getPluginOrderPostSynchronizationModify() {
    return pluginOrderPostSynchronizationModify;
  }


  public void setPluginOrderPostSynchronizationModify(String pluginOrderPostSynchronizationModify) {
    
    
    
    this.pluginOrderPostSynchronizationModify = pluginOrderPostSynchronizationModify;
  }


  public PluginRootResponse pluginOrderPostSynchronizationModifyDN(String pluginOrderPostSynchronizationModifyDN) {
    
    
    
    
    this.pluginOrderPostSynchronizationModifyDN = pluginOrderPostSynchronizationModifyDN;
    return this;
  }

   /**
   * Specifies the order in which post-synchronization modify DN plug-ins are to be loaded and invoked.
   * @return pluginOrderPostSynchronizationModifyDN
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the order in which post-synchronization modify DN plug-ins are to be loaded and invoked.")

  public String getPluginOrderPostSynchronizationModifyDN() {
    return pluginOrderPostSynchronizationModifyDN;
  }


  public void setPluginOrderPostSynchronizationModifyDN(String pluginOrderPostSynchronizationModifyDN) {
    
    
    
    this.pluginOrderPostSynchronizationModifyDN = pluginOrderPostSynchronizationModifyDN;
  }


  public PluginRootResponse pluginOrderPostResponseSearch(String pluginOrderPostResponseSearch) {
    
    
    
    
    this.pluginOrderPostResponseSearch = pluginOrderPostResponseSearch;
    return this;
  }

   /**
   * Specifies the order in which post-response search plug-ins are to be loaded and invoked.
   * @return pluginOrderPostResponseSearch
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the order in which post-response search plug-ins are to be loaded and invoked.")

  public String getPluginOrderPostResponseSearch() {
    return pluginOrderPostResponseSearch;
  }


  public void setPluginOrderPostResponseSearch(String pluginOrderPostResponseSearch) {
    
    
    
    this.pluginOrderPostResponseSearch = pluginOrderPostResponseSearch;
  }


  public PluginRootResponse pluginOrderSearchResultEntry(String pluginOrderSearchResultEntry) {
    
    
    
    
    this.pluginOrderSearchResultEntry = pluginOrderSearchResultEntry;
    return this;
  }

   /**
   * Specifies the order in which search result entry plug-ins are to be loaded and invoked.
   * @return pluginOrderSearchResultEntry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the order in which search result entry plug-ins are to be loaded and invoked.")

  public String getPluginOrderSearchResultEntry() {
    return pluginOrderSearchResultEntry;
  }


  public void setPluginOrderSearchResultEntry(String pluginOrderSearchResultEntry) {
    
    
    
    this.pluginOrderSearchResultEntry = pluginOrderSearchResultEntry;
  }


  public PluginRootResponse pluginOrderSearchResultReference(String pluginOrderSearchResultReference) {
    
    
    
    
    this.pluginOrderSearchResultReference = pluginOrderSearchResultReference;
    return this;
  }

   /**
   * Specifies the order in which search result reference plug-ins are to be loaded and invoked.
   * @return pluginOrderSearchResultReference
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the order in which search result reference plug-ins are to be loaded and invoked.")

  public String getPluginOrderSearchResultReference() {
    return pluginOrderSearchResultReference;
  }


  public void setPluginOrderSearchResultReference(String pluginOrderSearchResultReference) {
    
    
    
    this.pluginOrderSearchResultReference = pluginOrderSearchResultReference;
  }


  public PluginRootResponse pluginOrderSubordinateModifyDN(String pluginOrderSubordinateModifyDN) {
    
    
    
    
    this.pluginOrderSubordinateModifyDN = pluginOrderSubordinateModifyDN;
    return this;
  }

   /**
   * Specifies the order in which subordinate modify DN plug-ins are to be loaded and invoked.
   * @return pluginOrderSubordinateModifyDN
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the order in which subordinate modify DN plug-ins are to be loaded and invoked.")

  public String getPluginOrderSubordinateModifyDN() {
    return pluginOrderSubordinateModifyDN;
  }


  public void setPluginOrderSubordinateModifyDN(String pluginOrderSubordinateModifyDN) {
    
    
    
    this.pluginOrderSubordinateModifyDN = pluginOrderSubordinateModifyDN;
  }


  public PluginRootResponse pluginOrderIntermediateResponse(String pluginOrderIntermediateResponse) {
    
    
    
    
    this.pluginOrderIntermediateResponse = pluginOrderIntermediateResponse;
    return this;
  }

   /**
   * Specifies the order in which intermediate response plug-ins are to be loaded and invoked.
   * @return pluginOrderIntermediateResponse
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the order in which intermediate response plug-ins are to be loaded and invoked.")

  public String getPluginOrderIntermediateResponse() {
    return pluginOrderIntermediateResponse;
  }


  public void setPluginOrderIntermediateResponse(String pluginOrderIntermediateResponse) {
    
    
    
    this.pluginOrderIntermediateResponse = pluginOrderIntermediateResponse;
  }


  public PluginRootResponse meta(MetaMeta meta) {
    
    
    
    
    this.meta = meta;
    return this;
  }

   /**
   * Get meta
   * @return meta
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public MetaMeta getMeta() {
    return meta;
  }


  public void setMeta(MetaMeta meta) {
    
    
    
    this.meta = meta;
  }


  public PluginRootResponse urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20(MetaUrnPingidentitySchemasConfigurationMessages20 urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20) {
    
    
    
    
    this.urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20 = urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20;
    return this;
  }

   /**
   * Get urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20
   * @return urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public MetaUrnPingidentitySchemasConfigurationMessages20 getUrnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20() {
    return urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20;
  }


  public void setUrnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20(MetaUrnPingidentitySchemasConfigurationMessages20 urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20) {
    
    
    
    this.urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20 = urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the PluginRootResponse instance itself
   */
  public PluginRootResponse putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PluginRootResponse pluginRootResponse = (PluginRootResponse) o;
    return Objects.equals(this.schemas, pluginRootResponse.schemas) &&
        Objects.equals(this.pluginOrderStartup, pluginRootResponse.pluginOrderStartup) &&
        Objects.equals(this.pluginOrderShutdown, pluginRootResponse.pluginOrderShutdown) &&
        Objects.equals(this.pluginOrderPostConnect, pluginRootResponse.pluginOrderPostConnect) &&
        Objects.equals(this.pluginOrderPostDisconnect, pluginRootResponse.pluginOrderPostDisconnect) &&
        Objects.equals(this.pluginOrderLDIFImport, pluginRootResponse.pluginOrderLDIFImport) &&
        Objects.equals(this.pluginOrderLDIFExport, pluginRootResponse.pluginOrderLDIFExport) &&
        Objects.equals(this.pluginOrderPreParseAbandon, pluginRootResponse.pluginOrderPreParseAbandon) &&
        Objects.equals(this.pluginOrderPreParseAdd, pluginRootResponse.pluginOrderPreParseAdd) &&
        Objects.equals(this.pluginOrderPreParseBind, pluginRootResponse.pluginOrderPreParseBind) &&
        Objects.equals(this.pluginOrderPreParseCompare, pluginRootResponse.pluginOrderPreParseCompare) &&
        Objects.equals(this.pluginOrderPreParseDelete, pluginRootResponse.pluginOrderPreParseDelete) &&
        Objects.equals(this.pluginOrderPreParseExtended, pluginRootResponse.pluginOrderPreParseExtended) &&
        Objects.equals(this.pluginOrderPreParseModify, pluginRootResponse.pluginOrderPreParseModify) &&
        Objects.equals(this.pluginOrderPreParseModifyDN, pluginRootResponse.pluginOrderPreParseModifyDN) &&
        Objects.equals(this.pluginOrderPreParseSearch, pluginRootResponse.pluginOrderPreParseSearch) &&
        Objects.equals(this.pluginOrderPreParseUnbind, pluginRootResponse.pluginOrderPreParseUnbind) &&
        Objects.equals(this.pluginOrderPreOperationAdd, pluginRootResponse.pluginOrderPreOperationAdd) &&
        Objects.equals(this.pluginOrderPreOperationBind, pluginRootResponse.pluginOrderPreOperationBind) &&
        Objects.equals(this.pluginOrderPreOperationCompare, pluginRootResponse.pluginOrderPreOperationCompare) &&
        Objects.equals(this.pluginOrderPreOperationDelete, pluginRootResponse.pluginOrderPreOperationDelete) &&
        Objects.equals(this.pluginOrderPreOperationExtended, pluginRootResponse.pluginOrderPreOperationExtended) &&
        Objects.equals(this.pluginOrderPreOperationModify, pluginRootResponse.pluginOrderPreOperationModify) &&
        Objects.equals(this.pluginOrderPreOperationModifyDN, pluginRootResponse.pluginOrderPreOperationModifyDN) &&
        Objects.equals(this.pluginOrderPreOperationSearch, pluginRootResponse.pluginOrderPreOperationSearch) &&
        Objects.equals(this.pluginOrderPostOperationAbandon, pluginRootResponse.pluginOrderPostOperationAbandon) &&
        Objects.equals(this.pluginOrderPostOperationAdd, pluginRootResponse.pluginOrderPostOperationAdd) &&
        Objects.equals(this.pluginOrderPostOperationBind, pluginRootResponse.pluginOrderPostOperationBind) &&
        Objects.equals(this.pluginOrderPostOperationCompare, pluginRootResponse.pluginOrderPostOperationCompare) &&
        Objects.equals(this.pluginOrderPostOperationDelete, pluginRootResponse.pluginOrderPostOperationDelete) &&
        Objects.equals(this.pluginOrderPostOperationExtended, pluginRootResponse.pluginOrderPostOperationExtended) &&
        Objects.equals(this.pluginOrderPostOperationModify, pluginRootResponse.pluginOrderPostOperationModify) &&
        Objects.equals(this.pluginOrderPostOperationModifyDN, pluginRootResponse.pluginOrderPostOperationModifyDN) &&
        Objects.equals(this.pluginOrderPostOperationSearch, pluginRootResponse.pluginOrderPostOperationSearch) &&
        Objects.equals(this.pluginOrderPostOperationUnbind, pluginRootResponse.pluginOrderPostOperationUnbind) &&
        Objects.equals(this.pluginOrderPostResponseAdd, pluginRootResponse.pluginOrderPostResponseAdd) &&
        Objects.equals(this.pluginOrderPostResponseBind, pluginRootResponse.pluginOrderPostResponseBind) &&
        Objects.equals(this.pluginOrderPostResponseCompare, pluginRootResponse.pluginOrderPostResponseCompare) &&
        Objects.equals(this.pluginOrderPostResponseDelete, pluginRootResponse.pluginOrderPostResponseDelete) &&
        Objects.equals(this.pluginOrderPostResponseExtended, pluginRootResponse.pluginOrderPostResponseExtended) &&
        Objects.equals(this.pluginOrderPostResponseModify, pluginRootResponse.pluginOrderPostResponseModify) &&
        Objects.equals(this.pluginOrderPostResponseModifyDN, pluginRootResponse.pluginOrderPostResponseModifyDN) &&
        Objects.equals(this.pluginOrderPostSynchronizationAdd, pluginRootResponse.pluginOrderPostSynchronizationAdd) &&
        Objects.equals(this.pluginOrderPostSynchronizationDelete, pluginRootResponse.pluginOrderPostSynchronizationDelete) &&
        Objects.equals(this.pluginOrderPostSynchronizationModify, pluginRootResponse.pluginOrderPostSynchronizationModify) &&
        Objects.equals(this.pluginOrderPostSynchronizationModifyDN, pluginRootResponse.pluginOrderPostSynchronizationModifyDN) &&
        Objects.equals(this.pluginOrderPostResponseSearch, pluginRootResponse.pluginOrderPostResponseSearch) &&
        Objects.equals(this.pluginOrderSearchResultEntry, pluginRootResponse.pluginOrderSearchResultEntry) &&
        Objects.equals(this.pluginOrderSearchResultReference, pluginRootResponse.pluginOrderSearchResultReference) &&
        Objects.equals(this.pluginOrderSubordinateModifyDN, pluginRootResponse.pluginOrderSubordinateModifyDN) &&
        Objects.equals(this.pluginOrderIntermediateResponse, pluginRootResponse.pluginOrderIntermediateResponse) &&
        Objects.equals(this.meta, pluginRootResponse.meta) &&
        Objects.equals(this.urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20, pluginRootResponse.urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20)&&
        Objects.equals(this.additionalProperties, pluginRootResponse.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(schemas, pluginOrderStartup, pluginOrderShutdown, pluginOrderPostConnect, pluginOrderPostDisconnect, pluginOrderLDIFImport, pluginOrderLDIFExport, pluginOrderPreParseAbandon, pluginOrderPreParseAdd, pluginOrderPreParseBind, pluginOrderPreParseCompare, pluginOrderPreParseDelete, pluginOrderPreParseExtended, pluginOrderPreParseModify, pluginOrderPreParseModifyDN, pluginOrderPreParseSearch, pluginOrderPreParseUnbind, pluginOrderPreOperationAdd, pluginOrderPreOperationBind, pluginOrderPreOperationCompare, pluginOrderPreOperationDelete, pluginOrderPreOperationExtended, pluginOrderPreOperationModify, pluginOrderPreOperationModifyDN, pluginOrderPreOperationSearch, pluginOrderPostOperationAbandon, pluginOrderPostOperationAdd, pluginOrderPostOperationBind, pluginOrderPostOperationCompare, pluginOrderPostOperationDelete, pluginOrderPostOperationExtended, pluginOrderPostOperationModify, pluginOrderPostOperationModifyDN, pluginOrderPostOperationSearch, pluginOrderPostOperationUnbind, pluginOrderPostResponseAdd, pluginOrderPostResponseBind, pluginOrderPostResponseCompare, pluginOrderPostResponseDelete, pluginOrderPostResponseExtended, pluginOrderPostResponseModify, pluginOrderPostResponseModifyDN, pluginOrderPostSynchronizationAdd, pluginOrderPostSynchronizationDelete, pluginOrderPostSynchronizationModify, pluginOrderPostSynchronizationModifyDN, pluginOrderPostResponseSearch, pluginOrderSearchResultEntry, pluginOrderSearchResultReference, pluginOrderSubordinateModifyDN, pluginOrderIntermediateResponse, meta, urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PluginRootResponse {\n");
    sb.append("    schemas: ").append(toIndentedString(schemas)).append("\n");
    sb.append("    pluginOrderStartup: ").append(toIndentedString(pluginOrderStartup)).append("\n");
    sb.append("    pluginOrderShutdown: ").append(toIndentedString(pluginOrderShutdown)).append("\n");
    sb.append("    pluginOrderPostConnect: ").append(toIndentedString(pluginOrderPostConnect)).append("\n");
    sb.append("    pluginOrderPostDisconnect: ").append(toIndentedString(pluginOrderPostDisconnect)).append("\n");
    sb.append("    pluginOrderLDIFImport: ").append(toIndentedString(pluginOrderLDIFImport)).append("\n");
    sb.append("    pluginOrderLDIFExport: ").append(toIndentedString(pluginOrderLDIFExport)).append("\n");
    sb.append("    pluginOrderPreParseAbandon: ").append(toIndentedString(pluginOrderPreParseAbandon)).append("\n");
    sb.append("    pluginOrderPreParseAdd: ").append(toIndentedString(pluginOrderPreParseAdd)).append("\n");
    sb.append("    pluginOrderPreParseBind: ").append(toIndentedString(pluginOrderPreParseBind)).append("\n");
    sb.append("    pluginOrderPreParseCompare: ").append(toIndentedString(pluginOrderPreParseCompare)).append("\n");
    sb.append("    pluginOrderPreParseDelete: ").append(toIndentedString(pluginOrderPreParseDelete)).append("\n");
    sb.append("    pluginOrderPreParseExtended: ").append(toIndentedString(pluginOrderPreParseExtended)).append("\n");
    sb.append("    pluginOrderPreParseModify: ").append(toIndentedString(pluginOrderPreParseModify)).append("\n");
    sb.append("    pluginOrderPreParseModifyDN: ").append(toIndentedString(pluginOrderPreParseModifyDN)).append("\n");
    sb.append("    pluginOrderPreParseSearch: ").append(toIndentedString(pluginOrderPreParseSearch)).append("\n");
    sb.append("    pluginOrderPreParseUnbind: ").append(toIndentedString(pluginOrderPreParseUnbind)).append("\n");
    sb.append("    pluginOrderPreOperationAdd: ").append(toIndentedString(pluginOrderPreOperationAdd)).append("\n");
    sb.append("    pluginOrderPreOperationBind: ").append(toIndentedString(pluginOrderPreOperationBind)).append("\n");
    sb.append("    pluginOrderPreOperationCompare: ").append(toIndentedString(pluginOrderPreOperationCompare)).append("\n");
    sb.append("    pluginOrderPreOperationDelete: ").append(toIndentedString(pluginOrderPreOperationDelete)).append("\n");
    sb.append("    pluginOrderPreOperationExtended: ").append(toIndentedString(pluginOrderPreOperationExtended)).append("\n");
    sb.append("    pluginOrderPreOperationModify: ").append(toIndentedString(pluginOrderPreOperationModify)).append("\n");
    sb.append("    pluginOrderPreOperationModifyDN: ").append(toIndentedString(pluginOrderPreOperationModifyDN)).append("\n");
    sb.append("    pluginOrderPreOperationSearch: ").append(toIndentedString(pluginOrderPreOperationSearch)).append("\n");
    sb.append("    pluginOrderPostOperationAbandon: ").append(toIndentedString(pluginOrderPostOperationAbandon)).append("\n");
    sb.append("    pluginOrderPostOperationAdd: ").append(toIndentedString(pluginOrderPostOperationAdd)).append("\n");
    sb.append("    pluginOrderPostOperationBind: ").append(toIndentedString(pluginOrderPostOperationBind)).append("\n");
    sb.append("    pluginOrderPostOperationCompare: ").append(toIndentedString(pluginOrderPostOperationCompare)).append("\n");
    sb.append("    pluginOrderPostOperationDelete: ").append(toIndentedString(pluginOrderPostOperationDelete)).append("\n");
    sb.append("    pluginOrderPostOperationExtended: ").append(toIndentedString(pluginOrderPostOperationExtended)).append("\n");
    sb.append("    pluginOrderPostOperationModify: ").append(toIndentedString(pluginOrderPostOperationModify)).append("\n");
    sb.append("    pluginOrderPostOperationModifyDN: ").append(toIndentedString(pluginOrderPostOperationModifyDN)).append("\n");
    sb.append("    pluginOrderPostOperationSearch: ").append(toIndentedString(pluginOrderPostOperationSearch)).append("\n");
    sb.append("    pluginOrderPostOperationUnbind: ").append(toIndentedString(pluginOrderPostOperationUnbind)).append("\n");
    sb.append("    pluginOrderPostResponseAdd: ").append(toIndentedString(pluginOrderPostResponseAdd)).append("\n");
    sb.append("    pluginOrderPostResponseBind: ").append(toIndentedString(pluginOrderPostResponseBind)).append("\n");
    sb.append("    pluginOrderPostResponseCompare: ").append(toIndentedString(pluginOrderPostResponseCompare)).append("\n");
    sb.append("    pluginOrderPostResponseDelete: ").append(toIndentedString(pluginOrderPostResponseDelete)).append("\n");
    sb.append("    pluginOrderPostResponseExtended: ").append(toIndentedString(pluginOrderPostResponseExtended)).append("\n");
    sb.append("    pluginOrderPostResponseModify: ").append(toIndentedString(pluginOrderPostResponseModify)).append("\n");
    sb.append("    pluginOrderPostResponseModifyDN: ").append(toIndentedString(pluginOrderPostResponseModifyDN)).append("\n");
    sb.append("    pluginOrderPostSynchronizationAdd: ").append(toIndentedString(pluginOrderPostSynchronizationAdd)).append("\n");
    sb.append("    pluginOrderPostSynchronizationDelete: ").append(toIndentedString(pluginOrderPostSynchronizationDelete)).append("\n");
    sb.append("    pluginOrderPostSynchronizationModify: ").append(toIndentedString(pluginOrderPostSynchronizationModify)).append("\n");
    sb.append("    pluginOrderPostSynchronizationModifyDN: ").append(toIndentedString(pluginOrderPostSynchronizationModifyDN)).append("\n");
    sb.append("    pluginOrderPostResponseSearch: ").append(toIndentedString(pluginOrderPostResponseSearch)).append("\n");
    sb.append("    pluginOrderSearchResultEntry: ").append(toIndentedString(pluginOrderSearchResultEntry)).append("\n");
    sb.append("    pluginOrderSearchResultReference: ").append(toIndentedString(pluginOrderSearchResultReference)).append("\n");
    sb.append("    pluginOrderSubordinateModifyDN: ").append(toIndentedString(pluginOrderSubordinateModifyDN)).append("\n");
    sb.append("    pluginOrderIntermediateResponse: ").append(toIndentedString(pluginOrderIntermediateResponse)).append("\n");
    sb.append("    meta: ").append(toIndentedString(meta)).append("\n");
    sb.append("    urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20: ").append(toIndentedString(urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("schemas");
    openapiFields.add("pluginOrderStartup");
    openapiFields.add("pluginOrderShutdown");
    openapiFields.add("pluginOrderPostConnect");
    openapiFields.add("pluginOrderPostDisconnect");
    openapiFields.add("pluginOrderLDIFImport");
    openapiFields.add("pluginOrderLDIFExport");
    openapiFields.add("pluginOrderPreParseAbandon");
    openapiFields.add("pluginOrderPreParseAdd");
    openapiFields.add("pluginOrderPreParseBind");
    openapiFields.add("pluginOrderPreParseCompare");
    openapiFields.add("pluginOrderPreParseDelete");
    openapiFields.add("pluginOrderPreParseExtended");
    openapiFields.add("pluginOrderPreParseModify");
    openapiFields.add("pluginOrderPreParseModifyDN");
    openapiFields.add("pluginOrderPreParseSearch");
    openapiFields.add("pluginOrderPreParseUnbind");
    openapiFields.add("pluginOrderPreOperationAdd");
    openapiFields.add("pluginOrderPreOperationBind");
    openapiFields.add("pluginOrderPreOperationCompare");
    openapiFields.add("pluginOrderPreOperationDelete");
    openapiFields.add("pluginOrderPreOperationExtended");
    openapiFields.add("pluginOrderPreOperationModify");
    openapiFields.add("pluginOrderPreOperationModifyDN");
    openapiFields.add("pluginOrderPreOperationSearch");
    openapiFields.add("pluginOrderPostOperationAbandon");
    openapiFields.add("pluginOrderPostOperationAdd");
    openapiFields.add("pluginOrderPostOperationBind");
    openapiFields.add("pluginOrderPostOperationCompare");
    openapiFields.add("pluginOrderPostOperationDelete");
    openapiFields.add("pluginOrderPostOperationExtended");
    openapiFields.add("pluginOrderPostOperationModify");
    openapiFields.add("pluginOrderPostOperationModifyDN");
    openapiFields.add("pluginOrderPostOperationSearch");
    openapiFields.add("pluginOrderPostOperationUnbind");
    openapiFields.add("pluginOrderPostResponseAdd");
    openapiFields.add("pluginOrderPostResponseBind");
    openapiFields.add("pluginOrderPostResponseCompare");
    openapiFields.add("pluginOrderPostResponseDelete");
    openapiFields.add("pluginOrderPostResponseExtended");
    openapiFields.add("pluginOrderPostResponseModify");
    openapiFields.add("pluginOrderPostResponseModifyDN");
    openapiFields.add("pluginOrderPostSynchronizationAdd");
    openapiFields.add("pluginOrderPostSynchronizationDelete");
    openapiFields.add("pluginOrderPostSynchronizationModify");
    openapiFields.add("pluginOrderPostSynchronizationModifyDN");
    openapiFields.add("pluginOrderPostResponseSearch");
    openapiFields.add("pluginOrderSearchResultEntry");
    openapiFields.add("pluginOrderSearchResultReference");
    openapiFields.add("pluginOrderSubordinateModifyDN");
    openapiFields.add("pluginOrderIntermediateResponse");
    openapiFields.add("meta");
    openapiFields.add("urn:pingidentity:schemas:configuration:messages:2.0");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to PluginRootResponse
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!PluginRootResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PluginRootResponse is not found in the empty JSON string", PluginRootResponse.openapiRequiredFields.toString()));
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("schemas") != null && !jsonObj.get("schemas").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `schemas` to be an array in the JSON string but got `%s`", jsonObj.get("schemas").toString()));
      }
      if ((jsonObj.get("pluginOrderStartup") != null && !jsonObj.get("pluginOrderStartup").isJsonNull()) && !jsonObj.get("pluginOrderStartup").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pluginOrderStartup` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pluginOrderStartup").toString()));
      }
      if ((jsonObj.get("pluginOrderShutdown") != null && !jsonObj.get("pluginOrderShutdown").isJsonNull()) && !jsonObj.get("pluginOrderShutdown").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pluginOrderShutdown` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pluginOrderShutdown").toString()));
      }
      if ((jsonObj.get("pluginOrderPostConnect") != null && !jsonObj.get("pluginOrderPostConnect").isJsonNull()) && !jsonObj.get("pluginOrderPostConnect").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pluginOrderPostConnect` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pluginOrderPostConnect").toString()));
      }
      if ((jsonObj.get("pluginOrderPostDisconnect") != null && !jsonObj.get("pluginOrderPostDisconnect").isJsonNull()) && !jsonObj.get("pluginOrderPostDisconnect").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pluginOrderPostDisconnect` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pluginOrderPostDisconnect").toString()));
      }
      if ((jsonObj.get("pluginOrderLDIFImport") != null && !jsonObj.get("pluginOrderLDIFImport").isJsonNull()) && !jsonObj.get("pluginOrderLDIFImport").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pluginOrderLDIFImport` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pluginOrderLDIFImport").toString()));
      }
      if ((jsonObj.get("pluginOrderLDIFExport") != null && !jsonObj.get("pluginOrderLDIFExport").isJsonNull()) && !jsonObj.get("pluginOrderLDIFExport").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pluginOrderLDIFExport` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pluginOrderLDIFExport").toString()));
      }
      if ((jsonObj.get("pluginOrderPreParseAbandon") != null && !jsonObj.get("pluginOrderPreParseAbandon").isJsonNull()) && !jsonObj.get("pluginOrderPreParseAbandon").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pluginOrderPreParseAbandon` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pluginOrderPreParseAbandon").toString()));
      }
      if ((jsonObj.get("pluginOrderPreParseAdd") != null && !jsonObj.get("pluginOrderPreParseAdd").isJsonNull()) && !jsonObj.get("pluginOrderPreParseAdd").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pluginOrderPreParseAdd` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pluginOrderPreParseAdd").toString()));
      }
      if ((jsonObj.get("pluginOrderPreParseBind") != null && !jsonObj.get("pluginOrderPreParseBind").isJsonNull()) && !jsonObj.get("pluginOrderPreParseBind").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pluginOrderPreParseBind` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pluginOrderPreParseBind").toString()));
      }
      if ((jsonObj.get("pluginOrderPreParseCompare") != null && !jsonObj.get("pluginOrderPreParseCompare").isJsonNull()) && !jsonObj.get("pluginOrderPreParseCompare").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pluginOrderPreParseCompare` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pluginOrderPreParseCompare").toString()));
      }
      if ((jsonObj.get("pluginOrderPreParseDelete") != null && !jsonObj.get("pluginOrderPreParseDelete").isJsonNull()) && !jsonObj.get("pluginOrderPreParseDelete").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pluginOrderPreParseDelete` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pluginOrderPreParseDelete").toString()));
      }
      if ((jsonObj.get("pluginOrderPreParseExtended") != null && !jsonObj.get("pluginOrderPreParseExtended").isJsonNull()) && !jsonObj.get("pluginOrderPreParseExtended").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pluginOrderPreParseExtended` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pluginOrderPreParseExtended").toString()));
      }
      if ((jsonObj.get("pluginOrderPreParseModify") != null && !jsonObj.get("pluginOrderPreParseModify").isJsonNull()) && !jsonObj.get("pluginOrderPreParseModify").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pluginOrderPreParseModify` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pluginOrderPreParseModify").toString()));
      }
      if ((jsonObj.get("pluginOrderPreParseModifyDN") != null && !jsonObj.get("pluginOrderPreParseModifyDN").isJsonNull()) && !jsonObj.get("pluginOrderPreParseModifyDN").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pluginOrderPreParseModifyDN` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pluginOrderPreParseModifyDN").toString()));
      }
      if ((jsonObj.get("pluginOrderPreParseSearch") != null && !jsonObj.get("pluginOrderPreParseSearch").isJsonNull()) && !jsonObj.get("pluginOrderPreParseSearch").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pluginOrderPreParseSearch` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pluginOrderPreParseSearch").toString()));
      }
      if ((jsonObj.get("pluginOrderPreParseUnbind") != null && !jsonObj.get("pluginOrderPreParseUnbind").isJsonNull()) && !jsonObj.get("pluginOrderPreParseUnbind").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pluginOrderPreParseUnbind` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pluginOrderPreParseUnbind").toString()));
      }
      if ((jsonObj.get("pluginOrderPreOperationAdd") != null && !jsonObj.get("pluginOrderPreOperationAdd").isJsonNull()) && !jsonObj.get("pluginOrderPreOperationAdd").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pluginOrderPreOperationAdd` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pluginOrderPreOperationAdd").toString()));
      }
      if ((jsonObj.get("pluginOrderPreOperationBind") != null && !jsonObj.get("pluginOrderPreOperationBind").isJsonNull()) && !jsonObj.get("pluginOrderPreOperationBind").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pluginOrderPreOperationBind` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pluginOrderPreOperationBind").toString()));
      }
      if ((jsonObj.get("pluginOrderPreOperationCompare") != null && !jsonObj.get("pluginOrderPreOperationCompare").isJsonNull()) && !jsonObj.get("pluginOrderPreOperationCompare").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pluginOrderPreOperationCompare` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pluginOrderPreOperationCompare").toString()));
      }
      if ((jsonObj.get("pluginOrderPreOperationDelete") != null && !jsonObj.get("pluginOrderPreOperationDelete").isJsonNull()) && !jsonObj.get("pluginOrderPreOperationDelete").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pluginOrderPreOperationDelete` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pluginOrderPreOperationDelete").toString()));
      }
      if ((jsonObj.get("pluginOrderPreOperationExtended") != null && !jsonObj.get("pluginOrderPreOperationExtended").isJsonNull()) && !jsonObj.get("pluginOrderPreOperationExtended").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pluginOrderPreOperationExtended` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pluginOrderPreOperationExtended").toString()));
      }
      if ((jsonObj.get("pluginOrderPreOperationModify") != null && !jsonObj.get("pluginOrderPreOperationModify").isJsonNull()) && !jsonObj.get("pluginOrderPreOperationModify").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pluginOrderPreOperationModify` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pluginOrderPreOperationModify").toString()));
      }
      if ((jsonObj.get("pluginOrderPreOperationModifyDN") != null && !jsonObj.get("pluginOrderPreOperationModifyDN").isJsonNull()) && !jsonObj.get("pluginOrderPreOperationModifyDN").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pluginOrderPreOperationModifyDN` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pluginOrderPreOperationModifyDN").toString()));
      }
      if ((jsonObj.get("pluginOrderPreOperationSearch") != null && !jsonObj.get("pluginOrderPreOperationSearch").isJsonNull()) && !jsonObj.get("pluginOrderPreOperationSearch").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pluginOrderPreOperationSearch` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pluginOrderPreOperationSearch").toString()));
      }
      if ((jsonObj.get("pluginOrderPostOperationAbandon") != null && !jsonObj.get("pluginOrderPostOperationAbandon").isJsonNull()) && !jsonObj.get("pluginOrderPostOperationAbandon").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pluginOrderPostOperationAbandon` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pluginOrderPostOperationAbandon").toString()));
      }
      if ((jsonObj.get("pluginOrderPostOperationAdd") != null && !jsonObj.get("pluginOrderPostOperationAdd").isJsonNull()) && !jsonObj.get("pluginOrderPostOperationAdd").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pluginOrderPostOperationAdd` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pluginOrderPostOperationAdd").toString()));
      }
      if ((jsonObj.get("pluginOrderPostOperationBind") != null && !jsonObj.get("pluginOrderPostOperationBind").isJsonNull()) && !jsonObj.get("pluginOrderPostOperationBind").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pluginOrderPostOperationBind` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pluginOrderPostOperationBind").toString()));
      }
      if ((jsonObj.get("pluginOrderPostOperationCompare") != null && !jsonObj.get("pluginOrderPostOperationCompare").isJsonNull()) && !jsonObj.get("pluginOrderPostOperationCompare").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pluginOrderPostOperationCompare` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pluginOrderPostOperationCompare").toString()));
      }
      if ((jsonObj.get("pluginOrderPostOperationDelete") != null && !jsonObj.get("pluginOrderPostOperationDelete").isJsonNull()) && !jsonObj.get("pluginOrderPostOperationDelete").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pluginOrderPostOperationDelete` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pluginOrderPostOperationDelete").toString()));
      }
      if ((jsonObj.get("pluginOrderPostOperationExtended") != null && !jsonObj.get("pluginOrderPostOperationExtended").isJsonNull()) && !jsonObj.get("pluginOrderPostOperationExtended").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pluginOrderPostOperationExtended` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pluginOrderPostOperationExtended").toString()));
      }
      if ((jsonObj.get("pluginOrderPostOperationModify") != null && !jsonObj.get("pluginOrderPostOperationModify").isJsonNull()) && !jsonObj.get("pluginOrderPostOperationModify").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pluginOrderPostOperationModify` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pluginOrderPostOperationModify").toString()));
      }
      if ((jsonObj.get("pluginOrderPostOperationModifyDN") != null && !jsonObj.get("pluginOrderPostOperationModifyDN").isJsonNull()) && !jsonObj.get("pluginOrderPostOperationModifyDN").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pluginOrderPostOperationModifyDN` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pluginOrderPostOperationModifyDN").toString()));
      }
      if ((jsonObj.get("pluginOrderPostOperationSearch") != null && !jsonObj.get("pluginOrderPostOperationSearch").isJsonNull()) && !jsonObj.get("pluginOrderPostOperationSearch").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pluginOrderPostOperationSearch` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pluginOrderPostOperationSearch").toString()));
      }
      if ((jsonObj.get("pluginOrderPostOperationUnbind") != null && !jsonObj.get("pluginOrderPostOperationUnbind").isJsonNull()) && !jsonObj.get("pluginOrderPostOperationUnbind").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pluginOrderPostOperationUnbind` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pluginOrderPostOperationUnbind").toString()));
      }
      if ((jsonObj.get("pluginOrderPostResponseAdd") != null && !jsonObj.get("pluginOrderPostResponseAdd").isJsonNull()) && !jsonObj.get("pluginOrderPostResponseAdd").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pluginOrderPostResponseAdd` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pluginOrderPostResponseAdd").toString()));
      }
      if ((jsonObj.get("pluginOrderPostResponseBind") != null && !jsonObj.get("pluginOrderPostResponseBind").isJsonNull()) && !jsonObj.get("pluginOrderPostResponseBind").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pluginOrderPostResponseBind` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pluginOrderPostResponseBind").toString()));
      }
      if ((jsonObj.get("pluginOrderPostResponseCompare") != null && !jsonObj.get("pluginOrderPostResponseCompare").isJsonNull()) && !jsonObj.get("pluginOrderPostResponseCompare").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pluginOrderPostResponseCompare` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pluginOrderPostResponseCompare").toString()));
      }
      if ((jsonObj.get("pluginOrderPostResponseDelete") != null && !jsonObj.get("pluginOrderPostResponseDelete").isJsonNull()) && !jsonObj.get("pluginOrderPostResponseDelete").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pluginOrderPostResponseDelete` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pluginOrderPostResponseDelete").toString()));
      }
      if ((jsonObj.get("pluginOrderPostResponseExtended") != null && !jsonObj.get("pluginOrderPostResponseExtended").isJsonNull()) && !jsonObj.get("pluginOrderPostResponseExtended").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pluginOrderPostResponseExtended` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pluginOrderPostResponseExtended").toString()));
      }
      if ((jsonObj.get("pluginOrderPostResponseModify") != null && !jsonObj.get("pluginOrderPostResponseModify").isJsonNull()) && !jsonObj.get("pluginOrderPostResponseModify").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pluginOrderPostResponseModify` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pluginOrderPostResponseModify").toString()));
      }
      if ((jsonObj.get("pluginOrderPostResponseModifyDN") != null && !jsonObj.get("pluginOrderPostResponseModifyDN").isJsonNull()) && !jsonObj.get("pluginOrderPostResponseModifyDN").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pluginOrderPostResponseModifyDN` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pluginOrderPostResponseModifyDN").toString()));
      }
      if ((jsonObj.get("pluginOrderPostSynchronizationAdd") != null && !jsonObj.get("pluginOrderPostSynchronizationAdd").isJsonNull()) && !jsonObj.get("pluginOrderPostSynchronizationAdd").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pluginOrderPostSynchronizationAdd` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pluginOrderPostSynchronizationAdd").toString()));
      }
      if ((jsonObj.get("pluginOrderPostSynchronizationDelete") != null && !jsonObj.get("pluginOrderPostSynchronizationDelete").isJsonNull()) && !jsonObj.get("pluginOrderPostSynchronizationDelete").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pluginOrderPostSynchronizationDelete` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pluginOrderPostSynchronizationDelete").toString()));
      }
      if ((jsonObj.get("pluginOrderPostSynchronizationModify") != null && !jsonObj.get("pluginOrderPostSynchronizationModify").isJsonNull()) && !jsonObj.get("pluginOrderPostSynchronizationModify").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pluginOrderPostSynchronizationModify` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pluginOrderPostSynchronizationModify").toString()));
      }
      if ((jsonObj.get("pluginOrderPostSynchronizationModifyDN") != null && !jsonObj.get("pluginOrderPostSynchronizationModifyDN").isJsonNull()) && !jsonObj.get("pluginOrderPostSynchronizationModifyDN").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pluginOrderPostSynchronizationModifyDN` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pluginOrderPostSynchronizationModifyDN").toString()));
      }
      if ((jsonObj.get("pluginOrderPostResponseSearch") != null && !jsonObj.get("pluginOrderPostResponseSearch").isJsonNull()) && !jsonObj.get("pluginOrderPostResponseSearch").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pluginOrderPostResponseSearch` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pluginOrderPostResponseSearch").toString()));
      }
      if ((jsonObj.get("pluginOrderSearchResultEntry") != null && !jsonObj.get("pluginOrderSearchResultEntry").isJsonNull()) && !jsonObj.get("pluginOrderSearchResultEntry").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pluginOrderSearchResultEntry` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pluginOrderSearchResultEntry").toString()));
      }
      if ((jsonObj.get("pluginOrderSearchResultReference") != null && !jsonObj.get("pluginOrderSearchResultReference").isJsonNull()) && !jsonObj.get("pluginOrderSearchResultReference").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pluginOrderSearchResultReference` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pluginOrderSearchResultReference").toString()));
      }
      if ((jsonObj.get("pluginOrderSubordinateModifyDN") != null && !jsonObj.get("pluginOrderSubordinateModifyDN").isJsonNull()) && !jsonObj.get("pluginOrderSubordinateModifyDN").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pluginOrderSubordinateModifyDN` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pluginOrderSubordinateModifyDN").toString()));
      }
      if ((jsonObj.get("pluginOrderIntermediateResponse") != null && !jsonObj.get("pluginOrderIntermediateResponse").isJsonNull()) && !jsonObj.get("pluginOrderIntermediateResponse").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pluginOrderIntermediateResponse` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pluginOrderIntermediateResponse").toString()));
      }
      // validate the optional field `meta`
      if (jsonObj.get("meta") != null && !jsonObj.get("meta").isJsonNull()) {
        MetaMeta.validateJsonObject(jsonObj.getAsJsonObject("meta"));
      }
      // validate the optional field `urn:pingidentity:schemas:configuration:messages:2.0`
      if (jsonObj.get("urn:pingidentity:schemas:configuration:messages:2.0") != null && !jsonObj.get("urn:pingidentity:schemas:configuration:messages:2.0").isJsonNull()) {
        MetaUrnPingidentitySchemasConfigurationMessages20.validateJsonObject(jsonObj.getAsJsonObject("urn:pingidentity:schemas:configuration:messages:2.0"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PluginRootResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PluginRootResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PluginRootResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PluginRootResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<PluginRootResponse>() {
           @Override
           public void write(JsonWriter out, PluginRootResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public PluginRootResponse read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             PluginRootResponse instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of PluginRootResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of PluginRootResponse
  * @throws IOException if the JSON string is invalid with respect to PluginRootResponse
  */
  public static PluginRootResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PluginRootResponse.class);
  }

 /**
  * Convert an instance of PluginRootResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

