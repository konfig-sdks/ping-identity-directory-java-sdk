/*
 * PingData Config - OpenAPI 3.0
 * This is the PingData Configuration API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Specifies the debug message categories to be logged.
 */
@JsonAdapter(EnumdebugTargetDebugCategoryProp.Adapter.class)public enum EnumdebugTargetDebugCategoryProp {
  
  CAUGHT("caught"),
  
  CONSTRUCTOR("constructor"),
  
  DATA("data"),
  
  DATABASE_ACCESS("database-access"),
  
  ENTER("enter"),
  
  EXIT("exit"),
  
  MESSAGE("message"),
  
  PROTOCOL("protocol"),
  
  THROWN("thrown");

  private String value;

  EnumdebugTargetDebugCategoryProp(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static EnumdebugTargetDebugCategoryProp fromValue(String value) {
    for (EnumdebugTargetDebugCategoryProp b : EnumdebugTargetDebugCategoryProp.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<EnumdebugTargetDebugCategoryProp> {
    @Override
    public void write(final JsonWriter jsonWriter, final EnumdebugTargetDebugCategoryProp enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public EnumdebugTargetDebugCategoryProp read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return EnumdebugTargetDebugCategoryProp.fromValue(value);
    }
  }
}

