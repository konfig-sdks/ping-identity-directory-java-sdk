/*
 * PingData Config - OpenAPI 3.0
 * This is the PingData Configuration API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.EnumdetailedHttpOperationLogPublisherSchemaUrn;
import com.konfigthis.client.model.EnumlogPublisherCompressionMechanismProp;
import com.konfigthis.client.model.EnumlogPublisherLogRequestHeadersProp;
import com.konfigthis.client.model.EnumlogPublisherLogRequestParametersProp;
import com.konfigthis.client.model.EnumlogPublisherLogResponseHeadersProp;
import com.konfigthis.client.model.EnumlogPublisherLoggingErrorBehaviorProp;
import com.konfigthis.client.model.MetaMeta;
import com.konfigthis.client.model.MetaUrnPingidentitySchemasConfigurationMessages20;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * DetailedHttpOperationLogPublisherResponse
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class DetailedHttpOperationLogPublisherResponse {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_SCHEMAS = "schemas";
  @SerializedName(SERIALIZED_NAME_SCHEMAS)
  private List<EnumdetailedHttpOperationLogPublisherSchemaUrn> schemas = new ArrayList<>();

  public static final String SERIALIZED_NAME_LOG_FILE = "logFile";
  @SerializedName(SERIALIZED_NAME_LOG_FILE)
  private String logFile;

  public static final String SERIALIZED_NAME_LOG_FILE_PERMISSIONS = "logFilePermissions";
  @SerializedName(SERIALIZED_NAME_LOG_FILE_PERMISSIONS)
  private String logFilePermissions;

  public static final String SERIALIZED_NAME_ROTATION_POLICY = "rotationPolicy";
  @SerializedName(SERIALIZED_NAME_ROTATION_POLICY)
  private List<String> rotationPolicy = new ArrayList<>();

  public static final String SERIALIZED_NAME_ROTATION_LISTENER = "rotationListener";
  @SerializedName(SERIALIZED_NAME_ROTATION_LISTENER)
  private List<String> rotationListener = null;

  public static final String SERIALIZED_NAME_RETENTION_POLICY = "retentionPolicy";
  @SerializedName(SERIALIZED_NAME_RETENTION_POLICY)
  private List<String> retentionPolicy = new ArrayList<>();

  public static final String SERIALIZED_NAME_COMPRESSION_MECHANISM = "compressionMechanism";
  @SerializedName(SERIALIZED_NAME_COMPRESSION_MECHANISM)
  private EnumlogPublisherCompressionMechanismProp compressionMechanism;

  public static final String SERIALIZED_NAME_SIGN_LOG = "signLog";
  @SerializedName(SERIALIZED_NAME_SIGN_LOG)
  private Boolean signLog;

  public static final String SERIALIZED_NAME_ENCRYPT_LOG = "encryptLog";
  @SerializedName(SERIALIZED_NAME_ENCRYPT_LOG)
  private Boolean encryptLog;

  public static final String SERIALIZED_NAME_ENCRYPTION_SETTINGS_DEFINITION_I_D = "encryptionSettingsDefinitionID";
  @SerializedName(SERIALIZED_NAME_ENCRYPTION_SETTINGS_DEFINITION_I_D)
  private String encryptionSettingsDefinitionID;

  public static final String SERIALIZED_NAME_APPEND = "append";
  @SerializedName(SERIALIZED_NAME_APPEND)
  private Boolean append;

  public static final String SERIALIZED_NAME_LOG_REQUESTS = "logRequests";
  @SerializedName(SERIALIZED_NAME_LOG_REQUESTS)
  private Boolean logRequests;

  public static final String SERIALIZED_NAME_LOG_RESULTS = "logResults";
  @SerializedName(SERIALIZED_NAME_LOG_RESULTS)
  private Boolean logResults;

  public static final String SERIALIZED_NAME_INCLUDE_PRODUCT_NAME = "includeProductName";
  @SerializedName(SERIALIZED_NAME_INCLUDE_PRODUCT_NAME)
  private Boolean includeProductName;

  public static final String SERIALIZED_NAME_INCLUDE_INSTANCE_NAME = "includeInstanceName";
  @SerializedName(SERIALIZED_NAME_INCLUDE_INSTANCE_NAME)
  private Boolean includeInstanceName;

  public static final String SERIALIZED_NAME_INCLUDE_STARTUP_I_D = "includeStartupID";
  @SerializedName(SERIALIZED_NAME_INCLUDE_STARTUP_I_D)
  private Boolean includeStartupID;

  public static final String SERIALIZED_NAME_INCLUDE_THREAD_I_D = "includeThreadID";
  @SerializedName(SERIALIZED_NAME_INCLUDE_THREAD_I_D)
  private Boolean includeThreadID;

  public static final String SERIALIZED_NAME_INCLUDE_REQUEST_DETAILS_IN_RESULT_MESSAGES = "includeRequestDetailsInResultMessages";
  @SerializedName(SERIALIZED_NAME_INCLUDE_REQUEST_DETAILS_IN_RESULT_MESSAGES)
  private Boolean includeRequestDetailsInResultMessages;

  public static final String SERIALIZED_NAME_LOG_REQUEST_HEADERS = "logRequestHeaders";
  @SerializedName(SERIALIZED_NAME_LOG_REQUEST_HEADERS)
  private EnumlogPublisherLogRequestHeadersProp logRequestHeaders;

  public static final String SERIALIZED_NAME_SUPPRESSED_REQUEST_HEADER_NAME = "suppressedRequestHeaderName";
  @SerializedName(SERIALIZED_NAME_SUPPRESSED_REQUEST_HEADER_NAME)
  private List<String> suppressedRequestHeaderName = null;

  public static final String SERIALIZED_NAME_LOG_RESPONSE_HEADERS = "logResponseHeaders";
  @SerializedName(SERIALIZED_NAME_LOG_RESPONSE_HEADERS)
  private EnumlogPublisherLogResponseHeadersProp logResponseHeaders;

  public static final String SERIALIZED_NAME_SUPPRESSED_RESPONSE_HEADER_NAME = "suppressedResponseHeaderName";
  @SerializedName(SERIALIZED_NAME_SUPPRESSED_RESPONSE_HEADER_NAME)
  private List<String> suppressedResponseHeaderName = null;

  public static final String SERIALIZED_NAME_LOG_REQUEST_AUTHORIZATION_TYPE = "logRequestAuthorizationType";
  @SerializedName(SERIALIZED_NAME_LOG_REQUEST_AUTHORIZATION_TYPE)
  private Boolean logRequestAuthorizationType;

  public static final String SERIALIZED_NAME_LOG_REQUEST_COOKIE_NAMES = "logRequestCookieNames";
  @SerializedName(SERIALIZED_NAME_LOG_REQUEST_COOKIE_NAMES)
  private Boolean logRequestCookieNames;

  public static final String SERIALIZED_NAME_LOG_RESPONSE_COOKIE_NAMES = "logResponseCookieNames";
  @SerializedName(SERIALIZED_NAME_LOG_RESPONSE_COOKIE_NAMES)
  private Boolean logResponseCookieNames;

  public static final String SERIALIZED_NAME_LOG_REQUEST_PARAMETERS = "logRequestParameters";
  @SerializedName(SERIALIZED_NAME_LOG_REQUEST_PARAMETERS)
  private EnumlogPublisherLogRequestParametersProp logRequestParameters;

  public static final String SERIALIZED_NAME_LOG_REQUEST_PROTOCOL = "logRequestProtocol";
  @SerializedName(SERIALIZED_NAME_LOG_REQUEST_PROTOCOL)
  private Boolean logRequestProtocol;

  public static final String SERIALIZED_NAME_SUPPRESSED_REQUEST_PARAMETER_NAME = "suppressedRequestParameterName";
  @SerializedName(SERIALIZED_NAME_SUPPRESSED_REQUEST_PARAMETER_NAME)
  private List<String> suppressedRequestParameterName = null;

  public static final String SERIALIZED_NAME_LOG_REDIRECT_U_R_I = "logRedirectURI";
  @SerializedName(SERIALIZED_NAME_LOG_REDIRECT_U_R_I)
  private Boolean logRedirectURI;

  public static final String SERIALIZED_NAME_ASYNCHRONOUS = "asynchronous";
  @SerializedName(SERIALIZED_NAME_ASYNCHRONOUS)
  private Boolean asynchronous;

  public static final String SERIALIZED_NAME_AUTO_FLUSH = "autoFlush";
  @SerializedName(SERIALIZED_NAME_AUTO_FLUSH)
  private Boolean autoFlush;

  public static final String SERIALIZED_NAME_BUFFER_SIZE = "bufferSize";
  @SerializedName(SERIALIZED_NAME_BUFFER_SIZE)
  private String bufferSize;

  public static final String SERIALIZED_NAME_MAX_STRING_LENGTH = "maxStringLength";
  @SerializedName(SERIALIZED_NAME_MAX_STRING_LENGTH)
  private Integer maxStringLength;

  public static final String SERIALIZED_NAME_QUEUE_SIZE = "queueSize";
  @SerializedName(SERIALIZED_NAME_QUEUE_SIZE)
  private Integer queueSize;

  public static final String SERIALIZED_NAME_TIME_INTERVAL = "timeInterval";
  @SerializedName(SERIALIZED_NAME_TIME_INTERVAL)
  private String timeInterval;

  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled;

  public static final String SERIALIZED_NAME_LOGGING_ERROR_BEHAVIOR = "loggingErrorBehavior";
  @SerializedName(SERIALIZED_NAME_LOGGING_ERROR_BEHAVIOR)
  private EnumlogPublisherLoggingErrorBehaviorProp loggingErrorBehavior;

  public static final String SERIALIZED_NAME_META = "meta";
  @SerializedName(SERIALIZED_NAME_META)
  private MetaMeta meta;

  public static final String SERIALIZED_NAME_URN_COLON_PINGIDENTITY_COLON_SCHEMAS_COLON_CONFIGURATION_COLON_MESSAGES_COLON20 = "urn:pingidentity:schemas:configuration:messages:2.0";
  @SerializedName(SERIALIZED_NAME_URN_COLON_PINGIDENTITY_COLON_SCHEMAS_COLON_CONFIGURATION_COLON_MESSAGES_COLON20)
  private MetaUrnPingidentitySchemasConfigurationMessages20 urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20;

  public DetailedHttpOperationLogPublisherResponse() {
  }

  public DetailedHttpOperationLogPublisherResponse id(String id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * Name of the Log Publisher
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Name of the Log Publisher")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    
    
    
    this.id = id;
  }


  public DetailedHttpOperationLogPublisherResponse description(String description) {
    
    
    
    
    this.description = description;
    return this;
  }

   /**
   * A description for this Log Publisher
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A description for this Log Publisher")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    
    
    
    this.description = description;
  }


  public DetailedHttpOperationLogPublisherResponse schemas(List<EnumdetailedHttpOperationLogPublisherSchemaUrn> schemas) {
    
    
    
    
    this.schemas = schemas;
    return this;
  }

  public DetailedHttpOperationLogPublisherResponse addSchemasItem(EnumdetailedHttpOperationLogPublisherSchemaUrn schemasItem) {
    this.schemas.add(schemasItem);
    return this;
  }

   /**
   * Get schemas
   * @return schemas
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<EnumdetailedHttpOperationLogPublisherSchemaUrn> getSchemas() {
    return schemas;
  }


  public void setSchemas(List<EnumdetailedHttpOperationLogPublisherSchemaUrn> schemas) {
    
    
    
    this.schemas = schemas;
  }


  public DetailedHttpOperationLogPublisherResponse logFile(String logFile) {
    
    
    
    
    this.logFile = logFile;
    return this;
  }

   /**
   * The file name to use for the log files generated by the Detailed HTTP Operation Log Publisher. The path to the file can be specified either as relative to the server root or as an absolute path.
   * @return logFile
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The file name to use for the log files generated by the Detailed HTTP Operation Log Publisher. The path to the file can be specified either as relative to the server root or as an absolute path.")

  public String getLogFile() {
    return logFile;
  }


  public void setLogFile(String logFile) {
    
    
    
    this.logFile = logFile;
  }


  public DetailedHttpOperationLogPublisherResponse logFilePermissions(String logFilePermissions) {
    
    
    
    
    this.logFilePermissions = logFilePermissions;
    return this;
  }

   /**
   * The UNIX permissions of the log files created by this Detailed HTTP Operation Log Publisher.
   * @return logFilePermissions
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The UNIX permissions of the log files created by this Detailed HTTP Operation Log Publisher.")

  public String getLogFilePermissions() {
    return logFilePermissions;
  }


  public void setLogFilePermissions(String logFilePermissions) {
    
    
    
    this.logFilePermissions = logFilePermissions;
  }


  public DetailedHttpOperationLogPublisherResponse rotationPolicy(List<String> rotationPolicy) {
    
    
    
    
    this.rotationPolicy = rotationPolicy;
    return this;
  }

  public DetailedHttpOperationLogPublisherResponse addRotationPolicyItem(String rotationPolicyItem) {
    this.rotationPolicy.add(rotationPolicyItem);
    return this;
  }

   /**
   * The rotation policy to use for the Detailed HTTP Operation Log Publisher .
   * @return rotationPolicy
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The rotation policy to use for the Detailed HTTP Operation Log Publisher .")

  public List<String> getRotationPolicy() {
    return rotationPolicy;
  }


  public void setRotationPolicy(List<String> rotationPolicy) {
    
    
    
    this.rotationPolicy = rotationPolicy;
  }


  public DetailedHttpOperationLogPublisherResponse rotationListener(List<String> rotationListener) {
    
    
    
    
    this.rotationListener = rotationListener;
    return this;
  }

  public DetailedHttpOperationLogPublisherResponse addRotationListenerItem(String rotationListenerItem) {
    if (this.rotationListener == null) {
      this.rotationListener = new ArrayList<>();
    }
    this.rotationListener.add(rotationListenerItem);
    return this;
  }

   /**
   * A listener that should be notified whenever a log file is rotated out of service.
   * @return rotationListener
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A listener that should be notified whenever a log file is rotated out of service.")

  public List<String> getRotationListener() {
    return rotationListener;
  }


  public void setRotationListener(List<String> rotationListener) {
    
    
    
    this.rotationListener = rotationListener;
  }


  public DetailedHttpOperationLogPublisherResponse retentionPolicy(List<String> retentionPolicy) {
    
    
    
    
    this.retentionPolicy = retentionPolicy;
    return this;
  }

  public DetailedHttpOperationLogPublisherResponse addRetentionPolicyItem(String retentionPolicyItem) {
    this.retentionPolicy.add(retentionPolicyItem);
    return this;
  }

   /**
   * The retention policy to use for the Detailed HTTP Operation Log Publisher .
   * @return retentionPolicy
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The retention policy to use for the Detailed HTTP Operation Log Publisher .")

  public List<String> getRetentionPolicy() {
    return retentionPolicy;
  }


  public void setRetentionPolicy(List<String> retentionPolicy) {
    
    
    
    this.retentionPolicy = retentionPolicy;
  }


  public DetailedHttpOperationLogPublisherResponse compressionMechanism(EnumlogPublisherCompressionMechanismProp compressionMechanism) {
    
    
    
    
    this.compressionMechanism = compressionMechanism;
    return this;
  }

   /**
   * Get compressionMechanism
   * @return compressionMechanism
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EnumlogPublisherCompressionMechanismProp getCompressionMechanism() {
    return compressionMechanism;
  }


  public void setCompressionMechanism(EnumlogPublisherCompressionMechanismProp compressionMechanism) {
    
    
    
    this.compressionMechanism = compressionMechanism;
  }


  public DetailedHttpOperationLogPublisherResponse signLog(Boolean signLog) {
    
    
    
    
    this.signLog = signLog;
    return this;
  }

   /**
   * Indicates whether the log should be cryptographically signed so that the log content cannot be altered in an undetectable manner.
   * @return signLog
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether the log should be cryptographically signed so that the log content cannot be altered in an undetectable manner.")

  public Boolean getSignLog() {
    return signLog;
  }


  public void setSignLog(Boolean signLog) {
    
    
    
    this.signLog = signLog;
  }


  public DetailedHttpOperationLogPublisherResponse encryptLog(Boolean encryptLog) {
    
    
    
    
    this.encryptLog = encryptLog;
    return this;
  }

   /**
   * Indicates whether log files should be encrypted so that their content is not available to unauthorized users.
   * @return encryptLog
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether log files should be encrypted so that their content is not available to unauthorized users.")

  public Boolean getEncryptLog() {
    return encryptLog;
  }


  public void setEncryptLog(Boolean encryptLog) {
    
    
    
    this.encryptLog = encryptLog;
  }


  public DetailedHttpOperationLogPublisherResponse encryptionSettingsDefinitionID(String encryptionSettingsDefinitionID) {
    
    
    
    
    this.encryptionSettingsDefinitionID = encryptionSettingsDefinitionID;
    return this;
  }

   /**
   * Specifies the ID of the encryption settings definition that should be used to encrypt the data. If this is not provided, the server&#39;s preferred encryption settings definition will be used. The \&quot;encryption-settings list\&quot; command can be used to obtain a list of the encryption settings definitions available in the server.
   * @return encryptionSettingsDefinitionID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the ID of the encryption settings definition that should be used to encrypt the data. If this is not provided, the server's preferred encryption settings definition will be used. The \"encryption-settings list\" command can be used to obtain a list of the encryption settings definitions available in the server.")

  public String getEncryptionSettingsDefinitionID() {
    return encryptionSettingsDefinitionID;
  }


  public void setEncryptionSettingsDefinitionID(String encryptionSettingsDefinitionID) {
    
    
    
    this.encryptionSettingsDefinitionID = encryptionSettingsDefinitionID;
  }


  public DetailedHttpOperationLogPublisherResponse append(Boolean append) {
    
    
    
    
    this.append = append;
    return this;
  }

   /**
   * Specifies whether to append to existing log files.
   * @return append
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies whether to append to existing log files.")

  public Boolean getAppend() {
    return append;
  }


  public void setAppend(Boolean append) {
    
    
    
    this.append = append;
  }


  public DetailedHttpOperationLogPublisherResponse logRequests(Boolean logRequests) {
    
    
    
    
    this.logRequests = logRequests;
    return this;
  }

   /**
   * Indicates whether to record a log message with information about requests received from the client.
   * @return logRequests
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether to record a log message with information about requests received from the client.")

  public Boolean getLogRequests() {
    return logRequests;
  }


  public void setLogRequests(Boolean logRequests) {
    
    
    
    this.logRequests = logRequests;
  }


  public DetailedHttpOperationLogPublisherResponse logResults(Boolean logResults) {
    
    
    
    
    this.logResults = logResults;
    return this;
  }

   /**
   * Indicates whether to record a log message with information about the result of processing a requested HTTP operation.
   * @return logResults
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether to record a log message with information about the result of processing a requested HTTP operation.")

  public Boolean getLogResults() {
    return logResults;
  }


  public void setLogResults(Boolean logResults) {
    
    
    
    this.logResults = logResults;
  }


  public DetailedHttpOperationLogPublisherResponse includeProductName(Boolean includeProductName) {
    
    
    
    
    this.includeProductName = includeProductName;
    return this;
  }

   /**
   * Indicates whether log messages should include the product name for the Directory Server.
   * @return includeProductName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether log messages should include the product name for the Directory Server.")

  public Boolean getIncludeProductName() {
    return includeProductName;
  }


  public void setIncludeProductName(Boolean includeProductName) {
    
    
    
    this.includeProductName = includeProductName;
  }


  public DetailedHttpOperationLogPublisherResponse includeInstanceName(Boolean includeInstanceName) {
    
    
    
    
    this.includeInstanceName = includeInstanceName;
    return this;
  }

   /**
   * Indicates whether log messages should include the instance name for the Directory Server.
   * @return includeInstanceName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether log messages should include the instance name for the Directory Server.")

  public Boolean getIncludeInstanceName() {
    return includeInstanceName;
  }


  public void setIncludeInstanceName(Boolean includeInstanceName) {
    
    
    
    this.includeInstanceName = includeInstanceName;
  }


  public DetailedHttpOperationLogPublisherResponse includeStartupID(Boolean includeStartupID) {
    
    
    
    
    this.includeStartupID = includeStartupID;
    return this;
  }

   /**
   * Indicates whether log messages should include the startup ID for the Directory Server, which is a value assigned to the server instance at startup and may be used to identify when the server has been restarted.
   * @return includeStartupID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether log messages should include the startup ID for the Directory Server, which is a value assigned to the server instance at startup and may be used to identify when the server has been restarted.")

  public Boolean getIncludeStartupID() {
    return includeStartupID;
  }


  public void setIncludeStartupID(Boolean includeStartupID) {
    
    
    
    this.includeStartupID = includeStartupID;
  }


  public DetailedHttpOperationLogPublisherResponse includeThreadID(Boolean includeThreadID) {
    
    
    
    
    this.includeThreadID = includeThreadID;
    return this;
  }

   /**
   * Indicates whether log messages should include the thread ID for the Directory Server in each log message. This ID can be used to correlate log messages from the same thread within a single log as well as generated by the same thread across different types of log files. More information about the thread with a specific ID can be obtained using the cn&#x3D;JVM Stack Trace,cn&#x3D;monitor entry.
   * @return includeThreadID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether log messages should include the thread ID for the Directory Server in each log message. This ID can be used to correlate log messages from the same thread within a single log as well as generated by the same thread across different types of log files. More information about the thread with a specific ID can be obtained using the cn=JVM Stack Trace,cn=monitor entry.")

  public Boolean getIncludeThreadID() {
    return includeThreadID;
  }


  public void setIncludeThreadID(Boolean includeThreadID) {
    
    
    
    this.includeThreadID = includeThreadID;
  }


  public DetailedHttpOperationLogPublisherResponse includeRequestDetailsInResultMessages(Boolean includeRequestDetailsInResultMessages) {
    
    
    
    
    this.includeRequestDetailsInResultMessages = includeRequestDetailsInResultMessages;
    return this;
  }

   /**
   * Indicates whether result log messages should include all of the elements of request log messages. This may be used to record a single message per operation with details about both the request and response.
   * @return includeRequestDetailsInResultMessages
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether result log messages should include all of the elements of request log messages. This may be used to record a single message per operation with details about both the request and response.")

  public Boolean getIncludeRequestDetailsInResultMessages() {
    return includeRequestDetailsInResultMessages;
  }


  public void setIncludeRequestDetailsInResultMessages(Boolean includeRequestDetailsInResultMessages) {
    
    
    
    this.includeRequestDetailsInResultMessages = includeRequestDetailsInResultMessages;
  }


  public DetailedHttpOperationLogPublisherResponse logRequestHeaders(EnumlogPublisherLogRequestHeadersProp logRequestHeaders) {
    
    
    
    
    this.logRequestHeaders = logRequestHeaders;
    return this;
  }

   /**
   * Get logRequestHeaders
   * @return logRequestHeaders
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EnumlogPublisherLogRequestHeadersProp getLogRequestHeaders() {
    return logRequestHeaders;
  }


  public void setLogRequestHeaders(EnumlogPublisherLogRequestHeadersProp logRequestHeaders) {
    
    
    
    this.logRequestHeaders = logRequestHeaders;
  }


  public DetailedHttpOperationLogPublisherResponse suppressedRequestHeaderName(List<String> suppressedRequestHeaderName) {
    
    
    
    
    this.suppressedRequestHeaderName = suppressedRequestHeaderName;
    return this;
  }

  public DetailedHttpOperationLogPublisherResponse addSuppressedRequestHeaderNameItem(String suppressedRequestHeaderNameItem) {
    if (this.suppressedRequestHeaderName == null) {
      this.suppressedRequestHeaderName = new ArrayList<>();
    }
    this.suppressedRequestHeaderName.add(suppressedRequestHeaderNameItem);
    return this;
  }

   /**
   * Specifies the case-insensitive names of request headers that should be omitted from log messages (e.g., for the purpose of brevity or security). This will only be used if the log-request-headers property has a value of true.
   * @return suppressedRequestHeaderName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the case-insensitive names of request headers that should be omitted from log messages (e.g., for the purpose of brevity or security). This will only be used if the log-request-headers property has a value of true.")

  public List<String> getSuppressedRequestHeaderName() {
    return suppressedRequestHeaderName;
  }


  public void setSuppressedRequestHeaderName(List<String> suppressedRequestHeaderName) {
    
    
    
    this.suppressedRequestHeaderName = suppressedRequestHeaderName;
  }


  public DetailedHttpOperationLogPublisherResponse logResponseHeaders(EnumlogPublisherLogResponseHeadersProp logResponseHeaders) {
    
    
    
    
    this.logResponseHeaders = logResponseHeaders;
    return this;
  }

   /**
   * Get logResponseHeaders
   * @return logResponseHeaders
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EnumlogPublisherLogResponseHeadersProp getLogResponseHeaders() {
    return logResponseHeaders;
  }


  public void setLogResponseHeaders(EnumlogPublisherLogResponseHeadersProp logResponseHeaders) {
    
    
    
    this.logResponseHeaders = logResponseHeaders;
  }


  public DetailedHttpOperationLogPublisherResponse suppressedResponseHeaderName(List<String> suppressedResponseHeaderName) {
    
    
    
    
    this.suppressedResponseHeaderName = suppressedResponseHeaderName;
    return this;
  }

  public DetailedHttpOperationLogPublisherResponse addSuppressedResponseHeaderNameItem(String suppressedResponseHeaderNameItem) {
    if (this.suppressedResponseHeaderName == null) {
      this.suppressedResponseHeaderName = new ArrayList<>();
    }
    this.suppressedResponseHeaderName.add(suppressedResponseHeaderNameItem);
    return this;
  }

   /**
   * Specifies the case-insensitive names of response headers that should be omitted from log messages (e.g., for the purpose of brevity or security). This will only be used if the log-response-headers property has a value of true.
   * @return suppressedResponseHeaderName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the case-insensitive names of response headers that should be omitted from log messages (e.g., for the purpose of brevity or security). This will only be used if the log-response-headers property has a value of true.")

  public List<String> getSuppressedResponseHeaderName() {
    return suppressedResponseHeaderName;
  }


  public void setSuppressedResponseHeaderName(List<String> suppressedResponseHeaderName) {
    
    
    
    this.suppressedResponseHeaderName = suppressedResponseHeaderName;
  }


  public DetailedHttpOperationLogPublisherResponse logRequestAuthorizationType(Boolean logRequestAuthorizationType) {
    
    
    
    
    this.logRequestAuthorizationType = logRequestAuthorizationType;
    return this;
  }

   /**
   * Indicates whether to log the type of credentials given if an \&quot;Authorization\&quot; header was included in the request. Logging the authorization type may be useful, and is much more secure than logging the entire value of the \&quot;Authorization\&quot; header.
   * @return logRequestAuthorizationType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether to log the type of credentials given if an \"Authorization\" header was included in the request. Logging the authorization type may be useful, and is much more secure than logging the entire value of the \"Authorization\" header.")

  public Boolean getLogRequestAuthorizationType() {
    return logRequestAuthorizationType;
  }


  public void setLogRequestAuthorizationType(Boolean logRequestAuthorizationType) {
    
    
    
    this.logRequestAuthorizationType = logRequestAuthorizationType;
  }


  public DetailedHttpOperationLogPublisherResponse logRequestCookieNames(Boolean logRequestCookieNames) {
    
    
    
    
    this.logRequestCookieNames = logRequestCookieNames;
    return this;
  }

   /**
   * Indicates whether to log the names of any cookies included in an HTTP request. Logging cookie names may be useful and is much more secure than logging the entire content of the cookies (which may include sensitive information).
   * @return logRequestCookieNames
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether to log the names of any cookies included in an HTTP request. Logging cookie names may be useful and is much more secure than logging the entire content of the cookies (which may include sensitive information).")

  public Boolean getLogRequestCookieNames() {
    return logRequestCookieNames;
  }


  public void setLogRequestCookieNames(Boolean logRequestCookieNames) {
    
    
    
    this.logRequestCookieNames = logRequestCookieNames;
  }


  public DetailedHttpOperationLogPublisherResponse logResponseCookieNames(Boolean logResponseCookieNames) {
    
    
    
    
    this.logResponseCookieNames = logResponseCookieNames;
    return this;
  }

   /**
   * Indicates whether to log the names of any cookies set in an HTTP response. Logging cookie names may be useful and is much more secure than logging the entire content of the cookies (which may include sensitive information).
   * @return logResponseCookieNames
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether to log the names of any cookies set in an HTTP response. Logging cookie names may be useful and is much more secure than logging the entire content of the cookies (which may include sensitive information).")

  public Boolean getLogResponseCookieNames() {
    return logResponseCookieNames;
  }


  public void setLogResponseCookieNames(Boolean logResponseCookieNames) {
    
    
    
    this.logResponseCookieNames = logResponseCookieNames;
  }


  public DetailedHttpOperationLogPublisherResponse logRequestParameters(EnumlogPublisherLogRequestParametersProp logRequestParameters) {
    
    
    
    
    this.logRequestParameters = logRequestParameters;
    return this;
  }

   /**
   * Get logRequestParameters
   * @return logRequestParameters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EnumlogPublisherLogRequestParametersProp getLogRequestParameters() {
    return logRequestParameters;
  }


  public void setLogRequestParameters(EnumlogPublisherLogRequestParametersProp logRequestParameters) {
    
    
    
    this.logRequestParameters = logRequestParameters;
  }


  public DetailedHttpOperationLogPublisherResponse logRequestProtocol(Boolean logRequestProtocol) {
    
    
    
    
    this.logRequestProtocol = logRequestProtocol;
    return this;
  }

   /**
   * Indicates whether request log messages should include information about the HTTP version specified in the request.
   * @return logRequestProtocol
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether request log messages should include information about the HTTP version specified in the request.")

  public Boolean getLogRequestProtocol() {
    return logRequestProtocol;
  }


  public void setLogRequestProtocol(Boolean logRequestProtocol) {
    
    
    
    this.logRequestProtocol = logRequestProtocol;
  }


  public DetailedHttpOperationLogPublisherResponse suppressedRequestParameterName(List<String> suppressedRequestParameterName) {
    
    
    
    
    this.suppressedRequestParameterName = suppressedRequestParameterName;
    return this;
  }

  public DetailedHttpOperationLogPublisherResponse addSuppressedRequestParameterNameItem(String suppressedRequestParameterNameItem) {
    if (this.suppressedRequestParameterName == null) {
      this.suppressedRequestParameterName = new ArrayList<>();
    }
    this.suppressedRequestParameterName.add(suppressedRequestParameterNameItem);
    return this;
  }

   /**
   * Specifies the case-insensitive names of request parameters that should be omitted from log messages (e.g., for the purpose of brevity or security). This will only be used if the log-request-parameters property has a value of parameter-names or parameter-names-and-values.
   * @return suppressedRequestParameterName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the case-insensitive names of request parameters that should be omitted from log messages (e.g., for the purpose of brevity or security). This will only be used if the log-request-parameters property has a value of parameter-names or parameter-names-and-values.")

  public List<String> getSuppressedRequestParameterName() {
    return suppressedRequestParameterName;
  }


  public void setSuppressedRequestParameterName(List<String> suppressedRequestParameterName) {
    
    
    
    this.suppressedRequestParameterName = suppressedRequestParameterName;
  }


  public DetailedHttpOperationLogPublisherResponse logRedirectURI(Boolean logRedirectURI) {
    
    
    
    
    this.logRedirectURI = logRedirectURI;
    return this;
  }

   /**
   * Indicates whether the redirect URI (i.e., the value of the \&quot;Location\&quot; header from responses) should be included in response log messages.
   * @return logRedirectURI
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether the redirect URI (i.e., the value of the \"Location\" header from responses) should be included in response log messages.")

  public Boolean getLogRedirectURI() {
    return logRedirectURI;
  }


  public void setLogRedirectURI(Boolean logRedirectURI) {
    
    
    
    this.logRedirectURI = logRedirectURI;
  }


  public DetailedHttpOperationLogPublisherResponse asynchronous(Boolean asynchronous) {
    
    
    
    
    this.asynchronous = asynchronous;
    return this;
  }

   /**
   * Indicates whether the Detailed HTTP Operation Log Publisher will publish records asynchronously.
   * @return asynchronous
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Indicates whether the Detailed HTTP Operation Log Publisher will publish records asynchronously.")

  public Boolean getAsynchronous() {
    return asynchronous;
  }


  public void setAsynchronous(Boolean asynchronous) {
    
    
    
    this.asynchronous = asynchronous;
  }


  public DetailedHttpOperationLogPublisherResponse autoFlush(Boolean autoFlush) {
    
    
    
    
    this.autoFlush = autoFlush;
    return this;
  }

   /**
   * Specifies whether to flush the writer after every log record.
   * @return autoFlush
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies whether to flush the writer after every log record.")

  public Boolean getAutoFlush() {
    return autoFlush;
  }


  public void setAutoFlush(Boolean autoFlush) {
    
    
    
    this.autoFlush = autoFlush;
  }


  public DetailedHttpOperationLogPublisherResponse bufferSize(String bufferSize) {
    
    
    
    
    this.bufferSize = bufferSize;
    return this;
  }

   /**
   * Specifies the log file buffer size.
   * @return bufferSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the log file buffer size.")

  public String getBufferSize() {
    return bufferSize;
  }


  public void setBufferSize(String bufferSize) {
    
    
    
    this.bufferSize = bufferSize;
  }


  public DetailedHttpOperationLogPublisherResponse maxStringLength(Integer maxStringLength) {
    
    
    
    
    this.maxStringLength = maxStringLength;
    return this;
  }

   /**
   * Specifies the maximum length of any individual string that should be logged. If a log message includes a string longer than this number of characters, it will be truncated. A value of zero indicates that no truncation will be used.
   * @return maxStringLength
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the maximum length of any individual string that should be logged. If a log message includes a string longer than this number of characters, it will be truncated. A value of zero indicates that no truncation will be used.")

  public Integer getMaxStringLength() {
    return maxStringLength;
  }


  public void setMaxStringLength(Integer maxStringLength) {
    
    
    
    this.maxStringLength = maxStringLength;
  }


  public DetailedHttpOperationLogPublisherResponse queueSize(Integer queueSize) {
    
    
    
    
    this.queueSize = queueSize;
    return this;
  }

   /**
   * The maximum number of log records that can be stored in the asynchronous queue.
   * @return queueSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The maximum number of log records that can be stored in the asynchronous queue.")

  public Integer getQueueSize() {
    return queueSize;
  }


  public void setQueueSize(Integer queueSize) {
    
    
    
    this.queueSize = queueSize;
  }


  public DetailedHttpOperationLogPublisherResponse timeInterval(String timeInterval) {
    
    
    
    
    this.timeInterval = timeInterval;
    return this;
  }

   /**
   * Specifies the interval at which to check whether the log files need to be rotated.
   * @return timeInterval
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the interval at which to check whether the log files need to be rotated.")

  public String getTimeInterval() {
    return timeInterval;
  }


  public void setTimeInterval(String timeInterval) {
    
    
    
    this.timeInterval = timeInterval;
  }


  public DetailedHttpOperationLogPublisherResponse enabled(Boolean enabled) {
    
    
    
    
    this.enabled = enabled;
    return this;
  }

   /**
   * Indicates whether the Log Publisher is enabled for use.
   * @return enabled
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Indicates whether the Log Publisher is enabled for use.")

  public Boolean getEnabled() {
    return enabled;
  }


  public void setEnabled(Boolean enabled) {
    
    
    
    this.enabled = enabled;
  }


  public DetailedHttpOperationLogPublisherResponse loggingErrorBehavior(EnumlogPublisherLoggingErrorBehaviorProp loggingErrorBehavior) {
    
    
    
    
    this.loggingErrorBehavior = loggingErrorBehavior;
    return this;
  }

   /**
   * Get loggingErrorBehavior
   * @return loggingErrorBehavior
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EnumlogPublisherLoggingErrorBehaviorProp getLoggingErrorBehavior() {
    return loggingErrorBehavior;
  }


  public void setLoggingErrorBehavior(EnumlogPublisherLoggingErrorBehaviorProp loggingErrorBehavior) {
    
    
    
    this.loggingErrorBehavior = loggingErrorBehavior;
  }


  public DetailedHttpOperationLogPublisherResponse meta(MetaMeta meta) {
    
    
    
    
    this.meta = meta;
    return this;
  }

   /**
   * Get meta
   * @return meta
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public MetaMeta getMeta() {
    return meta;
  }


  public void setMeta(MetaMeta meta) {
    
    
    
    this.meta = meta;
  }


  public DetailedHttpOperationLogPublisherResponse urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20(MetaUrnPingidentitySchemasConfigurationMessages20 urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20) {
    
    
    
    
    this.urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20 = urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20;
    return this;
  }

   /**
   * Get urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20
   * @return urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public MetaUrnPingidentitySchemasConfigurationMessages20 getUrnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20() {
    return urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20;
  }


  public void setUrnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20(MetaUrnPingidentitySchemasConfigurationMessages20 urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20) {
    
    
    
    this.urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20 = urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the DetailedHttpOperationLogPublisherResponse instance itself
   */
  public DetailedHttpOperationLogPublisherResponse putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DetailedHttpOperationLogPublisherResponse detailedHttpOperationLogPublisherResponse = (DetailedHttpOperationLogPublisherResponse) o;
    return Objects.equals(this.id, detailedHttpOperationLogPublisherResponse.id) &&
        Objects.equals(this.description, detailedHttpOperationLogPublisherResponse.description) &&
        Objects.equals(this.schemas, detailedHttpOperationLogPublisherResponse.schemas) &&
        Objects.equals(this.logFile, detailedHttpOperationLogPublisherResponse.logFile) &&
        Objects.equals(this.logFilePermissions, detailedHttpOperationLogPublisherResponse.logFilePermissions) &&
        Objects.equals(this.rotationPolicy, detailedHttpOperationLogPublisherResponse.rotationPolicy) &&
        Objects.equals(this.rotationListener, detailedHttpOperationLogPublisherResponse.rotationListener) &&
        Objects.equals(this.retentionPolicy, detailedHttpOperationLogPublisherResponse.retentionPolicy) &&
        Objects.equals(this.compressionMechanism, detailedHttpOperationLogPublisherResponse.compressionMechanism) &&
        Objects.equals(this.signLog, detailedHttpOperationLogPublisherResponse.signLog) &&
        Objects.equals(this.encryptLog, detailedHttpOperationLogPublisherResponse.encryptLog) &&
        Objects.equals(this.encryptionSettingsDefinitionID, detailedHttpOperationLogPublisherResponse.encryptionSettingsDefinitionID) &&
        Objects.equals(this.append, detailedHttpOperationLogPublisherResponse.append) &&
        Objects.equals(this.logRequests, detailedHttpOperationLogPublisherResponse.logRequests) &&
        Objects.equals(this.logResults, detailedHttpOperationLogPublisherResponse.logResults) &&
        Objects.equals(this.includeProductName, detailedHttpOperationLogPublisherResponse.includeProductName) &&
        Objects.equals(this.includeInstanceName, detailedHttpOperationLogPublisherResponse.includeInstanceName) &&
        Objects.equals(this.includeStartupID, detailedHttpOperationLogPublisherResponse.includeStartupID) &&
        Objects.equals(this.includeThreadID, detailedHttpOperationLogPublisherResponse.includeThreadID) &&
        Objects.equals(this.includeRequestDetailsInResultMessages, detailedHttpOperationLogPublisherResponse.includeRequestDetailsInResultMessages) &&
        Objects.equals(this.logRequestHeaders, detailedHttpOperationLogPublisherResponse.logRequestHeaders) &&
        Objects.equals(this.suppressedRequestHeaderName, detailedHttpOperationLogPublisherResponse.suppressedRequestHeaderName) &&
        Objects.equals(this.logResponseHeaders, detailedHttpOperationLogPublisherResponse.logResponseHeaders) &&
        Objects.equals(this.suppressedResponseHeaderName, detailedHttpOperationLogPublisherResponse.suppressedResponseHeaderName) &&
        Objects.equals(this.logRequestAuthorizationType, detailedHttpOperationLogPublisherResponse.logRequestAuthorizationType) &&
        Objects.equals(this.logRequestCookieNames, detailedHttpOperationLogPublisherResponse.logRequestCookieNames) &&
        Objects.equals(this.logResponseCookieNames, detailedHttpOperationLogPublisherResponse.logResponseCookieNames) &&
        Objects.equals(this.logRequestParameters, detailedHttpOperationLogPublisherResponse.logRequestParameters) &&
        Objects.equals(this.logRequestProtocol, detailedHttpOperationLogPublisherResponse.logRequestProtocol) &&
        Objects.equals(this.suppressedRequestParameterName, detailedHttpOperationLogPublisherResponse.suppressedRequestParameterName) &&
        Objects.equals(this.logRedirectURI, detailedHttpOperationLogPublisherResponse.logRedirectURI) &&
        Objects.equals(this.asynchronous, detailedHttpOperationLogPublisherResponse.asynchronous) &&
        Objects.equals(this.autoFlush, detailedHttpOperationLogPublisherResponse.autoFlush) &&
        Objects.equals(this.bufferSize, detailedHttpOperationLogPublisherResponse.bufferSize) &&
        Objects.equals(this.maxStringLength, detailedHttpOperationLogPublisherResponse.maxStringLength) &&
        Objects.equals(this.queueSize, detailedHttpOperationLogPublisherResponse.queueSize) &&
        Objects.equals(this.timeInterval, detailedHttpOperationLogPublisherResponse.timeInterval) &&
        Objects.equals(this.enabled, detailedHttpOperationLogPublisherResponse.enabled) &&
        Objects.equals(this.loggingErrorBehavior, detailedHttpOperationLogPublisherResponse.loggingErrorBehavior) &&
        Objects.equals(this.meta, detailedHttpOperationLogPublisherResponse.meta) &&
        Objects.equals(this.urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20, detailedHttpOperationLogPublisherResponse.urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20)&&
        Objects.equals(this.additionalProperties, detailedHttpOperationLogPublisherResponse.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, description, schemas, logFile, logFilePermissions, rotationPolicy, rotationListener, retentionPolicy, compressionMechanism, signLog, encryptLog, encryptionSettingsDefinitionID, append, logRequests, logResults, includeProductName, includeInstanceName, includeStartupID, includeThreadID, includeRequestDetailsInResultMessages, logRequestHeaders, suppressedRequestHeaderName, logResponseHeaders, suppressedResponseHeaderName, logRequestAuthorizationType, logRequestCookieNames, logResponseCookieNames, logRequestParameters, logRequestProtocol, suppressedRequestParameterName, logRedirectURI, asynchronous, autoFlush, bufferSize, maxStringLength, queueSize, timeInterval, enabled, loggingErrorBehavior, meta, urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DetailedHttpOperationLogPublisherResponse {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    schemas: ").append(toIndentedString(schemas)).append("\n");
    sb.append("    logFile: ").append(toIndentedString(logFile)).append("\n");
    sb.append("    logFilePermissions: ").append(toIndentedString(logFilePermissions)).append("\n");
    sb.append("    rotationPolicy: ").append(toIndentedString(rotationPolicy)).append("\n");
    sb.append("    rotationListener: ").append(toIndentedString(rotationListener)).append("\n");
    sb.append("    retentionPolicy: ").append(toIndentedString(retentionPolicy)).append("\n");
    sb.append("    compressionMechanism: ").append(toIndentedString(compressionMechanism)).append("\n");
    sb.append("    signLog: ").append(toIndentedString(signLog)).append("\n");
    sb.append("    encryptLog: ").append(toIndentedString(encryptLog)).append("\n");
    sb.append("    encryptionSettingsDefinitionID: ").append(toIndentedString(encryptionSettingsDefinitionID)).append("\n");
    sb.append("    append: ").append(toIndentedString(append)).append("\n");
    sb.append("    logRequests: ").append(toIndentedString(logRequests)).append("\n");
    sb.append("    logResults: ").append(toIndentedString(logResults)).append("\n");
    sb.append("    includeProductName: ").append(toIndentedString(includeProductName)).append("\n");
    sb.append("    includeInstanceName: ").append(toIndentedString(includeInstanceName)).append("\n");
    sb.append("    includeStartupID: ").append(toIndentedString(includeStartupID)).append("\n");
    sb.append("    includeThreadID: ").append(toIndentedString(includeThreadID)).append("\n");
    sb.append("    includeRequestDetailsInResultMessages: ").append(toIndentedString(includeRequestDetailsInResultMessages)).append("\n");
    sb.append("    logRequestHeaders: ").append(toIndentedString(logRequestHeaders)).append("\n");
    sb.append("    suppressedRequestHeaderName: ").append(toIndentedString(suppressedRequestHeaderName)).append("\n");
    sb.append("    logResponseHeaders: ").append(toIndentedString(logResponseHeaders)).append("\n");
    sb.append("    suppressedResponseHeaderName: ").append(toIndentedString(suppressedResponseHeaderName)).append("\n");
    sb.append("    logRequestAuthorizationType: ").append(toIndentedString(logRequestAuthorizationType)).append("\n");
    sb.append("    logRequestCookieNames: ").append(toIndentedString(logRequestCookieNames)).append("\n");
    sb.append("    logResponseCookieNames: ").append(toIndentedString(logResponseCookieNames)).append("\n");
    sb.append("    logRequestParameters: ").append(toIndentedString(logRequestParameters)).append("\n");
    sb.append("    logRequestProtocol: ").append(toIndentedString(logRequestProtocol)).append("\n");
    sb.append("    suppressedRequestParameterName: ").append(toIndentedString(suppressedRequestParameterName)).append("\n");
    sb.append("    logRedirectURI: ").append(toIndentedString(logRedirectURI)).append("\n");
    sb.append("    asynchronous: ").append(toIndentedString(asynchronous)).append("\n");
    sb.append("    autoFlush: ").append(toIndentedString(autoFlush)).append("\n");
    sb.append("    bufferSize: ").append(toIndentedString(bufferSize)).append("\n");
    sb.append("    maxStringLength: ").append(toIndentedString(maxStringLength)).append("\n");
    sb.append("    queueSize: ").append(toIndentedString(queueSize)).append("\n");
    sb.append("    timeInterval: ").append(toIndentedString(timeInterval)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    loggingErrorBehavior: ").append(toIndentedString(loggingErrorBehavior)).append("\n");
    sb.append("    meta: ").append(toIndentedString(meta)).append("\n");
    sb.append("    urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20: ").append(toIndentedString(urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("description");
    openapiFields.add("schemas");
    openapiFields.add("logFile");
    openapiFields.add("logFilePermissions");
    openapiFields.add("rotationPolicy");
    openapiFields.add("rotationListener");
    openapiFields.add("retentionPolicy");
    openapiFields.add("compressionMechanism");
    openapiFields.add("signLog");
    openapiFields.add("encryptLog");
    openapiFields.add("encryptionSettingsDefinitionID");
    openapiFields.add("append");
    openapiFields.add("logRequests");
    openapiFields.add("logResults");
    openapiFields.add("includeProductName");
    openapiFields.add("includeInstanceName");
    openapiFields.add("includeStartupID");
    openapiFields.add("includeThreadID");
    openapiFields.add("includeRequestDetailsInResultMessages");
    openapiFields.add("logRequestHeaders");
    openapiFields.add("suppressedRequestHeaderName");
    openapiFields.add("logResponseHeaders");
    openapiFields.add("suppressedResponseHeaderName");
    openapiFields.add("logRequestAuthorizationType");
    openapiFields.add("logRequestCookieNames");
    openapiFields.add("logResponseCookieNames");
    openapiFields.add("logRequestParameters");
    openapiFields.add("logRequestProtocol");
    openapiFields.add("suppressedRequestParameterName");
    openapiFields.add("logRedirectURI");
    openapiFields.add("asynchronous");
    openapiFields.add("autoFlush");
    openapiFields.add("bufferSize");
    openapiFields.add("maxStringLength");
    openapiFields.add("queueSize");
    openapiFields.add("timeInterval");
    openapiFields.add("enabled");
    openapiFields.add("loggingErrorBehavior");
    openapiFields.add("meta");
    openapiFields.add("urn:pingidentity:schemas:configuration:messages:2.0");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("schemas");
    openapiRequiredFields.add("logFile");
    openapiRequiredFields.add("logFilePermissions");
    openapiRequiredFields.add("rotationPolicy");
    openapiRequiredFields.add("retentionPolicy");
    openapiRequiredFields.add("asynchronous");
    openapiRequiredFields.add("enabled");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to DetailedHttpOperationLogPublisherResponse
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!DetailedHttpOperationLogPublisherResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DetailedHttpOperationLogPublisherResponse is not found in the empty JSON string", DetailedHttpOperationLogPublisherResponse.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : DetailedHttpOperationLogPublisherResponse.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("schemas") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("schemas").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `schemas` to be an array in the JSON string but got `%s`", jsonObj.get("schemas").toString()));
      }
      if (!jsonObj.get("logFile").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logFile` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logFile").toString()));
      }
      if (!jsonObj.get("logFilePermissions").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logFilePermissions` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logFilePermissions").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("rotationPolicy") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("rotationPolicy").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `rotationPolicy` to be an array in the JSON string but got `%s`", jsonObj.get("rotationPolicy").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("rotationListener") != null && !jsonObj.get("rotationListener").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `rotationListener` to be an array in the JSON string but got `%s`", jsonObj.get("rotationListener").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("retentionPolicy") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("retentionPolicy").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `retentionPolicy` to be an array in the JSON string but got `%s`", jsonObj.get("retentionPolicy").toString()));
      }
      if ((jsonObj.get("encryptionSettingsDefinitionID") != null && !jsonObj.get("encryptionSettingsDefinitionID").isJsonNull()) && !jsonObj.get("encryptionSettingsDefinitionID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `encryptionSettingsDefinitionID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("encryptionSettingsDefinitionID").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("suppressedRequestHeaderName") != null && !jsonObj.get("suppressedRequestHeaderName").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `suppressedRequestHeaderName` to be an array in the JSON string but got `%s`", jsonObj.get("suppressedRequestHeaderName").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("suppressedResponseHeaderName") != null && !jsonObj.get("suppressedResponseHeaderName").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `suppressedResponseHeaderName` to be an array in the JSON string but got `%s`", jsonObj.get("suppressedResponseHeaderName").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("suppressedRequestParameterName") != null && !jsonObj.get("suppressedRequestParameterName").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `suppressedRequestParameterName` to be an array in the JSON string but got `%s`", jsonObj.get("suppressedRequestParameterName").toString()));
      }
      if ((jsonObj.get("bufferSize") != null && !jsonObj.get("bufferSize").isJsonNull()) && !jsonObj.get("bufferSize").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bufferSize` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bufferSize").toString()));
      }
      if ((jsonObj.get("timeInterval") != null && !jsonObj.get("timeInterval").isJsonNull()) && !jsonObj.get("timeInterval").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timeInterval` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timeInterval").toString()));
      }
      // validate the optional field `meta`
      if (jsonObj.get("meta") != null && !jsonObj.get("meta").isJsonNull()) {
        MetaMeta.validateJsonObject(jsonObj.getAsJsonObject("meta"));
      }
      // validate the optional field `urn:pingidentity:schemas:configuration:messages:2.0`
      if (jsonObj.get("urn:pingidentity:schemas:configuration:messages:2.0") != null && !jsonObj.get("urn:pingidentity:schemas:configuration:messages:2.0").isJsonNull()) {
        MetaUrnPingidentitySchemasConfigurationMessages20.validateJsonObject(jsonObj.getAsJsonObject("urn:pingidentity:schemas:configuration:messages:2.0"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DetailedHttpOperationLogPublisherResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DetailedHttpOperationLogPublisherResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DetailedHttpOperationLogPublisherResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DetailedHttpOperationLogPublisherResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<DetailedHttpOperationLogPublisherResponse>() {
           @Override
           public void write(JsonWriter out, DetailedHttpOperationLogPublisherResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public DetailedHttpOperationLogPublisherResponse read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             DetailedHttpOperationLogPublisherResponse instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of DetailedHttpOperationLogPublisherResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of DetailedHttpOperationLogPublisherResponse
  * @throws IOException if the JSON string is invalid with respect to DetailedHttpOperationLogPublisherResponse
  */
  public static DetailedHttpOperationLogPublisherResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DetailedHttpOperationLogPublisherResponse.class);
  }

 /**
  * Convert an instance of DetailedHttpOperationLogPublisherResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

