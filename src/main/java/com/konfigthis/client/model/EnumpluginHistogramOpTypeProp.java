/*
 * PingData Config - OpenAPI 3.0
 * This is the PingData Configuration API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Specifies the operation type(s) to use when outputting the response time histogram data. The order of the operations here determines the order of the columns in the output. Use the per-application-ldap-stats setting to further control this.
 */
@JsonAdapter(EnumpluginHistogramOpTypeProp.Adapter.class)public enum EnumpluginHistogramOpTypeProp {
  
  ALL("all"),
  
  ADD("add"),
  
  BIND("bind"),
  
  COMPARE("compare"),
  
  DELETE("delete"),
  
  EXTENDED("extended"),
  
  MODIFY("modify"),
  
  MODIFY_DN("modify-dn"),
  
  SEARCH("search");

  private String value;

  EnumpluginHistogramOpTypeProp(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static EnumpluginHistogramOpTypeProp fromValue(String value) {
    for (EnumpluginHistogramOpTypeProp b : EnumpluginHistogramOpTypeProp.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<EnumpluginHistogramOpTypeProp> {
    @Override
    public void write(final JsonWriter jsonWriter, final EnumpluginHistogramOpTypeProp enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public EnumpluginHistogramOpTypeProp read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return EnumpluginHistogramOpTypeProp.fromValue(value);
    }
  }
}

