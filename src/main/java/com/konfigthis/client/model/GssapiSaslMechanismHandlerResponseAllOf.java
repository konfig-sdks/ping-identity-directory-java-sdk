/*
 * PingData Config - OpenAPI 3.0
 * This is the PingData Configuration API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.EnumgssapiSaslMechanismHandlerSchemaUrn;
import com.konfigthis.client.model.EnumsaslMechanismHandlerAllowedQualityOfProtectionProp;
import com.konfigthis.client.model.EnumsaslMechanismHandlerGssapiRoleProp;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * GssapiSaslMechanismHandlerResponseAllOf
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class GssapiSaslMechanismHandlerResponseAllOf {
  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_SCHEMAS = "schemas";
  @SerializedName(SERIALIZED_NAME_SCHEMAS)
  private List<EnumgssapiSaslMechanismHandlerSchemaUrn> schemas = null;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_REALM = "realm";
  @SerializedName(SERIALIZED_NAME_REALM)
  private String realm;

  public static final String SERIALIZED_NAME_KDC_ADDRESS = "kdcAddress";
  @SerializedName(SERIALIZED_NAME_KDC_ADDRESS)
  private String kdcAddress;

  public static final String SERIALIZED_NAME_KEYTAB = "keytab";
  @SerializedName(SERIALIZED_NAME_KEYTAB)
  private String keytab;

  public static final String SERIALIZED_NAME_ALLOW_NULL_SERVER_FQDN = "allowNullServerFqdn";
  @SerializedName(SERIALIZED_NAME_ALLOW_NULL_SERVER_FQDN)
  private Boolean allowNullServerFqdn;

  public static final String SERIALIZED_NAME_SERVER_FQDN = "serverFqdn";
  @SerializedName(SERIALIZED_NAME_SERVER_FQDN)
  private String serverFqdn;

  public static final String SERIALIZED_NAME_ALLOWED_QUALITY_OF_PROTECTION = "allowedQualityOfProtection";
  @SerializedName(SERIALIZED_NAME_ALLOWED_QUALITY_OF_PROTECTION)
  private List<EnumsaslMechanismHandlerAllowedQualityOfProtectionProp> allowedQualityOfProtection = null;

  public static final String SERIALIZED_NAME_IDENTITY_MAPPER = "identityMapper";
  @SerializedName(SERIALIZED_NAME_IDENTITY_MAPPER)
  private String identityMapper;

  public static final String SERIALIZED_NAME_ALTERNATE_AUTHORIZATION_IDENTITY_MAPPER = "alternateAuthorizationIdentityMapper";
  @SerializedName(SERIALIZED_NAME_ALTERNATE_AUTHORIZATION_IDENTITY_MAPPER)
  private String alternateAuthorizationIdentityMapper;

  public static final String SERIALIZED_NAME_KERBEROS_SERVICE_PRINCIPAL = "kerberosServicePrincipal";
  @SerializedName(SERIALIZED_NAME_KERBEROS_SERVICE_PRINCIPAL)
  private String kerberosServicePrincipal;

  public static final String SERIALIZED_NAME_GSSAPI_ROLE = "gssapiRole";
  @SerializedName(SERIALIZED_NAME_GSSAPI_ROLE)
  private EnumsaslMechanismHandlerGssapiRoleProp gssapiRole;

  public static final String SERIALIZED_NAME_JAAS_CONFIG_FILE = "jaasConfigFile";
  @SerializedName(SERIALIZED_NAME_JAAS_CONFIG_FILE)
  private String jaasConfigFile;

  public static final String SERIALIZED_NAME_ENABLE_DEBUG = "enableDebug";
  @SerializedName(SERIALIZED_NAME_ENABLE_DEBUG)
  private Boolean enableDebug;

  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled;

  public GssapiSaslMechanismHandlerResponseAllOf() {
  }

  public GssapiSaslMechanismHandlerResponseAllOf description(String description) {
    
    
    
    
    this.description = description;
    return this;
  }

   /**
   * A description for this SASL Mechanism Handler
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A description for this SASL Mechanism Handler")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    
    
    
    this.description = description;
  }


  public GssapiSaslMechanismHandlerResponseAllOf schemas(List<EnumgssapiSaslMechanismHandlerSchemaUrn> schemas) {
    
    
    
    
    this.schemas = schemas;
    return this;
  }

  public GssapiSaslMechanismHandlerResponseAllOf addSchemasItem(EnumgssapiSaslMechanismHandlerSchemaUrn schemasItem) {
    if (this.schemas == null) {
      this.schemas = new ArrayList<>();
    }
    this.schemas.add(schemasItem);
    return this;
  }

   /**
   * Get schemas
   * @return schemas
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<EnumgssapiSaslMechanismHandlerSchemaUrn> getSchemas() {
    return schemas;
  }


  public void setSchemas(List<EnumgssapiSaslMechanismHandlerSchemaUrn> schemas) {
    
    
    
    this.schemas = schemas;
  }


  public GssapiSaslMechanismHandlerResponseAllOf id(String id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * Name of the SASL Mechanism Handler
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name of the SASL Mechanism Handler")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    
    
    
    this.id = id;
  }


  public GssapiSaslMechanismHandlerResponseAllOf realm(String realm) {
    
    
    
    
    this.realm = realm;
    return this;
  }

   /**
   * Specifies the realm to be used for GSSAPI authentication.
   * @return realm
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the realm to be used for GSSAPI authentication.")

  public String getRealm() {
    return realm;
  }


  public void setRealm(String realm) {
    
    
    
    this.realm = realm;
  }


  public GssapiSaslMechanismHandlerResponseAllOf kdcAddress(String kdcAddress) {
    
    
    
    
    this.kdcAddress = kdcAddress;
    return this;
  }

   /**
   * Specifies the address of the KDC that is to be used for Kerberos processing.
   * @return kdcAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the address of the KDC that is to be used for Kerberos processing.")

  public String getKdcAddress() {
    return kdcAddress;
  }


  public void setKdcAddress(String kdcAddress) {
    
    
    
    this.kdcAddress = kdcAddress;
  }


  public GssapiSaslMechanismHandlerResponseAllOf keytab(String keytab) {
    
    
    
    
    this.keytab = keytab;
    return this;
  }

   /**
   * Specifies the keytab file that should be used for Kerberos processing.
   * @return keytab
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the keytab file that should be used for Kerberos processing.")

  public String getKeytab() {
    return keytab;
  }


  public void setKeytab(String keytab) {
    
    
    
    this.keytab = keytab;
  }


  public GssapiSaslMechanismHandlerResponseAllOf allowNullServerFqdn(Boolean allowNullServerFqdn) {
    
    
    
    
    this.allowNullServerFqdn = allowNullServerFqdn;
    return this;
  }

   /**
   * Specifies whether or not to allow a null value for the server-fqdn.
   * @return allowNullServerFqdn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies whether or not to allow a null value for the server-fqdn.")

  public Boolean getAllowNullServerFqdn() {
    return allowNullServerFqdn;
  }


  public void setAllowNullServerFqdn(Boolean allowNullServerFqdn) {
    
    
    
    this.allowNullServerFqdn = allowNullServerFqdn;
  }


  public GssapiSaslMechanismHandlerResponseAllOf serverFqdn(String serverFqdn) {
    
    
    
    
    this.serverFqdn = serverFqdn;
    return this;
  }

   /**
   * Specifies the DNS-resolvable fully-qualified domain name for the system.
   * @return serverFqdn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the DNS-resolvable fully-qualified domain name for the system.")

  public String getServerFqdn() {
    return serverFqdn;
  }


  public void setServerFqdn(String serverFqdn) {
    
    
    
    this.serverFqdn = serverFqdn;
  }


  public GssapiSaslMechanismHandlerResponseAllOf allowedQualityOfProtection(List<EnumsaslMechanismHandlerAllowedQualityOfProtectionProp> allowedQualityOfProtection) {
    
    
    
    
    this.allowedQualityOfProtection = allowedQualityOfProtection;
    return this;
  }

  public GssapiSaslMechanismHandlerResponseAllOf addAllowedQualityOfProtectionItem(EnumsaslMechanismHandlerAllowedQualityOfProtectionProp allowedQualityOfProtectionItem) {
    if (this.allowedQualityOfProtection == null) {
      this.allowedQualityOfProtection = new ArrayList<>();
    }
    this.allowedQualityOfProtection.add(allowedQualityOfProtectionItem);
    return this;
  }

   /**
   * Get allowedQualityOfProtection
   * @return allowedQualityOfProtection
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<EnumsaslMechanismHandlerAllowedQualityOfProtectionProp> getAllowedQualityOfProtection() {
    return allowedQualityOfProtection;
  }


  public void setAllowedQualityOfProtection(List<EnumsaslMechanismHandlerAllowedQualityOfProtectionProp> allowedQualityOfProtection) {
    
    
    
    this.allowedQualityOfProtection = allowedQualityOfProtection;
  }


  public GssapiSaslMechanismHandlerResponseAllOf identityMapper(String identityMapper) {
    
    
    
    
    this.identityMapper = identityMapper;
    return this;
  }

   /**
   * Specifies the name of the identity mapper that is to be used with this SASL mechanism handler to match the Kerberos principal included in the SASL bind request to the corresponding user in the directory.
   * @return identityMapper
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the name of the identity mapper that is to be used with this SASL mechanism handler to match the Kerberos principal included in the SASL bind request to the corresponding user in the directory.")

  public String getIdentityMapper() {
    return identityMapper;
  }


  public void setIdentityMapper(String identityMapper) {
    
    
    
    this.identityMapper = identityMapper;
  }


  public GssapiSaslMechanismHandlerResponseAllOf alternateAuthorizationIdentityMapper(String alternateAuthorizationIdentityMapper) {
    
    
    
    
    this.alternateAuthorizationIdentityMapper = alternateAuthorizationIdentityMapper;
    return this;
  }

   /**
   * Specifies the name of the identity mapper that is to be used with this SASL mechanism handler to map the alternate authorization identity (if provided, and if different from the Kerberos principal used as the authentication identity) to the corresponding user in the directory. If no value is specified, then the mapper specified in the identity-mapper configuration property will be used.
   * @return alternateAuthorizationIdentityMapper
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the name of the identity mapper that is to be used with this SASL mechanism handler to map the alternate authorization identity (if provided, and if different from the Kerberos principal used as the authentication identity) to the corresponding user in the directory. If no value is specified, then the mapper specified in the identity-mapper configuration property will be used.")

  public String getAlternateAuthorizationIdentityMapper() {
    return alternateAuthorizationIdentityMapper;
  }


  public void setAlternateAuthorizationIdentityMapper(String alternateAuthorizationIdentityMapper) {
    
    
    
    this.alternateAuthorizationIdentityMapper = alternateAuthorizationIdentityMapper;
  }


  public GssapiSaslMechanismHandlerResponseAllOf kerberosServicePrincipal(String kerberosServicePrincipal) {
    
    
    
    
    this.kerberosServicePrincipal = kerberosServicePrincipal;
    return this;
  }

   /**
   * Specifies the Kerberos service principal that the Directory Server will use to identify itself to the KDC.
   * @return kerberosServicePrincipal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the Kerberos service principal that the Directory Server will use to identify itself to the KDC.")

  public String getKerberosServicePrincipal() {
    return kerberosServicePrincipal;
  }


  public void setKerberosServicePrincipal(String kerberosServicePrincipal) {
    
    
    
    this.kerberosServicePrincipal = kerberosServicePrincipal;
  }


  public GssapiSaslMechanismHandlerResponseAllOf gssapiRole(EnumsaslMechanismHandlerGssapiRoleProp gssapiRole) {
    
    
    
    
    this.gssapiRole = gssapiRole;
    return this;
  }

   /**
   * Get gssapiRole
   * @return gssapiRole
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EnumsaslMechanismHandlerGssapiRoleProp getGssapiRole() {
    return gssapiRole;
  }


  public void setGssapiRole(EnumsaslMechanismHandlerGssapiRoleProp gssapiRole) {
    
    
    
    this.gssapiRole = gssapiRole;
  }


  public GssapiSaslMechanismHandlerResponseAllOf jaasConfigFile(String jaasConfigFile) {
    
    
    
    
    this.jaasConfigFile = jaasConfigFile;
    return this;
  }

   /**
   * Specifies the path to a JAAS (Java Authentication and Authorization Service) configuration file that provides the information that the JVM should use for Kerberos processing.
   * @return jaasConfigFile
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the path to a JAAS (Java Authentication and Authorization Service) configuration file that provides the information that the JVM should use for Kerberos processing.")

  public String getJaasConfigFile() {
    return jaasConfigFile;
  }


  public void setJaasConfigFile(String jaasConfigFile) {
    
    
    
    this.jaasConfigFile = jaasConfigFile;
  }


  public GssapiSaslMechanismHandlerResponseAllOf enableDebug(Boolean enableDebug) {
    
    
    
    
    this.enableDebug = enableDebug;
    return this;
  }

   /**
   * Indicates whether to enable debugging for the Java GSSAPI provider. Debug information will be written to standard output, which should be captured in the server.out log file.
   * @return enableDebug
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether to enable debugging for the Java GSSAPI provider. Debug information will be written to standard output, which should be captured in the server.out log file.")

  public Boolean getEnableDebug() {
    return enableDebug;
  }


  public void setEnableDebug(Boolean enableDebug) {
    
    
    
    this.enableDebug = enableDebug;
  }


  public GssapiSaslMechanismHandlerResponseAllOf enabled(Boolean enabled) {
    
    
    
    
    this.enabled = enabled;
    return this;
  }

   /**
   * Indicates whether the SASL mechanism handler is enabled for use.
   * @return enabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether the SASL mechanism handler is enabled for use.")

  public Boolean getEnabled() {
    return enabled;
  }


  public void setEnabled(Boolean enabled) {
    
    
    
    this.enabled = enabled;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the GssapiSaslMechanismHandlerResponseAllOf instance itself
   */
  public GssapiSaslMechanismHandlerResponseAllOf putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GssapiSaslMechanismHandlerResponseAllOf gssapiSaslMechanismHandlerResponseAllOf = (GssapiSaslMechanismHandlerResponseAllOf) o;
    return Objects.equals(this.description, gssapiSaslMechanismHandlerResponseAllOf.description) &&
        Objects.equals(this.schemas, gssapiSaslMechanismHandlerResponseAllOf.schemas) &&
        Objects.equals(this.id, gssapiSaslMechanismHandlerResponseAllOf.id) &&
        Objects.equals(this.realm, gssapiSaslMechanismHandlerResponseAllOf.realm) &&
        Objects.equals(this.kdcAddress, gssapiSaslMechanismHandlerResponseAllOf.kdcAddress) &&
        Objects.equals(this.keytab, gssapiSaslMechanismHandlerResponseAllOf.keytab) &&
        Objects.equals(this.allowNullServerFqdn, gssapiSaslMechanismHandlerResponseAllOf.allowNullServerFqdn) &&
        Objects.equals(this.serverFqdn, gssapiSaslMechanismHandlerResponseAllOf.serverFqdn) &&
        Objects.equals(this.allowedQualityOfProtection, gssapiSaslMechanismHandlerResponseAllOf.allowedQualityOfProtection) &&
        Objects.equals(this.identityMapper, gssapiSaslMechanismHandlerResponseAllOf.identityMapper) &&
        Objects.equals(this.alternateAuthorizationIdentityMapper, gssapiSaslMechanismHandlerResponseAllOf.alternateAuthorizationIdentityMapper) &&
        Objects.equals(this.kerberosServicePrincipal, gssapiSaslMechanismHandlerResponseAllOf.kerberosServicePrincipal) &&
        Objects.equals(this.gssapiRole, gssapiSaslMechanismHandlerResponseAllOf.gssapiRole) &&
        Objects.equals(this.jaasConfigFile, gssapiSaslMechanismHandlerResponseAllOf.jaasConfigFile) &&
        Objects.equals(this.enableDebug, gssapiSaslMechanismHandlerResponseAllOf.enableDebug) &&
        Objects.equals(this.enabled, gssapiSaslMechanismHandlerResponseAllOf.enabled)&&
        Objects.equals(this.additionalProperties, gssapiSaslMechanismHandlerResponseAllOf.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, schemas, id, realm, kdcAddress, keytab, allowNullServerFqdn, serverFqdn, allowedQualityOfProtection, identityMapper, alternateAuthorizationIdentityMapper, kerberosServicePrincipal, gssapiRole, jaasConfigFile, enableDebug, enabled, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GssapiSaslMechanismHandlerResponseAllOf {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    schemas: ").append(toIndentedString(schemas)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    realm: ").append(toIndentedString(realm)).append("\n");
    sb.append("    kdcAddress: ").append(toIndentedString(kdcAddress)).append("\n");
    sb.append("    keytab: ").append(toIndentedString(keytab)).append("\n");
    sb.append("    allowNullServerFqdn: ").append(toIndentedString(allowNullServerFqdn)).append("\n");
    sb.append("    serverFqdn: ").append(toIndentedString(serverFqdn)).append("\n");
    sb.append("    allowedQualityOfProtection: ").append(toIndentedString(allowedQualityOfProtection)).append("\n");
    sb.append("    identityMapper: ").append(toIndentedString(identityMapper)).append("\n");
    sb.append("    alternateAuthorizationIdentityMapper: ").append(toIndentedString(alternateAuthorizationIdentityMapper)).append("\n");
    sb.append("    kerberosServicePrincipal: ").append(toIndentedString(kerberosServicePrincipal)).append("\n");
    sb.append("    gssapiRole: ").append(toIndentedString(gssapiRole)).append("\n");
    sb.append("    jaasConfigFile: ").append(toIndentedString(jaasConfigFile)).append("\n");
    sb.append("    enableDebug: ").append(toIndentedString(enableDebug)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("description");
    openapiFields.add("schemas");
    openapiFields.add("id");
    openapiFields.add("realm");
    openapiFields.add("kdcAddress");
    openapiFields.add("keytab");
    openapiFields.add("allowNullServerFqdn");
    openapiFields.add("serverFqdn");
    openapiFields.add("allowedQualityOfProtection");
    openapiFields.add("identityMapper");
    openapiFields.add("alternateAuthorizationIdentityMapper");
    openapiFields.add("kerberosServicePrincipal");
    openapiFields.add("gssapiRole");
    openapiFields.add("jaasConfigFile");
    openapiFields.add("enableDebug");
    openapiFields.add("enabled");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to GssapiSaslMechanismHandlerResponseAllOf
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!GssapiSaslMechanismHandlerResponseAllOf.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GssapiSaslMechanismHandlerResponseAllOf is not found in the empty JSON string", GssapiSaslMechanismHandlerResponseAllOf.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("schemas") != null && !jsonObj.get("schemas").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `schemas` to be an array in the JSON string but got `%s`", jsonObj.get("schemas").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("realm") != null && !jsonObj.get("realm").isJsonNull()) && !jsonObj.get("realm").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `realm` to be a primitive type in the JSON string but got `%s`", jsonObj.get("realm").toString()));
      }
      if ((jsonObj.get("kdcAddress") != null && !jsonObj.get("kdcAddress").isJsonNull()) && !jsonObj.get("kdcAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kdcAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kdcAddress").toString()));
      }
      if ((jsonObj.get("keytab") != null && !jsonObj.get("keytab").isJsonNull()) && !jsonObj.get("keytab").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `keytab` to be a primitive type in the JSON string but got `%s`", jsonObj.get("keytab").toString()));
      }
      if ((jsonObj.get("serverFqdn") != null && !jsonObj.get("serverFqdn").isJsonNull()) && !jsonObj.get("serverFqdn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serverFqdn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serverFqdn").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("allowedQualityOfProtection") != null && !jsonObj.get("allowedQualityOfProtection").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `allowedQualityOfProtection` to be an array in the JSON string but got `%s`", jsonObj.get("allowedQualityOfProtection").toString()));
      }
      if ((jsonObj.get("identityMapper") != null && !jsonObj.get("identityMapper").isJsonNull()) && !jsonObj.get("identityMapper").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `identityMapper` to be a primitive type in the JSON string but got `%s`", jsonObj.get("identityMapper").toString()));
      }
      if ((jsonObj.get("alternateAuthorizationIdentityMapper") != null && !jsonObj.get("alternateAuthorizationIdentityMapper").isJsonNull()) && !jsonObj.get("alternateAuthorizationIdentityMapper").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `alternateAuthorizationIdentityMapper` to be a primitive type in the JSON string but got `%s`", jsonObj.get("alternateAuthorizationIdentityMapper").toString()));
      }
      if ((jsonObj.get("kerberosServicePrincipal") != null && !jsonObj.get("kerberosServicePrincipal").isJsonNull()) && !jsonObj.get("kerberosServicePrincipal").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kerberosServicePrincipal` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kerberosServicePrincipal").toString()));
      }
      if ((jsonObj.get("jaasConfigFile") != null && !jsonObj.get("jaasConfigFile").isJsonNull()) && !jsonObj.get("jaasConfigFile").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `jaasConfigFile` to be a primitive type in the JSON string but got `%s`", jsonObj.get("jaasConfigFile").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GssapiSaslMechanismHandlerResponseAllOf.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GssapiSaslMechanismHandlerResponseAllOf' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GssapiSaslMechanismHandlerResponseAllOf> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GssapiSaslMechanismHandlerResponseAllOf.class));

       return (TypeAdapter<T>) new TypeAdapter<GssapiSaslMechanismHandlerResponseAllOf>() {
           @Override
           public void write(JsonWriter out, GssapiSaslMechanismHandlerResponseAllOf value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public GssapiSaslMechanismHandlerResponseAllOf read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             GssapiSaslMechanismHandlerResponseAllOf instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of GssapiSaslMechanismHandlerResponseAllOf given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of GssapiSaslMechanismHandlerResponseAllOf
  * @throws IOException if the JSON string is invalid with respect to GssapiSaslMechanismHandlerResponseAllOf
  */
  public static GssapiSaslMechanismHandlerResponseAllOf fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GssapiSaslMechanismHandlerResponseAllOf.class);
  }

 /**
  * Convert an instance of GssapiSaslMechanismHandlerResponseAllOf to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

