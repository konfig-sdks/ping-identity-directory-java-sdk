/*
 * PingData Config - OpenAPI 3.0
 * This is the PingData Configuration API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.EnumlogPublisherLoggingErrorBehaviorProp;
import com.konfigthis.client.model.EnumlogPublisherSyslogFacilityProp;
import com.konfigthis.client.model.EnumlogPublisherSyslogJsonAuditSoftDeleteEntryAuditBehaviorProp;
import com.konfigthis.client.model.EnumlogPublisherSyslogSeverityProp;
import com.konfigthis.client.model.EnumsyslogJsonAuditLogPublisherSchemaUrn;
import com.konfigthis.client.model.MetaMeta;
import com.konfigthis.client.model.MetaUrnPingidentitySchemasConfigurationMessages20;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * SyslogJsonAuditLogPublisherResponse
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class SyslogJsonAuditLogPublisherResponse {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_SCHEMAS = "schemas";
  @SerializedName(SERIALIZED_NAME_SCHEMAS)
  private List<EnumsyslogJsonAuditLogPublisherSchemaUrn> schemas = new ArrayList<>();

  public static final String SERIALIZED_NAME_SYSLOG_EXTERNAL_SERVER = "syslogExternalServer";
  @SerializedName(SERIALIZED_NAME_SYSLOG_EXTERNAL_SERVER)
  private List<String> syslogExternalServer = new ArrayList<>();

  public static final String SERIALIZED_NAME_SYSLOG_FACILITY = "syslogFacility";
  @SerializedName(SERIALIZED_NAME_SYSLOG_FACILITY)
  private EnumlogPublisherSyslogFacilityProp syslogFacility;

  public static final String SERIALIZED_NAME_SYSLOG_SEVERITY = "syslogSeverity";
  @SerializedName(SERIALIZED_NAME_SYSLOG_SEVERITY)
  private EnumlogPublisherSyslogSeverityProp syslogSeverity;

  public static final String SERIALIZED_NAME_SYSLOG_MESSAGE_HOST_NAME = "syslogMessageHostName";
  @SerializedName(SERIALIZED_NAME_SYSLOG_MESSAGE_HOST_NAME)
  private String syslogMessageHostName;

  public static final String SERIALIZED_NAME_SYSLOG_MESSAGE_APPLICATION_NAME = "syslogMessageApplicationName";
  @SerializedName(SERIALIZED_NAME_SYSLOG_MESSAGE_APPLICATION_NAME)
  private String syslogMessageApplicationName;

  public static final String SERIALIZED_NAME_QUEUE_SIZE = "queueSize";
  @SerializedName(SERIALIZED_NAME_QUEUE_SIZE)
  private Integer queueSize;

  public static final String SERIALIZED_NAME_WRITE_MULTI_LINE_MESSAGES = "writeMultiLineMessages";
  @SerializedName(SERIALIZED_NAME_WRITE_MULTI_LINE_MESSAGES)
  private Boolean writeMultiLineMessages;

  public static final String SERIALIZED_NAME_USE_REVERSIBLE_FORM = "useReversibleForm";
  @SerializedName(SERIALIZED_NAME_USE_REVERSIBLE_FORM)
  private Boolean useReversibleForm;

  public static final String SERIALIZED_NAME_SOFT_DELETE_ENTRY_AUDIT_BEHAVIOR = "softDeleteEntryAuditBehavior";
  @SerializedName(SERIALIZED_NAME_SOFT_DELETE_ENTRY_AUDIT_BEHAVIOR)
  private EnumlogPublisherSyslogJsonAuditSoftDeleteEntryAuditBehaviorProp softDeleteEntryAuditBehavior;

  public static final String SERIALIZED_NAME_INCLUDE_OPERATION_PURPOSE_REQUEST_CONTROL = "includeOperationPurposeRequestControl";
  @SerializedName(SERIALIZED_NAME_INCLUDE_OPERATION_PURPOSE_REQUEST_CONTROL)
  private Boolean includeOperationPurposeRequestControl;

  public static final String SERIALIZED_NAME_INCLUDE_INTERMEDIATE_CLIENT_REQUEST_CONTROL = "includeIntermediateClientRequestControl";
  @SerializedName(SERIALIZED_NAME_INCLUDE_INTERMEDIATE_CLIENT_REQUEST_CONTROL)
  private Boolean includeIntermediateClientRequestControl;

  public static final String SERIALIZED_NAME_OBSCURE_ATTRIBUTE = "obscureAttribute";
  @SerializedName(SERIALIZED_NAME_OBSCURE_ATTRIBUTE)
  private List<String> obscureAttribute = null;

  public static final String SERIALIZED_NAME_EXCLUDE_ATTRIBUTE = "excludeAttribute";
  @SerializedName(SERIALIZED_NAME_EXCLUDE_ATTRIBUTE)
  private List<String> excludeAttribute = null;

  public static final String SERIALIZED_NAME_SUPPRESS_INTERNAL_OPERATIONS = "suppressInternalOperations";
  @SerializedName(SERIALIZED_NAME_SUPPRESS_INTERNAL_OPERATIONS)
  private Boolean suppressInternalOperations;

  public static final String SERIALIZED_NAME_INCLUDE_PRODUCT_NAME = "includeProductName";
  @SerializedName(SERIALIZED_NAME_INCLUDE_PRODUCT_NAME)
  private Boolean includeProductName;

  public static final String SERIALIZED_NAME_INCLUDE_INSTANCE_NAME = "includeInstanceName";
  @SerializedName(SERIALIZED_NAME_INCLUDE_INSTANCE_NAME)
  private Boolean includeInstanceName;

  public static final String SERIALIZED_NAME_INCLUDE_STARTUP_I_D = "includeStartupID";
  @SerializedName(SERIALIZED_NAME_INCLUDE_STARTUP_I_D)
  private Boolean includeStartupID;

  public static final String SERIALIZED_NAME_INCLUDE_THREAD_I_D = "includeThreadID";
  @SerializedName(SERIALIZED_NAME_INCLUDE_THREAD_I_D)
  private Boolean includeThreadID;

  public static final String SERIALIZED_NAME_INCLUDE_REQUESTER_D_N = "includeRequesterDN";
  @SerializedName(SERIALIZED_NAME_INCLUDE_REQUESTER_D_N)
  private Boolean includeRequesterDN;

  public static final String SERIALIZED_NAME_INCLUDE_REQUESTER_I_P_ADDRESS = "includeRequesterIPAddress";
  @SerializedName(SERIALIZED_NAME_INCLUDE_REQUESTER_I_P_ADDRESS)
  private Boolean includeRequesterIPAddress;

  public static final String SERIALIZED_NAME_INCLUDE_REQUEST_CONTROLS = "includeRequestControls";
  @SerializedName(SERIALIZED_NAME_INCLUDE_REQUEST_CONTROLS)
  private Boolean includeRequestControls;

  public static final String SERIALIZED_NAME_INCLUDE_RESPONSE_CONTROLS = "includeResponseControls";
  @SerializedName(SERIALIZED_NAME_INCLUDE_RESPONSE_CONTROLS)
  private Boolean includeResponseControls;

  public static final String SERIALIZED_NAME_INCLUDE_REPLICATION_CHANGE_I_D = "includeReplicationChangeID";
  @SerializedName(SERIALIZED_NAME_INCLUDE_REPLICATION_CHANGE_I_D)
  private Boolean includeReplicationChangeID;

  public static final String SERIALIZED_NAME_LOG_SECURITY_NEGOTIATION = "logSecurityNegotiation";
  @SerializedName(SERIALIZED_NAME_LOG_SECURITY_NEGOTIATION)
  private Boolean logSecurityNegotiation;

  public static final String SERIALIZED_NAME_SUPPRESS_REPLICATION_OPERATIONS = "suppressReplicationOperations";
  @SerializedName(SERIALIZED_NAME_SUPPRESS_REPLICATION_OPERATIONS)
  private Boolean suppressReplicationOperations;

  public static final String SERIALIZED_NAME_CONNECTION_CRITERIA = "connectionCriteria";
  @SerializedName(SERIALIZED_NAME_CONNECTION_CRITERIA)
  private String connectionCriteria;

  public static final String SERIALIZED_NAME_REQUEST_CRITERIA = "requestCriteria";
  @SerializedName(SERIALIZED_NAME_REQUEST_CRITERIA)
  private String requestCriteria;

  public static final String SERIALIZED_NAME_RESULT_CRITERIA = "resultCriteria";
  @SerializedName(SERIALIZED_NAME_RESULT_CRITERIA)
  private String resultCriteria;

  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled;

  public static final String SERIALIZED_NAME_LOGGING_ERROR_BEHAVIOR = "loggingErrorBehavior";
  @SerializedName(SERIALIZED_NAME_LOGGING_ERROR_BEHAVIOR)
  private EnumlogPublisherLoggingErrorBehaviorProp loggingErrorBehavior;

  public static final String SERIALIZED_NAME_META = "meta";
  @SerializedName(SERIALIZED_NAME_META)
  private MetaMeta meta;

  public static final String SERIALIZED_NAME_URN_COLON_PINGIDENTITY_COLON_SCHEMAS_COLON_CONFIGURATION_COLON_MESSAGES_COLON20 = "urn:pingidentity:schemas:configuration:messages:2.0";
  @SerializedName(SERIALIZED_NAME_URN_COLON_PINGIDENTITY_COLON_SCHEMAS_COLON_CONFIGURATION_COLON_MESSAGES_COLON20)
  private MetaUrnPingidentitySchemasConfigurationMessages20 urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20;

  public SyslogJsonAuditLogPublisherResponse() {
  }

  public SyslogJsonAuditLogPublisherResponse id(String id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * Name of the Log Publisher
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Name of the Log Publisher")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    
    
    
    this.id = id;
  }


  public SyslogJsonAuditLogPublisherResponse description(String description) {
    
    
    
    
    this.description = description;
    return this;
  }

   /**
   * A description for this Log Publisher
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A description for this Log Publisher")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    
    
    
    this.description = description;
  }


  public SyslogJsonAuditLogPublisherResponse schemas(List<EnumsyslogJsonAuditLogPublisherSchemaUrn> schemas) {
    
    
    
    
    this.schemas = schemas;
    return this;
  }

  public SyslogJsonAuditLogPublisherResponse addSchemasItem(EnumsyslogJsonAuditLogPublisherSchemaUrn schemasItem) {
    this.schemas.add(schemasItem);
    return this;
  }

   /**
   * Get schemas
   * @return schemas
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<EnumsyslogJsonAuditLogPublisherSchemaUrn> getSchemas() {
    return schemas;
  }


  public void setSchemas(List<EnumsyslogJsonAuditLogPublisherSchemaUrn> schemas) {
    
    
    
    this.schemas = schemas;
  }


  public SyslogJsonAuditLogPublisherResponse syslogExternalServer(List<String> syslogExternalServer) {
    
    
    
    
    this.syslogExternalServer = syslogExternalServer;
    return this;
  }

  public SyslogJsonAuditLogPublisherResponse addSyslogExternalServerItem(String syslogExternalServerItem) {
    this.syslogExternalServer.add(syslogExternalServerItem);
    return this;
  }

   /**
   * The syslog server to which messages should be sent.
   * @return syslogExternalServer
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The syslog server to which messages should be sent.")

  public List<String> getSyslogExternalServer() {
    return syslogExternalServer;
  }


  public void setSyslogExternalServer(List<String> syslogExternalServer) {
    
    
    
    this.syslogExternalServer = syslogExternalServer;
  }


  public SyslogJsonAuditLogPublisherResponse syslogFacility(EnumlogPublisherSyslogFacilityProp syslogFacility) {
    
    
    
    
    this.syslogFacility = syslogFacility;
    return this;
  }

   /**
   * Get syslogFacility
   * @return syslogFacility
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public EnumlogPublisherSyslogFacilityProp getSyslogFacility() {
    return syslogFacility;
  }


  public void setSyslogFacility(EnumlogPublisherSyslogFacilityProp syslogFacility) {
    
    
    
    this.syslogFacility = syslogFacility;
  }


  public SyslogJsonAuditLogPublisherResponse syslogSeverity(EnumlogPublisherSyslogSeverityProp syslogSeverity) {
    
    
    
    
    this.syslogSeverity = syslogSeverity;
    return this;
  }

   /**
   * Get syslogSeverity
   * @return syslogSeverity
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public EnumlogPublisherSyslogSeverityProp getSyslogSeverity() {
    return syslogSeverity;
  }


  public void setSyslogSeverity(EnumlogPublisherSyslogSeverityProp syslogSeverity) {
    
    
    
    this.syslogSeverity = syslogSeverity;
  }


  public SyslogJsonAuditLogPublisherResponse syslogMessageHostName(String syslogMessageHostName) {
    
    
    
    
    this.syslogMessageHostName = syslogMessageHostName;
    return this;
  }

   /**
   * The local host name that will be included in syslog messages that are logged by this Syslog JSON Audit Log Publisher.
   * @return syslogMessageHostName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The local host name that will be included in syslog messages that are logged by this Syslog JSON Audit Log Publisher.")

  public String getSyslogMessageHostName() {
    return syslogMessageHostName;
  }


  public void setSyslogMessageHostName(String syslogMessageHostName) {
    
    
    
    this.syslogMessageHostName = syslogMessageHostName;
  }


  public SyslogJsonAuditLogPublisherResponse syslogMessageApplicationName(String syslogMessageApplicationName) {
    
    
    
    
    this.syslogMessageApplicationName = syslogMessageApplicationName;
    return this;
  }

   /**
   * The application name that will be included in syslog messages that are logged by this Syslog JSON Audit Log Publisher.
   * @return syslogMessageApplicationName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The application name that will be included in syslog messages that are logged by this Syslog JSON Audit Log Publisher.")

  public String getSyslogMessageApplicationName() {
    return syslogMessageApplicationName;
  }


  public void setSyslogMessageApplicationName(String syslogMessageApplicationName) {
    
    
    
    this.syslogMessageApplicationName = syslogMessageApplicationName;
  }


  public SyslogJsonAuditLogPublisherResponse queueSize(Integer queueSize) {
    
    
    
    
    this.queueSize = queueSize;
    return this;
  }

   /**
   * The maximum number of log records that can be stored in the asynchronous queue.
   * @return queueSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The maximum number of log records that can be stored in the asynchronous queue.")

  public Integer getQueueSize() {
    return queueSize;
  }


  public void setQueueSize(Integer queueSize) {
    
    
    
    this.queueSize = queueSize;
  }


  public SyslogJsonAuditLogPublisherResponse writeMultiLineMessages(Boolean writeMultiLineMessages) {
    
    
    
    
    this.writeMultiLineMessages = writeMultiLineMessages;
    return this;
  }

   /**
   * Indicates whether the JSON objects should use a multi-line representation (with each object field and array value on its own line) that may be easier for administrators to read, but each message will be larger (because of additional spaces and end-of-line markers), and it may be more difficult to consume and parse through some text-oriented tools.
   * @return writeMultiLineMessages
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether the JSON objects should use a multi-line representation (with each object field and array value on its own line) that may be easier for administrators to read, but each message will be larger (because of additional spaces and end-of-line markers), and it may be more difficult to consume and parse through some text-oriented tools.")

  public Boolean getWriteMultiLineMessages() {
    return writeMultiLineMessages;
  }


  public void setWriteMultiLineMessages(Boolean writeMultiLineMessages) {
    
    
    
    this.writeMultiLineMessages = writeMultiLineMessages;
  }


  public SyslogJsonAuditLogPublisherResponse useReversibleForm(Boolean useReversibleForm) {
    
    
    
    
    this.useReversibleForm = useReversibleForm;
    return this;
  }

   /**
   * Indicates whether the audit log should be written in reversible form so that it is possible to revert the changes if desired.
   * @return useReversibleForm
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether the audit log should be written in reversible form so that it is possible to revert the changes if desired.")

  public Boolean getUseReversibleForm() {
    return useReversibleForm;
  }


  public void setUseReversibleForm(Boolean useReversibleForm) {
    
    
    
    this.useReversibleForm = useReversibleForm;
  }


  public SyslogJsonAuditLogPublisherResponse softDeleteEntryAuditBehavior(EnumlogPublisherSyslogJsonAuditSoftDeleteEntryAuditBehaviorProp softDeleteEntryAuditBehavior) {
    
    
    
    
    this.softDeleteEntryAuditBehavior = softDeleteEntryAuditBehavior;
    return this;
  }

   /**
   * Get softDeleteEntryAuditBehavior
   * @return softDeleteEntryAuditBehavior
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EnumlogPublisherSyslogJsonAuditSoftDeleteEntryAuditBehaviorProp getSoftDeleteEntryAuditBehavior() {
    return softDeleteEntryAuditBehavior;
  }


  public void setSoftDeleteEntryAuditBehavior(EnumlogPublisherSyslogJsonAuditSoftDeleteEntryAuditBehaviorProp softDeleteEntryAuditBehavior) {
    
    
    
    this.softDeleteEntryAuditBehavior = softDeleteEntryAuditBehavior;
  }


  public SyslogJsonAuditLogPublisherResponse includeOperationPurposeRequestControl(Boolean includeOperationPurposeRequestControl) {
    
    
    
    
    this.includeOperationPurposeRequestControl = includeOperationPurposeRequestControl;
    return this;
  }

   /**
   * Indicates whether to include information about any operation purpose request control that may have been included in the request.
   * @return includeOperationPurposeRequestControl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether to include information about any operation purpose request control that may have been included in the request.")

  public Boolean getIncludeOperationPurposeRequestControl() {
    return includeOperationPurposeRequestControl;
  }


  public void setIncludeOperationPurposeRequestControl(Boolean includeOperationPurposeRequestControl) {
    
    
    
    this.includeOperationPurposeRequestControl = includeOperationPurposeRequestControl;
  }


  public SyslogJsonAuditLogPublisherResponse includeIntermediateClientRequestControl(Boolean includeIntermediateClientRequestControl) {
    
    
    
    
    this.includeIntermediateClientRequestControl = includeIntermediateClientRequestControl;
    return this;
  }

   /**
   * Indicates whether to include information about any intermediate client request control that may have been included in the request.
   * @return includeIntermediateClientRequestControl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether to include information about any intermediate client request control that may have been included in the request.")

  public Boolean getIncludeIntermediateClientRequestControl() {
    return includeIntermediateClientRequestControl;
  }


  public void setIncludeIntermediateClientRequestControl(Boolean includeIntermediateClientRequestControl) {
    
    
    
    this.includeIntermediateClientRequestControl = includeIntermediateClientRequestControl;
  }


  public SyslogJsonAuditLogPublisherResponse obscureAttribute(List<String> obscureAttribute) {
    
    
    
    
    this.obscureAttribute = obscureAttribute;
    return this;
  }

  public SyslogJsonAuditLogPublisherResponse addObscureAttributeItem(String obscureAttributeItem) {
    if (this.obscureAttribute == null) {
      this.obscureAttribute = new ArrayList<>();
    }
    this.obscureAttribute.add(obscureAttributeItem);
    return this;
  }

   /**
   * Specifies the names of any attribute types that should have their values obscured in the audit log because they may be considered sensitive.
   * @return obscureAttribute
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the names of any attribute types that should have their values obscured in the audit log because they may be considered sensitive.")

  public List<String> getObscureAttribute() {
    return obscureAttribute;
  }


  public void setObscureAttribute(List<String> obscureAttribute) {
    
    
    
    this.obscureAttribute = obscureAttribute;
  }


  public SyslogJsonAuditLogPublisherResponse excludeAttribute(List<String> excludeAttribute) {
    
    
    
    
    this.excludeAttribute = excludeAttribute;
    return this;
  }

  public SyslogJsonAuditLogPublisherResponse addExcludeAttributeItem(String excludeAttributeItem) {
    if (this.excludeAttribute == null) {
      this.excludeAttribute = new ArrayList<>();
    }
    this.excludeAttribute.add(excludeAttributeItem);
    return this;
  }

   /**
   * Specifies the names of any attribute types that should be excluded from the audit log.
   * @return excludeAttribute
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the names of any attribute types that should be excluded from the audit log.")

  public List<String> getExcludeAttribute() {
    return excludeAttribute;
  }


  public void setExcludeAttribute(List<String> excludeAttribute) {
    
    
    
    this.excludeAttribute = excludeAttribute;
  }


  public SyslogJsonAuditLogPublisherResponse suppressInternalOperations(Boolean suppressInternalOperations) {
    
    
    
    
    this.suppressInternalOperations = suppressInternalOperations;
    return this;
  }

   /**
   * Indicates whether internal operations (for example, operations that are initiated by plugins) should be logged along with the operations that are requested by users.
   * @return suppressInternalOperations
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether internal operations (for example, operations that are initiated by plugins) should be logged along with the operations that are requested by users.")

  public Boolean getSuppressInternalOperations() {
    return suppressInternalOperations;
  }


  public void setSuppressInternalOperations(Boolean suppressInternalOperations) {
    
    
    
    this.suppressInternalOperations = suppressInternalOperations;
  }


  public SyslogJsonAuditLogPublisherResponse includeProductName(Boolean includeProductName) {
    
    
    
    
    this.includeProductName = includeProductName;
    return this;
  }

   /**
   * Indicates whether log messages should include the product name for the Directory Server.
   * @return includeProductName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether log messages should include the product name for the Directory Server.")

  public Boolean getIncludeProductName() {
    return includeProductName;
  }


  public void setIncludeProductName(Boolean includeProductName) {
    
    
    
    this.includeProductName = includeProductName;
  }


  public SyslogJsonAuditLogPublisherResponse includeInstanceName(Boolean includeInstanceName) {
    
    
    
    
    this.includeInstanceName = includeInstanceName;
    return this;
  }

   /**
   * Indicates whether log messages should include the instance name for the Directory Server.
   * @return includeInstanceName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether log messages should include the instance name for the Directory Server.")

  public Boolean getIncludeInstanceName() {
    return includeInstanceName;
  }


  public void setIncludeInstanceName(Boolean includeInstanceName) {
    
    
    
    this.includeInstanceName = includeInstanceName;
  }


  public SyslogJsonAuditLogPublisherResponse includeStartupID(Boolean includeStartupID) {
    
    
    
    
    this.includeStartupID = includeStartupID;
    return this;
  }

   /**
   * Indicates whether log messages should include the startup ID for the Directory Server, which is a value assigned to the server instance at startup and may be used to identify when the server has been restarted.
   * @return includeStartupID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether log messages should include the startup ID for the Directory Server, which is a value assigned to the server instance at startup and may be used to identify when the server has been restarted.")

  public Boolean getIncludeStartupID() {
    return includeStartupID;
  }


  public void setIncludeStartupID(Boolean includeStartupID) {
    
    
    
    this.includeStartupID = includeStartupID;
  }


  public SyslogJsonAuditLogPublisherResponse includeThreadID(Boolean includeThreadID) {
    
    
    
    
    this.includeThreadID = includeThreadID;
    return this;
  }

   /**
   * Indicates whether log messages should include the thread ID for the Directory Server in each log message. This ID can be used to correlate log messages from the same thread within a single log as well as generated by the same thread across different types of log files. More information about the thread with a specific ID can be obtained using the cn&#x3D;JVM Stack Trace,cn&#x3D;monitor entry.
   * @return includeThreadID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether log messages should include the thread ID for the Directory Server in each log message. This ID can be used to correlate log messages from the same thread within a single log as well as generated by the same thread across different types of log files. More information about the thread with a specific ID can be obtained using the cn=JVM Stack Trace,cn=monitor entry.")

  public Boolean getIncludeThreadID() {
    return includeThreadID;
  }


  public void setIncludeThreadID(Boolean includeThreadID) {
    
    
    
    this.includeThreadID = includeThreadID;
  }


  public SyslogJsonAuditLogPublisherResponse includeRequesterDN(Boolean includeRequesterDN) {
    
    
    
    
    this.includeRequesterDN = includeRequesterDN;
    return this;
  }

   /**
   * Indicates whether log messages for operation requests should include the DN of the authenticated user for the client connection on which the operation was requested.
   * @return includeRequesterDN
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether log messages for operation requests should include the DN of the authenticated user for the client connection on which the operation was requested.")

  public Boolean getIncludeRequesterDN() {
    return includeRequesterDN;
  }


  public void setIncludeRequesterDN(Boolean includeRequesterDN) {
    
    
    
    this.includeRequesterDN = includeRequesterDN;
  }


  public SyslogJsonAuditLogPublisherResponse includeRequesterIPAddress(Boolean includeRequesterIPAddress) {
    
    
    
    
    this.includeRequesterIPAddress = includeRequesterIPAddress;
    return this;
  }

   /**
   * Indicates whether log messages for operation requests should include the IP address of the client that requested the operation.
   * @return includeRequesterIPAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether log messages for operation requests should include the IP address of the client that requested the operation.")

  public Boolean getIncludeRequesterIPAddress() {
    return includeRequesterIPAddress;
  }


  public void setIncludeRequesterIPAddress(Boolean includeRequesterIPAddress) {
    
    
    
    this.includeRequesterIPAddress = includeRequesterIPAddress;
  }


  public SyslogJsonAuditLogPublisherResponse includeRequestControls(Boolean includeRequestControls) {
    
    
    
    
    this.includeRequestControls = includeRequestControls;
    return this;
  }

   /**
   * Indicates whether log messages for operation requests should include a list of the OIDs of any controls included in the request.
   * @return includeRequestControls
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether log messages for operation requests should include a list of the OIDs of any controls included in the request.")

  public Boolean getIncludeRequestControls() {
    return includeRequestControls;
  }


  public void setIncludeRequestControls(Boolean includeRequestControls) {
    
    
    
    this.includeRequestControls = includeRequestControls;
  }


  public SyslogJsonAuditLogPublisherResponse includeResponseControls(Boolean includeResponseControls) {
    
    
    
    
    this.includeResponseControls = includeResponseControls;
    return this;
  }

   /**
   * Indicates whether log messages for operation results should include a list of the OIDs of any controls included in the result.
   * @return includeResponseControls
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether log messages for operation results should include a list of the OIDs of any controls included in the result.")

  public Boolean getIncludeResponseControls() {
    return includeResponseControls;
  }


  public void setIncludeResponseControls(Boolean includeResponseControls) {
    
    
    
    this.includeResponseControls = includeResponseControls;
  }


  public SyslogJsonAuditLogPublisherResponse includeReplicationChangeID(Boolean includeReplicationChangeID) {
    
    
    
    
    this.includeReplicationChangeID = includeReplicationChangeID;
    return this;
  }

   /**
   * Indicates whether to log information about the replication change ID.
   * @return includeReplicationChangeID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether to log information about the replication change ID.")

  public Boolean getIncludeReplicationChangeID() {
    return includeReplicationChangeID;
  }


  public void setIncludeReplicationChangeID(Boolean includeReplicationChangeID) {
    
    
    
    this.includeReplicationChangeID = includeReplicationChangeID;
  }


  public SyslogJsonAuditLogPublisherResponse logSecurityNegotiation(Boolean logSecurityNegotiation) {
    
    
    
    
    this.logSecurityNegotiation = logSecurityNegotiation;
    return this;
  }

   /**
   * Indicates whether to log information about the result of any security negotiation (e.g., SSL handshake) processing that has been performed.
   * @return logSecurityNegotiation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether to log information about the result of any security negotiation (e.g., SSL handshake) processing that has been performed.")

  public Boolean getLogSecurityNegotiation() {
    return logSecurityNegotiation;
  }


  public void setLogSecurityNegotiation(Boolean logSecurityNegotiation) {
    
    
    
    this.logSecurityNegotiation = logSecurityNegotiation;
  }


  public SyslogJsonAuditLogPublisherResponse suppressReplicationOperations(Boolean suppressReplicationOperations) {
    
    
    
    
    this.suppressReplicationOperations = suppressReplicationOperations;
    return this;
  }

   /**
   * Indicates whether access messages that are generated by replication operations should be suppressed.
   * @return suppressReplicationOperations
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether access messages that are generated by replication operations should be suppressed.")

  public Boolean getSuppressReplicationOperations() {
    return suppressReplicationOperations;
  }


  public void setSuppressReplicationOperations(Boolean suppressReplicationOperations) {
    
    
    
    this.suppressReplicationOperations = suppressReplicationOperations;
  }


  public SyslogJsonAuditLogPublisherResponse connectionCriteria(String connectionCriteria) {
    
    
    
    
    this.connectionCriteria = connectionCriteria;
    return this;
  }

   /**
   * Specifies a set of connection criteria that must match the associated client connection in order for a connect, disconnect, request, or result message to be logged.
   * @return connectionCriteria
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies a set of connection criteria that must match the associated client connection in order for a connect, disconnect, request, or result message to be logged.")

  public String getConnectionCriteria() {
    return connectionCriteria;
  }


  public void setConnectionCriteria(String connectionCriteria) {
    
    
    
    this.connectionCriteria = connectionCriteria;
  }


  public SyslogJsonAuditLogPublisherResponse requestCriteria(String requestCriteria) {
    
    
    
    
    this.requestCriteria = requestCriteria;
    return this;
  }

   /**
   * Specifies a set of request criteria that must match the associated operation request in order for a request or result to be logged by this Access Log Publisher.
   * @return requestCriteria
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies a set of request criteria that must match the associated operation request in order for a request or result to be logged by this Access Log Publisher.")

  public String getRequestCriteria() {
    return requestCriteria;
  }


  public void setRequestCriteria(String requestCriteria) {
    
    
    
    this.requestCriteria = requestCriteria;
  }


  public SyslogJsonAuditLogPublisherResponse resultCriteria(String resultCriteria) {
    
    
    
    
    this.resultCriteria = resultCriteria;
    return this;
  }

   /**
   * Specifies a set of result criteria that must match the associated operation result in order for that result to be logged by this Access Log Publisher.
   * @return resultCriteria
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies a set of result criteria that must match the associated operation result in order for that result to be logged by this Access Log Publisher.")

  public String getResultCriteria() {
    return resultCriteria;
  }


  public void setResultCriteria(String resultCriteria) {
    
    
    
    this.resultCriteria = resultCriteria;
  }


  public SyslogJsonAuditLogPublisherResponse enabled(Boolean enabled) {
    
    
    
    
    this.enabled = enabled;
    return this;
  }

   /**
   * Indicates whether the Log Publisher is enabled for use.
   * @return enabled
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Indicates whether the Log Publisher is enabled for use.")

  public Boolean getEnabled() {
    return enabled;
  }


  public void setEnabled(Boolean enabled) {
    
    
    
    this.enabled = enabled;
  }


  public SyslogJsonAuditLogPublisherResponse loggingErrorBehavior(EnumlogPublisherLoggingErrorBehaviorProp loggingErrorBehavior) {
    
    
    
    
    this.loggingErrorBehavior = loggingErrorBehavior;
    return this;
  }

   /**
   * Get loggingErrorBehavior
   * @return loggingErrorBehavior
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EnumlogPublisherLoggingErrorBehaviorProp getLoggingErrorBehavior() {
    return loggingErrorBehavior;
  }


  public void setLoggingErrorBehavior(EnumlogPublisherLoggingErrorBehaviorProp loggingErrorBehavior) {
    
    
    
    this.loggingErrorBehavior = loggingErrorBehavior;
  }


  public SyslogJsonAuditLogPublisherResponse meta(MetaMeta meta) {
    
    
    
    
    this.meta = meta;
    return this;
  }

   /**
   * Get meta
   * @return meta
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public MetaMeta getMeta() {
    return meta;
  }


  public void setMeta(MetaMeta meta) {
    
    
    
    this.meta = meta;
  }


  public SyslogJsonAuditLogPublisherResponse urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20(MetaUrnPingidentitySchemasConfigurationMessages20 urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20) {
    
    
    
    
    this.urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20 = urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20;
    return this;
  }

   /**
   * Get urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20
   * @return urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public MetaUrnPingidentitySchemasConfigurationMessages20 getUrnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20() {
    return urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20;
  }


  public void setUrnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20(MetaUrnPingidentitySchemasConfigurationMessages20 urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20) {
    
    
    
    this.urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20 = urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the SyslogJsonAuditLogPublisherResponse instance itself
   */
  public SyslogJsonAuditLogPublisherResponse putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SyslogJsonAuditLogPublisherResponse syslogJsonAuditLogPublisherResponse = (SyslogJsonAuditLogPublisherResponse) o;
    return Objects.equals(this.id, syslogJsonAuditLogPublisherResponse.id) &&
        Objects.equals(this.description, syslogJsonAuditLogPublisherResponse.description) &&
        Objects.equals(this.schemas, syslogJsonAuditLogPublisherResponse.schemas) &&
        Objects.equals(this.syslogExternalServer, syslogJsonAuditLogPublisherResponse.syslogExternalServer) &&
        Objects.equals(this.syslogFacility, syslogJsonAuditLogPublisherResponse.syslogFacility) &&
        Objects.equals(this.syslogSeverity, syslogJsonAuditLogPublisherResponse.syslogSeverity) &&
        Objects.equals(this.syslogMessageHostName, syslogJsonAuditLogPublisherResponse.syslogMessageHostName) &&
        Objects.equals(this.syslogMessageApplicationName, syslogJsonAuditLogPublisherResponse.syslogMessageApplicationName) &&
        Objects.equals(this.queueSize, syslogJsonAuditLogPublisherResponse.queueSize) &&
        Objects.equals(this.writeMultiLineMessages, syslogJsonAuditLogPublisherResponse.writeMultiLineMessages) &&
        Objects.equals(this.useReversibleForm, syslogJsonAuditLogPublisherResponse.useReversibleForm) &&
        Objects.equals(this.softDeleteEntryAuditBehavior, syslogJsonAuditLogPublisherResponse.softDeleteEntryAuditBehavior) &&
        Objects.equals(this.includeOperationPurposeRequestControl, syslogJsonAuditLogPublisherResponse.includeOperationPurposeRequestControl) &&
        Objects.equals(this.includeIntermediateClientRequestControl, syslogJsonAuditLogPublisherResponse.includeIntermediateClientRequestControl) &&
        Objects.equals(this.obscureAttribute, syslogJsonAuditLogPublisherResponse.obscureAttribute) &&
        Objects.equals(this.excludeAttribute, syslogJsonAuditLogPublisherResponse.excludeAttribute) &&
        Objects.equals(this.suppressInternalOperations, syslogJsonAuditLogPublisherResponse.suppressInternalOperations) &&
        Objects.equals(this.includeProductName, syslogJsonAuditLogPublisherResponse.includeProductName) &&
        Objects.equals(this.includeInstanceName, syslogJsonAuditLogPublisherResponse.includeInstanceName) &&
        Objects.equals(this.includeStartupID, syslogJsonAuditLogPublisherResponse.includeStartupID) &&
        Objects.equals(this.includeThreadID, syslogJsonAuditLogPublisherResponse.includeThreadID) &&
        Objects.equals(this.includeRequesterDN, syslogJsonAuditLogPublisherResponse.includeRequesterDN) &&
        Objects.equals(this.includeRequesterIPAddress, syslogJsonAuditLogPublisherResponse.includeRequesterIPAddress) &&
        Objects.equals(this.includeRequestControls, syslogJsonAuditLogPublisherResponse.includeRequestControls) &&
        Objects.equals(this.includeResponseControls, syslogJsonAuditLogPublisherResponse.includeResponseControls) &&
        Objects.equals(this.includeReplicationChangeID, syslogJsonAuditLogPublisherResponse.includeReplicationChangeID) &&
        Objects.equals(this.logSecurityNegotiation, syslogJsonAuditLogPublisherResponse.logSecurityNegotiation) &&
        Objects.equals(this.suppressReplicationOperations, syslogJsonAuditLogPublisherResponse.suppressReplicationOperations) &&
        Objects.equals(this.connectionCriteria, syslogJsonAuditLogPublisherResponse.connectionCriteria) &&
        Objects.equals(this.requestCriteria, syslogJsonAuditLogPublisherResponse.requestCriteria) &&
        Objects.equals(this.resultCriteria, syslogJsonAuditLogPublisherResponse.resultCriteria) &&
        Objects.equals(this.enabled, syslogJsonAuditLogPublisherResponse.enabled) &&
        Objects.equals(this.loggingErrorBehavior, syslogJsonAuditLogPublisherResponse.loggingErrorBehavior) &&
        Objects.equals(this.meta, syslogJsonAuditLogPublisherResponse.meta) &&
        Objects.equals(this.urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20, syslogJsonAuditLogPublisherResponse.urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20)&&
        Objects.equals(this.additionalProperties, syslogJsonAuditLogPublisherResponse.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, description, schemas, syslogExternalServer, syslogFacility, syslogSeverity, syslogMessageHostName, syslogMessageApplicationName, queueSize, writeMultiLineMessages, useReversibleForm, softDeleteEntryAuditBehavior, includeOperationPurposeRequestControl, includeIntermediateClientRequestControl, obscureAttribute, excludeAttribute, suppressInternalOperations, includeProductName, includeInstanceName, includeStartupID, includeThreadID, includeRequesterDN, includeRequesterIPAddress, includeRequestControls, includeResponseControls, includeReplicationChangeID, logSecurityNegotiation, suppressReplicationOperations, connectionCriteria, requestCriteria, resultCriteria, enabled, loggingErrorBehavior, meta, urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SyslogJsonAuditLogPublisherResponse {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    schemas: ").append(toIndentedString(schemas)).append("\n");
    sb.append("    syslogExternalServer: ").append(toIndentedString(syslogExternalServer)).append("\n");
    sb.append("    syslogFacility: ").append(toIndentedString(syslogFacility)).append("\n");
    sb.append("    syslogSeverity: ").append(toIndentedString(syslogSeverity)).append("\n");
    sb.append("    syslogMessageHostName: ").append(toIndentedString(syslogMessageHostName)).append("\n");
    sb.append("    syslogMessageApplicationName: ").append(toIndentedString(syslogMessageApplicationName)).append("\n");
    sb.append("    queueSize: ").append(toIndentedString(queueSize)).append("\n");
    sb.append("    writeMultiLineMessages: ").append(toIndentedString(writeMultiLineMessages)).append("\n");
    sb.append("    useReversibleForm: ").append(toIndentedString(useReversibleForm)).append("\n");
    sb.append("    softDeleteEntryAuditBehavior: ").append(toIndentedString(softDeleteEntryAuditBehavior)).append("\n");
    sb.append("    includeOperationPurposeRequestControl: ").append(toIndentedString(includeOperationPurposeRequestControl)).append("\n");
    sb.append("    includeIntermediateClientRequestControl: ").append(toIndentedString(includeIntermediateClientRequestControl)).append("\n");
    sb.append("    obscureAttribute: ").append(toIndentedString(obscureAttribute)).append("\n");
    sb.append("    excludeAttribute: ").append(toIndentedString(excludeAttribute)).append("\n");
    sb.append("    suppressInternalOperations: ").append(toIndentedString(suppressInternalOperations)).append("\n");
    sb.append("    includeProductName: ").append(toIndentedString(includeProductName)).append("\n");
    sb.append("    includeInstanceName: ").append(toIndentedString(includeInstanceName)).append("\n");
    sb.append("    includeStartupID: ").append(toIndentedString(includeStartupID)).append("\n");
    sb.append("    includeThreadID: ").append(toIndentedString(includeThreadID)).append("\n");
    sb.append("    includeRequesterDN: ").append(toIndentedString(includeRequesterDN)).append("\n");
    sb.append("    includeRequesterIPAddress: ").append(toIndentedString(includeRequesterIPAddress)).append("\n");
    sb.append("    includeRequestControls: ").append(toIndentedString(includeRequestControls)).append("\n");
    sb.append("    includeResponseControls: ").append(toIndentedString(includeResponseControls)).append("\n");
    sb.append("    includeReplicationChangeID: ").append(toIndentedString(includeReplicationChangeID)).append("\n");
    sb.append("    logSecurityNegotiation: ").append(toIndentedString(logSecurityNegotiation)).append("\n");
    sb.append("    suppressReplicationOperations: ").append(toIndentedString(suppressReplicationOperations)).append("\n");
    sb.append("    connectionCriteria: ").append(toIndentedString(connectionCriteria)).append("\n");
    sb.append("    requestCriteria: ").append(toIndentedString(requestCriteria)).append("\n");
    sb.append("    resultCriteria: ").append(toIndentedString(resultCriteria)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    loggingErrorBehavior: ").append(toIndentedString(loggingErrorBehavior)).append("\n");
    sb.append("    meta: ").append(toIndentedString(meta)).append("\n");
    sb.append("    urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20: ").append(toIndentedString(urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("description");
    openapiFields.add("schemas");
    openapiFields.add("syslogExternalServer");
    openapiFields.add("syslogFacility");
    openapiFields.add("syslogSeverity");
    openapiFields.add("syslogMessageHostName");
    openapiFields.add("syslogMessageApplicationName");
    openapiFields.add("queueSize");
    openapiFields.add("writeMultiLineMessages");
    openapiFields.add("useReversibleForm");
    openapiFields.add("softDeleteEntryAuditBehavior");
    openapiFields.add("includeOperationPurposeRequestControl");
    openapiFields.add("includeIntermediateClientRequestControl");
    openapiFields.add("obscureAttribute");
    openapiFields.add("excludeAttribute");
    openapiFields.add("suppressInternalOperations");
    openapiFields.add("includeProductName");
    openapiFields.add("includeInstanceName");
    openapiFields.add("includeStartupID");
    openapiFields.add("includeThreadID");
    openapiFields.add("includeRequesterDN");
    openapiFields.add("includeRequesterIPAddress");
    openapiFields.add("includeRequestControls");
    openapiFields.add("includeResponseControls");
    openapiFields.add("includeReplicationChangeID");
    openapiFields.add("logSecurityNegotiation");
    openapiFields.add("suppressReplicationOperations");
    openapiFields.add("connectionCriteria");
    openapiFields.add("requestCriteria");
    openapiFields.add("resultCriteria");
    openapiFields.add("enabled");
    openapiFields.add("loggingErrorBehavior");
    openapiFields.add("meta");
    openapiFields.add("urn:pingidentity:schemas:configuration:messages:2.0");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("schemas");
    openapiRequiredFields.add("syslogExternalServer");
    openapiRequiredFields.add("syslogFacility");
    openapiRequiredFields.add("syslogSeverity");
    openapiRequiredFields.add("enabled");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to SyslogJsonAuditLogPublisherResponse
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!SyslogJsonAuditLogPublisherResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SyslogJsonAuditLogPublisherResponse is not found in the empty JSON string", SyslogJsonAuditLogPublisherResponse.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : SyslogJsonAuditLogPublisherResponse.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("schemas") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("schemas").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `schemas` to be an array in the JSON string but got `%s`", jsonObj.get("schemas").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("syslogExternalServer") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("syslogExternalServer").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `syslogExternalServer` to be an array in the JSON string but got `%s`", jsonObj.get("syslogExternalServer").toString()));
      }
      if ((jsonObj.get("syslogMessageHostName") != null && !jsonObj.get("syslogMessageHostName").isJsonNull()) && !jsonObj.get("syslogMessageHostName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `syslogMessageHostName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("syslogMessageHostName").toString()));
      }
      if ((jsonObj.get("syslogMessageApplicationName") != null && !jsonObj.get("syslogMessageApplicationName").isJsonNull()) && !jsonObj.get("syslogMessageApplicationName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `syslogMessageApplicationName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("syslogMessageApplicationName").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("obscureAttribute") != null && !jsonObj.get("obscureAttribute").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `obscureAttribute` to be an array in the JSON string but got `%s`", jsonObj.get("obscureAttribute").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("excludeAttribute") != null && !jsonObj.get("excludeAttribute").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `excludeAttribute` to be an array in the JSON string but got `%s`", jsonObj.get("excludeAttribute").toString()));
      }
      if ((jsonObj.get("connectionCriteria") != null && !jsonObj.get("connectionCriteria").isJsonNull()) && !jsonObj.get("connectionCriteria").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `connectionCriteria` to be a primitive type in the JSON string but got `%s`", jsonObj.get("connectionCriteria").toString()));
      }
      if ((jsonObj.get("requestCriteria") != null && !jsonObj.get("requestCriteria").isJsonNull()) && !jsonObj.get("requestCriteria").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `requestCriteria` to be a primitive type in the JSON string but got `%s`", jsonObj.get("requestCriteria").toString()));
      }
      if ((jsonObj.get("resultCriteria") != null && !jsonObj.get("resultCriteria").isJsonNull()) && !jsonObj.get("resultCriteria").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resultCriteria` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resultCriteria").toString()));
      }
      // validate the optional field `meta`
      if (jsonObj.get("meta") != null && !jsonObj.get("meta").isJsonNull()) {
        MetaMeta.validateJsonObject(jsonObj.getAsJsonObject("meta"));
      }
      // validate the optional field `urn:pingidentity:schemas:configuration:messages:2.0`
      if (jsonObj.get("urn:pingidentity:schemas:configuration:messages:2.0") != null && !jsonObj.get("urn:pingidentity:schemas:configuration:messages:2.0").isJsonNull()) {
        MetaUrnPingidentitySchemasConfigurationMessages20.validateJsonObject(jsonObj.getAsJsonObject("urn:pingidentity:schemas:configuration:messages:2.0"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SyslogJsonAuditLogPublisherResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SyslogJsonAuditLogPublisherResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SyslogJsonAuditLogPublisherResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SyslogJsonAuditLogPublisherResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<SyslogJsonAuditLogPublisherResponse>() {
           @Override
           public void write(JsonWriter out, SyslogJsonAuditLogPublisherResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public SyslogJsonAuditLogPublisherResponse read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             SyslogJsonAuditLogPublisherResponse instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of SyslogJsonAuditLogPublisherResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of SyslogJsonAuditLogPublisherResponse
  * @throws IOException if the JSON string is invalid with respect to SyslogJsonAuditLogPublisherResponse
  */
  public static SyslogJsonAuditLogPublisherResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SyslogJsonAuditLogPublisherResponse.class);
  }

 /**
  * Convert an instance of SyslogJsonAuditLogPublisherResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

