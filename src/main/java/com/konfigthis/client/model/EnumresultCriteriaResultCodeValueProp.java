/*
 * PingData Config - OpenAPI 3.0
 * This is the PingData Configuration API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Specifies the operation result code values for results included in this Simple Result Criteria. This will only be taken into account if the \&quot;result-code-criteria\&quot; property has a value of \&quot;selected-result-codes\&quot;.
 */
@JsonAdapter(EnumresultCriteriaResultCodeValueProp.Adapter.class)public enum EnumresultCriteriaResultCodeValueProp {
  
  SUCCESS("success"),
  
  OPERATIONS_ERROR("operations-error"),
  
  PROTOCOL_ERROR("protocol-error"),
  
  TIME_LIMIT_EXCEEDED("time-limit-exceeded"),
  
  SIZE_LIMIT_EXCEEDED("size-limit-exceeded"),
  
  COMPARE_FALSE("compare-false"),
  
  COMPARE_TRUE("compare-true"),
  
  AUTH_METHOD_NOT_SUPPORTED("auth-method-not-supported"),
  
  STRONG_AUTH_REQUIRED("strong-auth-required"),
  
  REFERRAL("referral"),
  
  ADMIN_LIMIT_EXCEEDED("admin-limit-exceeded"),
  
  UNAVAILABLE_CRITICAL_EXTENSION("unavailable-critical-extension"),
  
  CONFIDENTIALITY_REQUIRED("confidentiality-required"),
  
  SASL_BIND_IN_PROGRESS("sasl-bind-in-progress"),
  
  NO_SUCH_ATTRIBUTE("no-such-attribute"),
  
  UNDEFINED_ATTRIBUTE_TYPE("undefined-attribute-type"),
  
  INAPPROPRIATE_MATCHING("inappropriate-matching"),
  
  CONSTRAINT_VIOLATION("constraint-violation"),
  
  ATTRIBUTE_OR_VALUE_EXISTS("attribute-or-value-exists"),
  
  INVALID_ATTRIBUTE_SYNTAX("invalid-attribute-syntax"),
  
  NO_SUCH_OBJECT("no-such-object"),
  
  ALIAS_PROBLEM("alias-problem"),
  
  INVALID_DN_SYNTAX("invalid-dn-syntax"),
  
  ALIAS_DEREFERENCING_PROBLEM("alias-dereferencing-problem"),
  
  INAPPROPRIATE_AUTHENTICATION("inappropriate-authentication"),
  
  INVALID_CREDENTIALS("invalid-credentials"),
  
  INSUFFICIENT_ACCESS_RIGHTS("insufficient-access-rights"),
  
  BUSY("busy"),
  
  UNAVAILABLE("unavailable"),
  
  UNWILLING_TO_PERFORM("unwilling-to-perform"),
  
  LOOP_DETECT("loop-detect"),
  
  SORT_CONTROL_MISSING("sort-control-missing"),
  
  OFFSET_RANGE_ERROR("offset-range-error"),
  
  NAMING_VIOLATION("naming-violation"),
  
  OBJECTCLASS_VIOLATION("objectclass-violation"),
  
  NOT_ALLOWED_ON_NONLEAF("not-allowed-on-nonleaf"),
  
  NOT_ALLOWED_ON_RDN("not-allowed-on-rdn"),
  
  ENTRY_ALREADY_EXISTS("entry-already-exists"),
  
  OBJECTCLASS_MODS_PROHIBITED("objectclass-mods-prohibited"),
  
  AFFECTS_MULTIPLE_DSAS("affects-multiple-dsas"),
  
  VIRTUAL_LIST_VIEW_ERROR("virtual-list-view-error"),
  
  OTHER("other"),
  
  CANCELED("canceled"),
  
  NO_SUCH_OPERATION("no-such-operation"),
  
  TOO_LATE("too-late"),
  
  CANNOT_CANCEL("cannot-cancel"),
  
  ASSERTION_FAILED("assertion-failed"),
  
  AUTHORIZATION_DENIED("authorization-denied"),
  
  NO_OPERATION("no-operation"),
  
  INTERACTIVE_TRANSACTION_ABORTED("interactive-transaction-aborted"),
  
  DATABASE_LOCK_CONFLICT("database-lock-conflict"),
  
  MIRRORED_SUBTREE_DIGEST_MISMATCH("mirrored-subtree-digest-mismatch"),
  
  TOKEN_DELIVERY_MECHANISM_UNAVAILABLE("token-delivery-mechanism-unavailable"),
  
  TOKEN_DELIVERY_ATTEMPT_FAILED("token-delivery-attempt-failed"),
  
  TOKEN_DELIVERY_INVALID_RECIPIENT_ID("token-delivery-invalid-recipient-id"),
  
  TOKEN_DELIVERY_INVALID_ACCOUNT_STATE("token-delivery-invalid-account-state");

  private String value;

  EnumresultCriteriaResultCodeValueProp(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static EnumresultCriteriaResultCodeValueProp fromValue(String value) {
    for (EnumresultCriteriaResultCodeValueProp b : EnumresultCriteriaResultCodeValueProp.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<EnumresultCriteriaResultCodeValueProp> {
    @Override
    public void write(final JsonWriter jsonWriter, final EnumresultCriteriaResultCodeValueProp enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public EnumresultCriteriaResultCodeValueProp read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return EnumresultCriteriaResultCodeValueProp.fromValue(value);
    }
  }
}

