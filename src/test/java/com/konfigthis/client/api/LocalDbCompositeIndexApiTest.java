/*
 * PingData Config - OpenAPI 3.0
 * This is the PingData Configuration API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.AddLocalDbCompositeIndexRequest;
import com.konfigthis.client.model.EnumlocalDbCompositeIndexCacheModeProp;
import com.konfigthis.client.model.EnumlocalDbCompositeIndexSchemaUrn;
import com.konfigthis.client.model.LocalDbCompositeIndexListResponse;
import com.konfigthis.client.model.LocalDbCompositeIndexResponse;
import com.konfigthis.client.model.Operation;
import com.konfigthis.client.model.UpdateRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LocalDbCompositeIndexApi
 */
@Disabled
public class LocalDbCompositeIndexApiTest {

    private static LocalDbCompositeIndexApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new LocalDbCompositeIndexApi(apiClient);
    }

    /**
     * Add a new Local DB Composite Index to the config
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addNewIndexTest() throws ApiException {
        String indexName = null;
        String backendName = null;
        String description = null;
        List<EnumlocalDbCompositeIndexSchemaUrn> schemas = null;
        String indexFilterPattern = null;
        String indexBaseDNPattern = null;
        Integer indexEntryLimit = null;
        Boolean primeIndex = null;
        Boolean primeInternalNodesOnly = null;
        EnumlocalDbCompositeIndexCacheModeProp cacheMode = null;
        LocalDbCompositeIndexResponse response = api.addNewIndex(indexName, backendName)
                .description(description)
                .schemas(schemas)
                .indexFilterPattern(indexFilterPattern)
                .indexBaseDNPattern(indexBaseDNPattern)
                .indexEntryLimit(indexEntryLimit)
                .primeIndex(primeIndex)
                .primeInternalNodesOnly(primeInternalNodesOnly)
                .cacheMode(cacheMode)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete a Local DB Composite Index
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteCompositeIndexTest() throws ApiException {
        String localDbCompositeIndexName = null;
        String backendName = null;
        api.deleteCompositeIndex(localDbCompositeIndexName, backendName)
                .execute();
        // TODO: test validations
    }

    /**
     * Returns a single Local DB Composite Index
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSingleTest() throws ApiException {
        String localDbCompositeIndexName = null;
        String backendName = null;
        LocalDbCompositeIndexResponse response = api.getSingle(localDbCompositeIndexName, backendName)
                .execute();
        // TODO: test validations
    }

    /**
     * Returns a list of all Local DB Composite Index objects
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAllObjectsTest() throws ApiException {
        String backendName = null;
        String filter = null;
        LocalDbCompositeIndexListResponse response = api.listAllObjects(backendName)
                .filter(filter)
                .execute();
        // TODO: test validations
    }

    /**
     * Update an existing Local DB Composite Index by name
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateByNameTest() throws ApiException {
        List<Operation> operations = null;
        String localDbCompositeIndexName = null;
        String backendName = null;
        LocalDbCompositeIndexResponse response = api.updateByName(operations, localDbCompositeIndexName, backendName)
                .execute();
        // TODO: test validations
    }

}
