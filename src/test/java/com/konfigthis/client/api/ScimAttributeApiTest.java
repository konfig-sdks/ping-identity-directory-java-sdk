/*
 * PingData Config - OpenAPI 3.0
 * This is the PingData Configuration API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.AddScimAttributeRequest;
import com.konfigthis.client.model.EnumscimAttributeMutabilityProp;
import com.konfigthis.client.model.EnumscimAttributeReturnedProp;
import com.konfigthis.client.model.EnumscimAttributeSchemaUrn;
import com.konfigthis.client.model.EnumscimAttributeTypeProp;
import com.konfigthis.client.model.Operation;
import com.konfigthis.client.model.ScimAttributeListResponse;
import com.konfigthis.client.model.ScimAttributeResponse;
import com.konfigthis.client.model.UpdateRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ScimAttributeApi
 */
@Disabled
public class ScimAttributeApiTest {

    private static ScimAttributeApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new ScimAttributeApi(apiClient);
    }

    /**
     * Add a new SCIM Attribute to the config
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addNewAttributeTest() throws ApiException {
        String attributeName = null;
        String scimSchemaName = null;
        String description = null;
        List<EnumscimAttributeSchemaUrn> schemas = null;
        String name = null;
        EnumscimAttributeTypeProp type = null;
        Boolean required = null;
        Boolean caseExact = null;
        Boolean multiValued = null;
        List<String> canonicalValue = null;
        EnumscimAttributeMutabilityProp mutability = null;
        EnumscimAttributeReturnedProp returned = null;
        List<String> referenceType = null;
        ScimAttributeResponse response = api.addNewAttribute(attributeName, scimSchemaName)
                .description(description)
                .schemas(schemas)
                .name(name)
                .type(type)
                .required(required)
                .caseExact(caseExact)
                .multiValued(multiValued)
                .canonicalValue(canonicalValue)
                .mutability(mutability)
                .returned(returned)
                .referenceType(referenceType)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete a SCIM Attribute
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAttributeTest() throws ApiException {
        String scimAttributeName = null;
        String scimSchemaName = null;
        api.deleteAttribute(scimAttributeName, scimSchemaName)
                .execute();
        // TODO: test validations
    }

    /**
     * Returns a single SCIM Attribute
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSingleAttributeTest() throws ApiException {
        String scimAttributeName = null;
        String scimSchemaName = null;
        ScimAttributeResponse response = api.getSingleAttribute(scimAttributeName, scimSchemaName)
                .execute();
        // TODO: test validations
    }

    /**
     * Returns a list of all SCIM Attribute objects
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAllAttributesTest() throws ApiException {
        String scimSchemaName = null;
        String filter = null;
        ScimAttributeListResponse response = api.listAllAttributes(scimSchemaName)
                .filter(filter)
                .execute();
        // TODO: test validations
    }

    /**
     * Update an existing SCIM Attribute by name
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateByNameTest() throws ApiException {
        List<Operation> operations = null;
        String scimAttributeName = null;
        String scimSchemaName = null;
        ScimAttributeResponse response = api.updateByName(operations, scimAttributeName, scimSchemaName)
                .execute();
        // TODO: test validations
    }

}
