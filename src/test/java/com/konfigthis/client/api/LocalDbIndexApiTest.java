/*
 * PingData Config - OpenAPI 3.0
 * This is the PingData Configuration API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.AddLocalDbIndexRequest;
import com.konfigthis.client.model.EnumlocalDbIndexCacheModeProp;
import com.konfigthis.client.model.EnumlocalDbIndexIndexTypeProp;
import com.konfigthis.client.model.EnumlocalDbIndexSchemaUrn;
import com.konfigthis.client.model.LocalDbIndexListResponse;
import com.konfigthis.client.model.LocalDbIndexResponse;
import com.konfigthis.client.model.Operation;
import com.konfigthis.client.model.UpdateRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LocalDbIndexApi
 */
@Disabled
public class LocalDbIndexApiTest {

    private static LocalDbIndexApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new LocalDbIndexApi(apiClient);
    }

    /**
     * Add a new Local DB Index to the config
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addNewIndexTest() throws ApiException {
        String indexName = null;
        String backendName = null;
        List<EnumlocalDbIndexSchemaUrn> schemas = null;
        String attribute = null;
        Integer indexEntryLimit = null;
        Integer substringIndexEntryLimit = null;
        Boolean maintainMatchCountForKeysExceedingEntryLimit = null;
        List<EnumlocalDbIndexIndexTypeProp> indexType = null;
        Integer substringLength = null;
        Boolean primeIndex = null;
        Boolean primeInternalNodesOnly = null;
        List<String> equalityIndexFilter = null;
        Boolean maintainEqualityIndexWithoutFilter = null;
        EnumlocalDbIndexCacheModeProp cacheMode = null;
        LocalDbIndexResponse response = api.addNewIndex(indexName, backendName)
                .schemas(schemas)
                .attribute(attribute)
                .indexEntryLimit(indexEntryLimit)
                .substringIndexEntryLimit(substringIndexEntryLimit)
                .maintainMatchCountForKeysExceedingEntryLimit(maintainMatchCountForKeysExceedingEntryLimit)
                .indexType(indexType)
                .substringLength(substringLength)
                .primeIndex(primeIndex)
                .primeInternalNodesOnly(primeInternalNodesOnly)
                .equalityIndexFilter(equalityIndexFilter)
                .maintainEqualityIndexWithoutFilter(maintainEqualityIndexWithoutFilter)
                .cacheMode(cacheMode)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete a Local DB Index
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteIndexTest() throws ApiException {
        String localDbIndexName = null;
        String backendName = null;
        api.deleteIndex(localDbIndexName, backendName)
                .execute();
        // TODO: test validations
    }

    /**
     * Returns a list of all Local DB Index objects
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllIndexesTest() throws ApiException {
        String backendName = null;
        String filter = null;
        LocalDbIndexListResponse response = api.getAllIndexes(backendName)
                .filter(filter)
                .execute();
        // TODO: test validations
    }

    /**
     * Returns a single Local DB Index
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSingleTest() throws ApiException {
        String localDbIndexName = null;
        String backendName = null;
        LocalDbIndexResponse response = api.getSingle(localDbIndexName, backendName)
                .execute();
        // TODO: test validations
    }

    /**
     * Update an existing Local DB Index by name
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateByNameTest() throws ApiException {
        List<Operation> operations = null;
        String localDbIndexName = null;
        String backendName = null;
        LocalDbIndexResponse response = api.updateByName(operations, localDbIndexName, backendName)
                .execute();
        // TODO: test validations
    }

}
