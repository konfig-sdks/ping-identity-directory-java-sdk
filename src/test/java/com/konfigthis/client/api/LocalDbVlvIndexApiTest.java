/*
 * PingData Config - OpenAPI 3.0
 * This is the PingData Configuration API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.AddLocalDbVlvIndexRequest;
import com.konfigthis.client.model.EnumlocalDbVlvIndexCacheModeProp;
import com.konfigthis.client.model.EnumlocalDbVlvIndexSchemaUrn;
import com.konfigthis.client.model.EnumlocalDbVlvIndexScopeProp;
import com.konfigthis.client.model.LocalDbVlvIndexListResponse;
import com.konfigthis.client.model.LocalDbVlvIndexResponse;
import com.konfigthis.client.model.Operation;
import com.konfigthis.client.model.UpdateRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LocalDbVlvIndexApi
 */
@Disabled
public class LocalDbVlvIndexApiTest {

    private static LocalDbVlvIndexApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new LocalDbVlvIndexApi(apiClient);
    }

    /**
     * Add a new Local DB VLV Index to the config
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addNewIndexToConfigTest() throws ApiException {
        String indexName = null;
        String backendName = null;
        List<EnumlocalDbVlvIndexSchemaUrn> schemas = null;
        String baseDN = null;
        EnumlocalDbVlvIndexScopeProp scope = null;
        String filter = null;
        String sortOrder = null;
        String name = null;
        Integer maxBlockSize = null;
        EnumlocalDbVlvIndexCacheModeProp cacheMode = null;
        LocalDbVlvIndexResponse response = api.addNewIndexToConfig(indexName, backendName)
                .schemas(schemas)
                .baseDN(baseDN)
                .scope(scope)
                .filter(filter)
                .sortOrder(sortOrder)
                .name(name)
                .maxBlockSize(maxBlockSize)
                .cacheMode(cacheMode)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete a Local DB VLV Index
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteTest() throws ApiException {
        String localDbVlvIndexName = null;
        String backendName = null;
        api.delete(localDbVlvIndexName, backendName)
                .execute();
        // TODO: test validations
    }

    /**
     * Returns a single Local DB VLV Index
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSingleTest() throws ApiException {
        String localDbVlvIndexName = null;
        String backendName = null;
        LocalDbVlvIndexResponse response = api.getSingle(localDbVlvIndexName, backendName)
                .execute();
        // TODO: test validations
    }

    /**
     * Returns a list of all Local DB VLV Index objects
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listObjectsTest() throws ApiException {
        String backendName = null;
        String filter = null;
        LocalDbVlvIndexListResponse response = api.listObjects(backendName)
                .filter(filter)
                .execute();
        // TODO: test validations
    }

    /**
     * Update an existing Local DB VLV Index by name
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateByNameTest() throws ApiException {
        List<Operation> operations = null;
        String localDbVlvIndexName = null;
        String backendName = null;
        LocalDbVlvIndexResponse response = api.updateByName(operations, localDbVlvIndexName, backendName)
                .execute();
        // TODO: test validations
    }

}
