/*
 * PingData Config - OpenAPI 3.0
 * This is the PingData Configuration API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.AddHttpServletCrossOriginPolicyRequest;
import com.konfigthis.client.model.EnumhttpServletCrossOriginPolicySchemaUrn;
import com.konfigthis.client.model.HttpServletCrossOriginPolicyListResponse;
import com.konfigthis.client.model.HttpServletCrossOriginPolicyResponse;
import com.konfigthis.client.model.Operation;
import com.konfigthis.client.model.UpdateRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for HttpServletCrossOriginPolicyApi
 */
@Disabled
public class HttpServletCrossOriginPolicyApiTest {

    private static HttpServletCrossOriginPolicyApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new HttpServletCrossOriginPolicyApi(apiClient);
    }

    /**
     * Add a new HTTP Servlet Cross Origin Policy to the config
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addNewPolicyTest() throws ApiException {
        String policyName = null;
        String description = null;
        List<EnumhttpServletCrossOriginPolicySchemaUrn> schemas = null;
        List<String> corsAllowedMethods = null;
        List<String> corsAllowedOrigins = null;
        List<String> corsExposedHeaders = null;
        List<String> corsAllowedHeaders = null;
        String corsPreflightMaxAge = null;
        Boolean corsAllowCredentials = null;
        HttpServletCrossOriginPolicyResponse response = api.addNewPolicy(policyName)
                .description(description)
                .schemas(schemas)
                .corsAllowedMethods(corsAllowedMethods)
                .corsAllowedOrigins(corsAllowedOrigins)
                .corsExposedHeaders(corsExposedHeaders)
                .corsAllowedHeaders(corsAllowedHeaders)
                .corsPreflightMaxAge(corsPreflightMaxAge)
                .corsAllowCredentials(corsAllowCredentials)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete a HTTP Servlet Cross Origin Policy
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deletePolicyTest() throws ApiException {
        String httpServletCrossOriginPolicyName = null;
        api.deletePolicy(httpServletCrossOriginPolicyName)
                .execute();
        // TODO: test validations
    }

    /**
     * Returns a single HTTP Servlet Cross Origin Policy
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSinglePolicyTest() throws ApiException {
        String httpServletCrossOriginPolicyName = null;
        HttpServletCrossOriginPolicyResponse response = api.getSinglePolicy(httpServletCrossOriginPolicyName)
                .execute();
        // TODO: test validations
    }

    /**
     * Returns a list of all HTTP Servlet Cross Origin Policy objects
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAllPoliciesTest() throws ApiException {
        String filter = null;
        HttpServletCrossOriginPolicyListResponse response = api.listAllPolicies()
                .filter(filter)
                .execute();
        // TODO: test validations
    }

    /**
     * Update an existing HTTP Servlet Cross Origin Policy by name
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateByNameTest() throws ApiException {
        List<Operation> operations = null;
        String httpServletCrossOriginPolicyName = null;
        HttpServletCrossOriginPolicyResponse response = api.updateByName(operations, httpServletCrossOriginPolicyName)
                .execute();
        // TODO: test validations
    }

}
