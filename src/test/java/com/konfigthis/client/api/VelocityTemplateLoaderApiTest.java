/*
 * PingData Config - OpenAPI 3.0
 * This is the PingData Configuration API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.AddVelocityTemplateLoaderRequest;
import com.konfigthis.client.model.EnumvelocityTemplateLoaderSchemaUrn;
import com.konfigthis.client.model.Operation;
import com.konfigthis.client.model.UpdateRequest;
import com.konfigthis.client.model.VelocityTemplateLoaderListResponse;
import com.konfigthis.client.model.VelocityTemplateLoaderResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for VelocityTemplateLoaderApi
 */
@Disabled
public class VelocityTemplateLoaderApiTest {

    private static VelocityTemplateLoaderApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new VelocityTemplateLoaderApi(apiClient);
    }

    /**
     * Add a new Velocity Template Loader to the config
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addNewLoaderToConfigTest() throws ApiException {
        String loaderName = null;
        String httpServletExtensionName = null;
        List<EnumvelocityTemplateLoaderSchemaUrn> schemas = null;
        Boolean enabled = null;
        Integer evaluationOrderIndex = null;
        String mimeTypeMatcher = null;
        String mimeType = null;
        String templateSuffix = null;
        String templateDirectory = null;
        VelocityTemplateLoaderResponse response = api.addNewLoaderToConfig(loaderName, httpServletExtensionName)
                .schemas(schemas)
                .enabled(enabled)
                .evaluationOrderIndex(evaluationOrderIndex)
                .mimeTypeMatcher(mimeTypeMatcher)
                .mimeType(mimeType)
                .templateSuffix(templateSuffix)
                .templateDirectory(templateDirectory)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete a Velocity Template Loader
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteLoaderTest() throws ApiException {
        String velocityTemplateLoaderName = null;
        String httpServletExtensionName = null;
        api.deleteLoader(velocityTemplateLoaderName, httpServletExtensionName)
                .execute();
        // TODO: test validations
    }

    /**
     * Returns a list of all Velocity Template Loader objects
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllTemplateLoadersTest() throws ApiException {
        String httpServletExtensionName = null;
        String filter = null;
        VelocityTemplateLoaderListResponse response = api.getAllTemplateLoaders(httpServletExtensionName)
                .filter(filter)
                .execute();
        // TODO: test validations
    }

    /**
     * Returns a single Velocity Template Loader
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSingleLoaderTest() throws ApiException {
        String velocityTemplateLoaderName = null;
        String httpServletExtensionName = null;
        VelocityTemplateLoaderResponse response = api.getSingleLoader(velocityTemplateLoaderName, httpServletExtensionName)
                .execute();
        // TODO: test validations
    }

    /**
     * Update an existing Velocity Template Loader by name
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateByNameTest() throws ApiException {
        List<Operation> operations = null;
        String velocityTemplateLoaderName = null;
        String httpServletExtensionName = null;
        VelocityTemplateLoaderResponse response = api.updateByName(operations, velocityTemplateLoaderName, httpServletExtensionName)
                .execute();
        // TODO: test validations
    }

}
