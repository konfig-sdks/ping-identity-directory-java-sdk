/*
 * PingData Config - OpenAPI 3.0
 * This is the PingData Configuration API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.AddFifoEntryCacheRequest;
import com.konfigthis.client.model.EntryCacheListResponse;
import com.konfigthis.client.model.EnumfifoEntryCacheSchemaUrn;
import com.konfigthis.client.model.FifoEntryCacheResponse;
import com.konfigthis.client.model.Operation;
import com.konfigthis.client.model.UpdateRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for EntryCacheApi
 */
@Disabled
public class EntryCacheApiTest {

    private static EntryCacheApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new EntryCacheApi(apiClient);
    }

    /**
     * Add a new Entry Cache to the config
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addNewCacheTest() throws ApiException {
        String cacheName = null;
        String description = null;
        List<EnumfifoEntryCacheSchemaUrn> schemas = null;
        Integer maxMemoryPercent = null;
        Integer maxEntries = null;
        Boolean onlyCacheFrequentlyAccessed = null;
        List<String> includeFilter = null;
        List<String> excludeFilter = null;
        Integer minCacheEntryValueCount = null;
        List<String> minCacheEntryAttribute = null;
        Boolean enabled = null;
        Integer cacheLevel = null;
        Boolean cacheUnindexedSearchResults = null;
        FifoEntryCacheResponse response = api.addNewCache(cacheName)
                .description(description)
                .schemas(schemas)
                .maxMemoryPercent(maxMemoryPercent)
                .maxEntries(maxEntries)
                .onlyCacheFrequentlyAccessed(onlyCacheFrequentlyAccessed)
                .includeFilter(includeFilter)
                .excludeFilter(excludeFilter)
                .minCacheEntryValueCount(minCacheEntryValueCount)
                .minCacheEntryAttribute(minCacheEntryAttribute)
                .enabled(enabled)
                .cacheLevel(cacheLevel)
                .cacheUnindexedSearchResults(cacheUnindexedSearchResults)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete a Entry Cache
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteEntryCacheTest() throws ApiException {
        String entryCacheName = null;
        api.deleteEntryCache(entryCacheName)
                .execute();
        // TODO: test validations
    }

    /**
     * Returns a list of all Entry Cache objects
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllObjectsTest() throws ApiException {
        String filter = null;
        EntryCacheListResponse response = api.getAllObjects()
                .filter(filter)
                .execute();
        // TODO: test validations
    }

    /**
     * Returns a single Entry Cache
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSingleCacheTest() throws ApiException {
        String entryCacheName = null;
        FifoEntryCacheResponse response = api.getSingleCache(entryCacheName)
                .execute();
        // TODO: test validations
    }

    /**
     * Update an existing Entry Cache by name
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateByNameTest() throws ApiException {
        List<Operation> operations = null;
        String entryCacheName = null;
        FifoEntryCacheResponse response = api.updateByName(operations, entryCacheName)
                .execute();
        // TODO: test validations
    }

}
