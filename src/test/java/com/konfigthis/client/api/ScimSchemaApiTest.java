/*
 * PingData Config - OpenAPI 3.0
 * This is the PingData Configuration API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.AddScimSchemaRequest;
import com.konfigthis.client.model.EnumscimSchemaSchemaUrn;
import com.konfigthis.client.model.Operation;
import com.konfigthis.client.model.ScimSchemaListResponse;
import com.konfigthis.client.model.ScimSchemaResponse;
import com.konfigthis.client.model.UpdateRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ScimSchemaApi
 */
@Disabled
public class ScimSchemaApiTest {

    private static ScimSchemaApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new ScimSchemaApi(apiClient);
    }

    /**
     * Add a new SCIM Schema to the config
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addNewSchemaTest() throws ApiException {
        String schemaName = null;
        String description = null;
        List<EnumscimSchemaSchemaUrn> schemas = null;
        String schemaURN = null;
        String displayName = null;
        ScimSchemaResponse response = api.addNewSchema(schemaName)
                .description(description)
                .schemas(schemas)
                .schemaURN(schemaURN)
                .displayName(displayName)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete a SCIM Schema
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSchemaTest() throws ApiException {
        String scimSchemaName = null;
        api.deleteSchema(scimSchemaName)
                .execute();
        // TODO: test validations
    }

    /**
     * Returns a single SCIM Schema
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSingleSchemaTest() throws ApiException {
        String scimSchemaName = null;
        ScimSchemaResponse response = api.getSingleSchema(scimSchemaName)
                .execute();
        // TODO: test validations
    }

    /**
     * Returns a list of all SCIM Schema objects
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAllObjectsTest() throws ApiException {
        String filter = null;
        ScimSchemaListResponse response = api.listAllObjects()
                .filter(filter)
                .execute();
        // TODO: test validations
    }

    /**
     * Update an existing SCIM Schema by name
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateByNameTest() throws ApiException {
        List<Operation> operations = null;
        String scimSchemaName = null;
        ScimSchemaResponse response = api.updateByName(operations, scimSchemaName)
                .execute();
        // TODO: test validations
    }

}
