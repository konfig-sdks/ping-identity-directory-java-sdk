/*
 * PingData Config - OpenAPI 3.0
 * This is the PingData Configuration API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.AddResultCodeMapRequest;
import com.konfigthis.client.model.EnumresultCodeMapSchemaUrn;
import com.konfigthis.client.model.Operation;
import com.konfigthis.client.model.ResultCodeMapListResponse;
import com.konfigthis.client.model.ResultCodeMapResponse;
import com.konfigthis.client.model.UpdateRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ResultCodeMapApi
 */
@Disabled
public class ResultCodeMapApiTest {

    private static ResultCodeMapApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new ResultCodeMapApi(apiClient);
    }

    /**
     * Add a new Result Code Map to the config
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addNewResultCodeMapTest() throws ApiException {
        String mapName = null;
        String description = null;
        List<EnumresultCodeMapSchemaUrn> schemas = null;
        Integer bindAccountLockedResultCode = null;
        Integer bindMissingUserResultCode = null;
        Integer bindMissingPasswordResultCode = null;
        Integer serverErrorResultCode = null;
        ResultCodeMapResponse response = api.addNewResultCodeMap(mapName)
                .description(description)
                .schemas(schemas)
                .bindAccountLockedResultCode(bindAccountLockedResultCode)
                .bindMissingUserResultCode(bindMissingUserResultCode)
                .bindMissingPasswordResultCode(bindMissingPasswordResultCode)
                .serverErrorResultCode(serverErrorResultCode)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete a Result Code Map
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteResultCodeMapTest() throws ApiException {
        String resultCodeMapName = null;
        api.deleteResultCodeMap(resultCodeMapName)
                .execute();
        // TODO: test validations
    }

    /**
     * Returns a list of all Result Code Map objects
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllObjectsTest() throws ApiException {
        String filter = null;
        ResultCodeMapListResponse response = api.getAllObjects()
                .filter(filter)
                .execute();
        // TODO: test validations
    }

    /**
     * Returns a single Result Code Map
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSingleMapTest() throws ApiException {
        String resultCodeMapName = null;
        ResultCodeMapResponse response = api.getSingleMap(resultCodeMapName)
                .execute();
        // TODO: test validations
    }

    /**
     * Update an existing Result Code Map by name
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateByNameTest() throws ApiException {
        List<Operation> operations = null;
        String resultCodeMapName = null;
        ResultCodeMapResponse response = api.updateByName(operations, resultCodeMapName)
                .execute();
        // TODO: test validations
    }

}
