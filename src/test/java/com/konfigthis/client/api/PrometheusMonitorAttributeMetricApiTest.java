/*
 * PingData Config - OpenAPI 3.0
 * This is the PingData Configuration API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.AddPrometheusMonitorAttributeMetricRequest;
import com.konfigthis.client.model.EnumprometheusMonitorAttributeMetricMetricTypeProp;
import com.konfigthis.client.model.EnumprometheusMonitorAttributeMetricSchemaUrn;
import com.konfigthis.client.model.Operation;
import com.konfigthis.client.model.PrometheusMonitorAttributeMetricListResponse;
import com.konfigthis.client.model.PrometheusMonitorAttributeMetricResponse;
import com.konfigthis.client.model.UpdateRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PrometheusMonitorAttributeMetricApi
 */
@Disabled
public class PrometheusMonitorAttributeMetricApiTest {

    private static PrometheusMonitorAttributeMetricApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new PrometheusMonitorAttributeMetricApi(apiClient);
    }

    /**
     * Add a new Prometheus Monitor Attribute Metric to the config
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addNewMetricToConfigTest() throws ApiException {
        String metricName = null;
        String httpServletExtensionName = null;
        List<EnumprometheusMonitorAttributeMetricSchemaUrn> schemas = null;
        String monitorAttributeName = null;
        String monitorObjectClassName = null;
        EnumprometheusMonitorAttributeMetricMetricTypeProp metricType = null;
        String filter = null;
        String metricDescription = null;
        List<String> labelNameValuePair = null;
        PrometheusMonitorAttributeMetricResponse response = api.addNewMetricToConfig(metricName, httpServletExtensionName)
                .schemas(schemas)
                .monitorAttributeName(monitorAttributeName)
                .monitorObjectClassName(monitorObjectClassName)
                .metricType(metricType)
                .filter(filter)
                .metricDescription(metricDescription)
                .labelNameValuePair(labelNameValuePair)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete a Prometheus Monitor Attribute Metric
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteMetricTest() throws ApiException {
        String prometheusMonitorAttributeMetricName = null;
        String httpServletExtensionName = null;
        api.deleteMetric(prometheusMonitorAttributeMetricName, httpServletExtensionName)
                .execute();
        // TODO: test validations
    }

    /**
     * Returns a single Prometheus Monitor Attribute Metric
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSingleMetricTest() throws ApiException {
        String prometheusMonitorAttributeMetricName = null;
        String httpServletExtensionName = null;
        PrometheusMonitorAttributeMetricResponse response = api.getSingleMetric(prometheusMonitorAttributeMetricName, httpServletExtensionName)
                .execute();
        // TODO: test validations
    }

    /**
     * Returns a list of all Prometheus Monitor Attribute Metric objects
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAllObjectsTest() throws ApiException {
        String httpServletExtensionName = null;
        String filter = null;
        PrometheusMonitorAttributeMetricListResponse response = api.listAllObjects(httpServletExtensionName)
                .filter(filter)
                .execute();
        // TODO: test validations
    }

    /**
     * Update an existing Prometheus Monitor Attribute Metric by name
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateBynameTest() throws ApiException {
        List<Operation> operations = null;
        String prometheusMonitorAttributeMetricName = null;
        String httpServletExtensionName = null;
        PrometheusMonitorAttributeMetricResponse response = api.updateByname(operations, prometheusMonitorAttributeMetricName, httpServletExtensionName)
                .execute();
        // TODO: test validations
    }

}
