/*
 * PingData Config - OpenAPI 3.0
 * This is the PingData Configuration API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.Operation;
import com.konfigthis.client.model.SaslMechanismHandlerListResponse;
import com.konfigthis.client.model.UpdateRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SaslMechanismHandlerApi
 */
@Disabled
public class SaslMechanismHandlerApiTest {

    private static SaslMechanismHandlerApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new SaslMechanismHandlerApi(apiClient);
    }

    /**
     * Add a new SASL Mechanism Handler to the config
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addNewHandlerTest() throws ApiException {
        Object response = api.addNewHandler()
                .execute();
        // TODO: test validations
    }

    /**
     * Delete a SASL Mechanism Handler
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteHandlerTest() throws ApiException {
        String saslMechanismHandlerName = null;
        api.deleteHandler(saslMechanismHandlerName)
                .execute();
        // TODO: test validations
    }

    /**
     * Returns a single SASL Mechanism Handler
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSingleTest() throws ApiException {
        String saslMechanismHandlerName = null;
        Object response = api.getSingle(saslMechanismHandlerName)
                .execute();
        // TODO: test validations
    }

    /**
     * Returns a list of all SASL Mechanism Handler objects
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAllHandlersTest() throws ApiException {
        String filter = null;
        SaslMechanismHandlerListResponse response = api.listAllHandlers()
                .filter(filter)
                .execute();
        // TODO: test validations
    }

    /**
     * Update an existing SASL Mechanism Handler by name
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateByNameTest() throws ApiException {
        List<Operation> operations = null;
        String saslMechanismHandlerName = null;
        Object response = api.updateByName(operations, saslMechanismHandlerName)
                .execute();
        // TODO: test validations
    }

}
