/*
 * PingData Config - OpenAPI 3.0
 * This is the PingData Configuration API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.AddJsonFieldConstraintsRequest;
import com.konfigthis.client.model.EnumjsonFieldConstraintsCacheModeProp;
import com.konfigthis.client.model.EnumjsonFieldConstraintsIsArrayProp;
import com.konfigthis.client.model.EnumjsonFieldConstraintsSchemaUrn;
import com.konfigthis.client.model.EnumjsonFieldConstraintsValueTypeProp;
import com.konfigthis.client.model.JsonFieldConstraintsListResponse;
import com.konfigthis.client.model.JsonFieldConstraintsResponse;
import com.konfigthis.client.model.Operation;
import com.konfigthis.client.model.UpdateRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for JsonFieldConstraintsApi
 */
@Disabled
public class JsonFieldConstraintsApiTest {

    private static JsonFieldConstraintsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new JsonFieldConstraintsApi(apiClient);
    }

    /**
     * Add a new JSON Field Constraints to the config
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addNewFieldTest() throws ApiException {
        String jsonField = null;
        String jsonAttributeConstraintsName = null;
        String description = null;
        List<EnumjsonFieldConstraintsSchemaUrn> schemas = null;
        EnumjsonFieldConstraintsValueTypeProp valueType = null;
        Boolean isRequired = null;
        EnumjsonFieldConstraintsIsArrayProp isArray = null;
        Boolean allowNullValue = null;
        Boolean allowEmptyObject = null;
        Boolean indexValues = null;
        Integer indexEntryLimit = null;
        Boolean primeIndex = null;
        EnumjsonFieldConstraintsCacheModeProp cacheMode = null;
        Boolean tokenizeValues = null;
        List<String> allowedValue = null;
        List<String> allowedValueRegularExpression = null;
        String minimumNumericValue = null;
        String maximumNumericValue = null;
        Integer minimumValueLength = null;
        Integer maximumValueLength = null;
        Integer minimumValueCount = null;
        Integer maximumValueCount = null;
        JsonFieldConstraintsResponse response = api.addNewField(jsonField, jsonAttributeConstraintsName)
                .description(description)
                .schemas(schemas)
                .valueType(valueType)
                .isRequired(isRequired)
                .isArray(isArray)
                .allowNullValue(allowNullValue)
                .allowEmptyObject(allowEmptyObject)
                .indexValues(indexValues)
                .indexEntryLimit(indexEntryLimit)
                .primeIndex(primeIndex)
                .cacheMode(cacheMode)
                .tokenizeValues(tokenizeValues)
                .allowedValue(allowedValue)
                .allowedValueRegularExpression(allowedValueRegularExpression)
                .minimumNumericValue(minimumNumericValue)
                .maximumNumericValue(maximumNumericValue)
                .minimumValueLength(minimumValueLength)
                .maximumValueLength(maximumValueLength)
                .minimumValueCount(minimumValueCount)
                .maximumValueCount(maximumValueCount)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete a JSON Field Constraints
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteFieldConstraintsTest() throws ApiException {
        String jsonFieldConstraintsName = null;
        String jsonAttributeConstraintsName = null;
        api.deleteFieldConstraints(jsonFieldConstraintsName, jsonAttributeConstraintsName)
                .execute();
        // TODO: test validations
    }

    /**
     * Returns a single JSON Field Constraints
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSingleFieldConstraintsTest() throws ApiException {
        String jsonFieldConstraintsName = null;
        String jsonAttributeConstraintsName = null;
        JsonFieldConstraintsResponse response = api.getSingleFieldConstraints(jsonFieldConstraintsName, jsonAttributeConstraintsName)
                .execute();
        // TODO: test validations
    }

    /**
     * Returns a list of all JSON Field Constraints objects
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAllJsonFieldConstraintsTest() throws ApiException {
        String jsonAttributeConstraintsName = null;
        String filter = null;
        JsonFieldConstraintsListResponse response = api.listAllJsonFieldConstraints(jsonAttributeConstraintsName)
                .filter(filter)
                .execute();
        // TODO: test validations
    }

    /**
     * Update an existing JSON Field Constraints by name
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateByNameTest() throws ApiException {
        List<Operation> operations = null;
        String jsonFieldConstraintsName = null;
        String jsonAttributeConstraintsName = null;
        JsonFieldConstraintsResponse response = api.updateByName(operations, jsonFieldConstraintsName, jsonAttributeConstraintsName)
                .execute();
        // TODO: test validations
    }

}
