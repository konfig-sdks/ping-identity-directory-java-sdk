/*
 * PingData Config - OpenAPI 3.0
 * This is the PingData Configuration API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.EnumrootDnUserIsProxyableProp;
import com.konfigthis.client.model.EnumrootDnUserPrivilegeProp;
import com.konfigthis.client.model.EnumrootDnUserSchemaUrn;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for RootDnUserShared
 */
public class RootDnUserSharedTest {
    private final RootDnUserShared model = new RootDnUserShared();

    /**
     * Model tests for RootDnUserShared
     */
    @Test
    public void testRootDnUserShared() {
        // TODO: test RootDnUserShared
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'schemas'
     */
    @Test
    public void schemasTest() {
        // TODO: test schemas
    }

    /**
     * Test the property 'alternateBindDN'
     */
    @Test
    public void alternateBindDNTest() {
        // TODO: test alternateBindDN
    }

    /**
     * Test the property 'password'
     */
    @Test
    public void passwordTest() {
        // TODO: test password
    }

    /**
     * Test the property 'firstName'
     */
    @Test
    public void firstNameTest() {
        // TODO: test firstName
    }

    /**
     * Test the property 'lastName'
     */
    @Test
    public void lastNameTest() {
        // TODO: test lastName
    }

    /**
     * Test the property 'userID'
     */
    @Test
    public void userIDTest() {
        // TODO: test userID
    }

    /**
     * Test the property 'emailAddress'
     */
    @Test
    public void emailAddressTest() {
        // TODO: test emailAddress
    }

    /**
     * Test the property 'workTelephoneNumber'
     */
    @Test
    public void workTelephoneNumberTest() {
        // TODO: test workTelephoneNumber
    }

    /**
     * Test the property 'homeTelephoneNumber'
     */
    @Test
    public void homeTelephoneNumberTest() {
        // TODO: test homeTelephoneNumber
    }

    /**
     * Test the property 'mobileTelephoneNumber'
     */
    @Test
    public void mobileTelephoneNumberTest() {
        // TODO: test mobileTelephoneNumber
    }

    /**
     * Test the property 'pagerTelephoneNumber'
     */
    @Test
    public void pagerTelephoneNumberTest() {
        // TODO: test pagerTelephoneNumber
    }

    /**
     * Test the property 'inheritDefaultRootPrivileges'
     */
    @Test
    public void inheritDefaultRootPrivilegesTest() {
        // TODO: test inheritDefaultRootPrivileges
    }

    /**
     * Test the property 'privilege'
     */
    @Test
    public void privilegeTest() {
        // TODO: test privilege
    }

    /**
     * Test the property 'searchResultEntryLimit'
     */
    @Test
    public void searchResultEntryLimitTest() {
        // TODO: test searchResultEntryLimit
    }

    /**
     * Test the property 'timeLimitSeconds'
     */
    @Test
    public void timeLimitSecondsTest() {
        // TODO: test timeLimitSeconds
    }

    /**
     * Test the property 'lookThroughEntryLimit'
     */
    @Test
    public void lookThroughEntryLimitTest() {
        // TODO: test lookThroughEntryLimit
    }

    /**
     * Test the property 'idleTimeLimitSeconds'
     */
    @Test
    public void idleTimeLimitSecondsTest() {
        // TODO: test idleTimeLimitSeconds
    }

    /**
     * Test the property 'passwordPolicy'
     */
    @Test
    public void passwordPolicyTest() {
        // TODO: test passwordPolicy
    }

    /**
     * Test the property 'disabled'
     */
    @Test
    public void disabledTest() {
        // TODO: test disabled
    }

    /**
     * Test the property 'accountActivationTime'
     */
    @Test
    public void accountActivationTimeTest() {
        // TODO: test accountActivationTime
    }

    /**
     * Test the property 'accountExpirationTime'
     */
    @Test
    public void accountExpirationTimeTest() {
        // TODO: test accountExpirationTime
    }

    /**
     * Test the property 'requireSecureAuthentication'
     */
    @Test
    public void requireSecureAuthenticationTest() {
        // TODO: test requireSecureAuthentication
    }

    /**
     * Test the property 'requireSecureConnections'
     */
    @Test
    public void requireSecureConnectionsTest() {
        // TODO: test requireSecureConnections
    }

    /**
     * Test the property 'allowedAuthenticationType'
     */
    @Test
    public void allowedAuthenticationTypeTest() {
        // TODO: test allowedAuthenticationType
    }

    /**
     * Test the property 'allowedAuthenticationIPAddress'
     */
    @Test
    public void allowedAuthenticationIPAddressTest() {
        // TODO: test allowedAuthenticationIPAddress
    }

    /**
     * Test the property 'preferredOTPDeliveryMechanism'
     */
    @Test
    public void preferredOTPDeliveryMechanismTest() {
        // TODO: test preferredOTPDeliveryMechanism
    }

    /**
     * Test the property 'isProxyable'
     */
    @Test
    public void isProxyableTest() {
        // TODO: test isProxyable
    }

    /**
     * Test the property 'isProxyableByDN'
     */
    @Test
    public void isProxyableByDNTest() {
        // TODO: test isProxyableByDN
    }

    /**
     * Test the property 'isProxyableByGroup'
     */
    @Test
    public void isProxyableByGroupTest() {
        // TODO: test isProxyableByGroup
    }

    /**
     * Test the property 'isProxyableByURL'
     */
    @Test
    public void isProxyableByURLTest() {
        // TODO: test isProxyableByURL
    }

    /**
     * Test the property 'mayProxyAsDN'
     */
    @Test
    public void mayProxyAsDNTest() {
        // TODO: test mayProxyAsDN
    }

    /**
     * Test the property 'mayProxyAsGroup'
     */
    @Test
    public void mayProxyAsGroupTest() {
        // TODO: test mayProxyAsGroup
    }

    /**
     * Test the property 'mayProxyAsURL'
     */
    @Test
    public void mayProxyAsURLTest() {
        // TODO: test mayProxyAsURL
    }

}
