/*
 * PingData Config - OpenAPI 3.0
 * This is the PingData Configuration API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.EnumldapPassThroughAuthenticationHandlerSchemaUrn;
import com.konfigthis.client.model.EnumpassThroughAuthenticationHandlerServerAccessModeProp;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for LdapPassThroughAuthenticationHandlerShared
 */
public class LdapPassThroughAuthenticationHandlerSharedTest {
    private final LdapPassThroughAuthenticationHandlerShared model = new LdapPassThroughAuthenticationHandlerShared();

    /**
     * Model tests for LdapPassThroughAuthenticationHandlerShared
     */
    @Test
    public void testLdapPassThroughAuthenticationHandlerShared() {
        // TODO: test LdapPassThroughAuthenticationHandlerShared
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'schemas'
     */
    @Test
    public void schemasTest() {
        // TODO: test schemas
    }

    /**
     * Test the property 'server'
     */
    @Test
    public void serverTest() {
        // TODO: test server
    }

    /**
     * Test the property 'serverAccessMode'
     */
    @Test
    public void serverAccessModeTest() {
        // TODO: test serverAccessMode
    }

    /**
     * Test the property 'dnMap'
     */
    @Test
    public void dnMapTest() {
        // TODO: test dnMap
    }

    /**
     * Test the property 'bindDNPattern'
     */
    @Test
    public void bindDNPatternTest() {
        // TODO: test bindDNPattern
    }

    /**
     * Test the property 'searchBaseDN'
     */
    @Test
    public void searchBaseDNTest() {
        // TODO: test searchBaseDN
    }

    /**
     * Test the property 'searchFilterPattern'
     */
    @Test
    public void searchFilterPatternTest() {
        // TODO: test searchFilterPattern
    }

    /**
     * Test the property 'initialConnections'
     */
    @Test
    public void initialConnectionsTest() {
        // TODO: test initialConnections
    }

    /**
     * Test the property 'maxConnections'
     */
    @Test
    public void maxConnectionsTest() {
        // TODO: test maxConnections
    }

    /**
     * Test the property 'useLocation'
     */
    @Test
    public void useLocationTest() {
        // TODO: test useLocation
    }

    /**
     * Test the property 'maximumAllowedLocalResponseTime'
     */
    @Test
    public void maximumAllowedLocalResponseTimeTest() {
        // TODO: test maximumAllowedLocalResponseTime
    }

    /**
     * Test the property 'maximumAllowedNonlocalResponseTime'
     */
    @Test
    public void maximumAllowedNonlocalResponseTimeTest() {
        // TODO: test maximumAllowedNonlocalResponseTime
    }

    /**
     * Test the property 'usePasswordPolicyControl'
     */
    @Test
    public void usePasswordPolicyControlTest() {
        // TODO: test usePasswordPolicyControl
    }

    /**
     * Test the property 'includedLocalEntryBaseDN'
     */
    @Test
    public void includedLocalEntryBaseDNTest() {
        // TODO: test includedLocalEntryBaseDN
    }

    /**
     * Test the property 'connectionCriteria'
     */
    @Test
    public void connectionCriteriaTest() {
        // TODO: test connectionCriteria
    }

    /**
     * Test the property 'requestCriteria'
     */
    @Test
    public void requestCriteriaTest() {
        // TODO: test requestCriteria
    }

}
