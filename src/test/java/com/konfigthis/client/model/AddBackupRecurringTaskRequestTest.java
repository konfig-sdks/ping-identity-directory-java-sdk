/*
 * PingData Config - OpenAPI 3.0
 * This is the PingData Configuration API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.EnumbackupRecurringTaskSchemaUrn;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for AddBackupRecurringTaskRequest
 */
public class AddBackupRecurringTaskRequestTest {
    private final AddBackupRecurringTaskRequest model = new AddBackupRecurringTaskRequest();

    /**
     * Model tests for AddBackupRecurringTaskRequest
     */
    @Test
    public void testAddBackupRecurringTaskRequest() {
        // TODO: test AddBackupRecurringTaskRequest
    }

    /**
     * Test the property 'taskName'
     */
    @Test
    public void taskNameTest() {
        // TODO: test taskName
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'schemas'
     */
    @Test
    public void schemasTest() {
        // TODO: test schemas
    }

    /**
     * Test the property 'backupDirectory'
     */
    @Test
    public void backupDirectoryTest() {
        // TODO: test backupDirectory
    }

    /**
     * Test the property 'includedBackendID'
     */
    @Test
    public void includedBackendIDTest() {
        // TODO: test includedBackendID
    }

    /**
     * Test the property 'excludedBackendID'
     */
    @Test
    public void excludedBackendIDTest() {
        // TODO: test excludedBackendID
    }

    /**
     * Test the property 'compress'
     */
    @Test
    public void compressTest() {
        // TODO: test compress
    }

    /**
     * Test the property 'encrypt'
     */
    @Test
    public void encryptTest() {
        // TODO: test encrypt
    }

    /**
     * Test the property 'encryptionSettingsDefinitionID'
     */
    @Test
    public void encryptionSettingsDefinitionIDTest() {
        // TODO: test encryptionSettingsDefinitionID
    }

    /**
     * Test the property 'sign'
     */
    @Test
    public void signTest() {
        // TODO: test sign
    }

    /**
     * Test the property 'retainPreviousFullBackupCount'
     */
    @Test
    public void retainPreviousFullBackupCountTest() {
        // TODO: test retainPreviousFullBackupCount
    }

    /**
     * Test the property 'retainPreviousFullBackupAge'
     */
    @Test
    public void retainPreviousFullBackupAgeTest() {
        // TODO: test retainPreviousFullBackupAge
    }

    /**
     * Test the property 'maxMegabytesPerSecond'
     */
    @Test
    public void maxMegabytesPerSecondTest() {
        // TODO: test maxMegabytesPerSecond
    }

    /**
     * Test the property 'cancelOnTaskDependencyFailure'
     */
    @Test
    public void cancelOnTaskDependencyFailureTest() {
        // TODO: test cancelOnTaskDependencyFailure
    }

    /**
     * Test the property 'emailOnStart'
     */
    @Test
    public void emailOnStartTest() {
        // TODO: test emailOnStart
    }

    /**
     * Test the property 'emailOnSuccess'
     */
    @Test
    public void emailOnSuccessTest() {
        // TODO: test emailOnSuccess
    }

    /**
     * Test the property 'emailOnFailure'
     */
    @Test
    public void emailOnFailureTest() {
        // TODO: test emailOnFailure
    }

    /**
     * Test the property 'alertOnStart'
     */
    @Test
    public void alertOnStartTest() {
        // TODO: test alertOnStart
    }

    /**
     * Test the property 'alertOnSuccess'
     */
    @Test
    public void alertOnSuccessTest() {
        // TODO: test alertOnSuccess
    }

    /**
     * Test the property 'alertOnFailure'
     */
    @Test
    public void alertOnFailureTest() {
        // TODO: test alertOnFailure
    }

}
