/*
 * PingData Config - OpenAPI 3.0
 * This is the PingData Configuration API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.EnumpingOnePassThroughAuthenticationPluginSchemaUrn;
import com.konfigthis.client.model.EnumpluginIgnoredPasswordPolicyStateErrorConditionProp;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for AddPingOnePassThroughAuthenticationPluginRequest
 */
public class AddPingOnePassThroughAuthenticationPluginRequestTest {
    private final AddPingOnePassThroughAuthenticationPluginRequest model = new AddPingOnePassThroughAuthenticationPluginRequest();

    /**
     * Model tests for AddPingOnePassThroughAuthenticationPluginRequest
     */
    @Test
    public void testAddPingOnePassThroughAuthenticationPluginRequest() {
        // TODO: test AddPingOnePassThroughAuthenticationPluginRequest
    }

    /**
     * Test the property 'pluginName'
     */
    @Test
    public void pluginNameTest() {
        // TODO: test pluginName
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'schemas'
     */
    @Test
    public void schemasTest() {
        // TODO: test schemas
    }

    /**
     * Test the property 'apiURL'
     */
    @Test
    public void apiURLTest() {
        // TODO: test apiURL
    }

    /**
     * Test the property 'authURL'
     */
    @Test
    public void authURLTest() {
        // TODO: test authURL
    }

    /**
     * Test the property 'oauthClientID'
     */
    @Test
    public void oauthClientIDTest() {
        // TODO: test oauthClientID
    }

    /**
     * Test the property 'oauthClientSecret'
     */
    @Test
    public void oauthClientSecretTest() {
        // TODO: test oauthClientSecret
    }

    /**
     * Test the property 'oauthClientSecretPassphraseProvider'
     */
    @Test
    public void oauthClientSecretPassphraseProviderTest() {
        // TODO: test oauthClientSecretPassphraseProvider
    }

    /**
     * Test the property 'environmentID'
     */
    @Test
    public void environmentIDTest() {
        // TODO: test environmentID
    }

    /**
     * Test the property 'httpProxyExternalServer'
     */
    @Test
    public void httpProxyExternalServerTest() {
        // TODO: test httpProxyExternalServer
    }

    /**
     * Test the property 'includedLocalEntryBaseDN'
     */
    @Test
    public void includedLocalEntryBaseDNTest() {
        // TODO: test includedLocalEntryBaseDN
    }

    /**
     * Test the property 'connectionCriteria'
     */
    @Test
    public void connectionCriteriaTest() {
        // TODO: test connectionCriteria
    }

    /**
     * Test the property 'requestCriteria'
     */
    @Test
    public void requestCriteriaTest() {
        // TODO: test requestCriteria
    }

    /**
     * Test the property 'tryLocalBind'
     */
    @Test
    public void tryLocalBindTest() {
        // TODO: test tryLocalBind
    }

    /**
     * Test the property 'overrideLocalPassword'
     */
    @Test
    public void overrideLocalPasswordTest() {
        // TODO: test overrideLocalPassword
    }

    /**
     * Test the property 'updateLocalPassword'
     */
    @Test
    public void updateLocalPasswordTest() {
        // TODO: test updateLocalPassword
    }

    /**
     * Test the property 'updateLocalPasswordDN'
     */
    @Test
    public void updateLocalPasswordDNTest() {
        // TODO: test updateLocalPasswordDN
    }

    /**
     * Test the property 'allowLaxPassThroughAuthenticationPasswords'
     */
    @Test
    public void allowLaxPassThroughAuthenticationPasswordsTest() {
        // TODO: test allowLaxPassThroughAuthenticationPasswords
    }

    /**
     * Test the property 'ignoredPasswordPolicyStateErrorCondition'
     */
    @Test
    public void ignoredPasswordPolicyStateErrorConditionTest() {
        // TODO: test ignoredPasswordPolicyStateErrorCondition
    }

    /**
     * Test the property 'userMappingLocalAttribute'
     */
    @Test
    public void userMappingLocalAttributeTest() {
        // TODO: test userMappingLocalAttribute
    }

    /**
     * Test the property 'userMappingRemoteJSONField'
     */
    @Test
    public void userMappingRemoteJSONFieldTest() {
        // TODO: test userMappingRemoteJSONField
    }

    /**
     * Test the property 'additionalUserMappingSCIMFilter'
     */
    @Test
    public void additionalUserMappingSCIMFilterTest() {
        // TODO: test additionalUserMappingSCIMFilter
    }

    /**
     * Test the property 'enabled'
     */
    @Test
    public void enabledTest() {
        // TODO: test enabled
    }

    /**
     * Test the property 'invokeForInternalOperations'
     */
    @Test
    public void invokeForInternalOperationsTest() {
        // TODO: test invokeForInternalOperations
    }

}
