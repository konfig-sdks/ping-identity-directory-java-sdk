/*
 * PingData Config - OpenAPI 3.0
 * This is the PingData Configuration API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.EnumgaugeAlertLevelProp;
import com.konfigthis.client.model.EnumgaugeOverrideSeverityProp;
import com.konfigthis.client.model.EnumgaugeServerDegradedSeverityLevelProp;
import com.konfigthis.client.model.EnumgaugeServerUnavailableSeverityLevelProp;
import com.konfigthis.client.model.EnumnumericGaugeSchemaUrn;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for NumericGaugeShared
 */
public class NumericGaugeSharedTest {
    private final NumericGaugeShared model = new NumericGaugeShared();

    /**
     * Model tests for NumericGaugeShared
     */
    @Test
    public void testNumericGaugeShared() {
        // TODO: test NumericGaugeShared
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'schemas'
     */
    @Test
    public void schemasTest() {
        // TODO: test schemas
    }

    /**
     * Test the property 'gaugeDataSource'
     */
    @Test
    public void gaugeDataSourceTest() {
        // TODO: test gaugeDataSource
    }

    /**
     * Test the property 'criticalValue'
     */
    @Test
    public void criticalValueTest() {
        // TODO: test criticalValue
    }

    /**
     * Test the property 'criticalExitValue'
     */
    @Test
    public void criticalExitValueTest() {
        // TODO: test criticalExitValue
    }

    /**
     * Test the property 'majorValue'
     */
    @Test
    public void majorValueTest() {
        // TODO: test majorValue
    }

    /**
     * Test the property 'majorExitValue'
     */
    @Test
    public void majorExitValueTest() {
        // TODO: test majorExitValue
    }

    /**
     * Test the property 'minorValue'
     */
    @Test
    public void minorValueTest() {
        // TODO: test minorValue
    }

    /**
     * Test the property 'minorExitValue'
     */
    @Test
    public void minorExitValueTest() {
        // TODO: test minorExitValue
    }

    /**
     * Test the property 'warningValue'
     */
    @Test
    public void warningValueTest() {
        // TODO: test warningValue
    }

    /**
     * Test the property 'warningExitValue'
     */
    @Test
    public void warningExitValueTest() {
        // TODO: test warningExitValue
    }

    /**
     * Test the property 'enabled'
     */
    @Test
    public void enabledTest() {
        // TODO: test enabled
    }

    /**
     * Test the property 'overrideSeverity'
     */
    @Test
    public void overrideSeverityTest() {
        // TODO: test overrideSeverity
    }

    /**
     * Test the property 'alertLevel'
     */
    @Test
    public void alertLevelTest() {
        // TODO: test alertLevel
    }

    /**
     * Test the property 'updateInterval'
     */
    @Test
    public void updateIntervalTest() {
        // TODO: test updateInterval
    }

    /**
     * Test the property 'samplesPerUpdateInterval'
     */
    @Test
    public void samplesPerUpdateIntervalTest() {
        // TODO: test samplesPerUpdateInterval
    }

    /**
     * Test the property 'includeResource'
     */
    @Test
    public void includeResourceTest() {
        // TODO: test includeResource
    }

    /**
     * Test the property 'excludeResource'
     */
    @Test
    public void excludeResourceTest() {
        // TODO: test excludeResource
    }

    /**
     * Test the property 'serverUnavailableSeverityLevel'
     */
    @Test
    public void serverUnavailableSeverityLevelTest() {
        // TODO: test serverUnavailableSeverityLevel
    }

    /**
     * Test the property 'serverDegradedSeverityLevel'
     */
    @Test
    public void serverDegradedSeverityLevelTest() {
        // TODO: test serverDegradedSeverityLevel
    }

}
