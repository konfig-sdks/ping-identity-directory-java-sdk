/*
 * PingData Config - OpenAPI 3.0
 * This is the PingData Configuration API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.EnumcryptoManagerSchemaUrn;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for CryptoManagerResponseAllOf
 */
public class CryptoManagerResponseAllOfTest {
    private final CryptoManagerResponseAllOf model = new CryptoManagerResponseAllOf();

    /**
     * Model tests for CryptoManagerResponseAllOf
     */
    @Test
    public void testCryptoManagerResponseAllOf() {
        // TODO: test CryptoManagerResponseAllOf
    }

    /**
     * Test the property 'schemas'
     */
    @Test
    public void schemasTest() {
        // TODO: test schemas
    }

    /**
     * Test the property 'digestAlgorithm'
     */
    @Test
    public void digestAlgorithmTest() {
        // TODO: test digestAlgorithm
    }

    /**
     * Test the property 'macAlgorithm'
     */
    @Test
    public void macAlgorithmTest() {
        // TODO: test macAlgorithm
    }

    /**
     * Test the property 'macKeyLength'
     */
    @Test
    public void macKeyLengthTest() {
        // TODO: test macKeyLength
    }

    /**
     * Test the property 'signingEncryptionSettingsID'
     */
    @Test
    public void signingEncryptionSettingsIDTest() {
        // TODO: test signingEncryptionSettingsID
    }

    /**
     * Test the property 'cipherTransformation'
     */
    @Test
    public void cipherTransformationTest() {
        // TODO: test cipherTransformation
    }

    /**
     * Test the property 'cipherKeyLength'
     */
    @Test
    public void cipherKeyLengthTest() {
        // TODO: test cipherKeyLength
    }

    /**
     * Test the property 'keyWrappingTransformation'
     */
    @Test
    public void keyWrappingTransformationTest() {
        // TODO: test keyWrappingTransformation
    }

    /**
     * Test the property 'sslProtocol'
     */
    @Test
    public void sslProtocolTest() {
        // TODO: test sslProtocol
    }

    /**
     * Test the property 'sslCipherSuite'
     */
    @Test
    public void sslCipherSuiteTest() {
        // TODO: test sslCipherSuite
    }

    /**
     * Test the property 'outboundSSLProtocol'
     */
    @Test
    public void outboundSSLProtocolTest() {
        // TODO: test outboundSSLProtocol
    }

    /**
     * Test the property 'outboundSSLCipherSuite'
     */
    @Test
    public void outboundSSLCipherSuiteTest() {
        // TODO: test outboundSSLCipherSuite
    }

    /**
     * Test the property 'enableSha1CipherSuites'
     */
    @Test
    public void enableSha1CipherSuitesTest() {
        // TODO: test enableSha1CipherSuites
    }

    /**
     * Test the property 'enableRsaKeyExchangeCipherSuites'
     */
    @Test
    public void enableRsaKeyExchangeCipherSuitesTest() {
        // TODO: test enableRsaKeyExchangeCipherSuites
    }

    /**
     * Test the property 'sslCertNickname'
     */
    @Test
    public void sslCertNicknameTest() {
        // TODO: test sslCertNickname
    }

}
