/*
 * PingData Config - OpenAPI 3.0
 * This is the PingData Configuration API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.EnumhttpServletExtensionDebugLevelProp;
import com.konfigthis.client.model.EnumhttpServletExtensionDebugTypeProp;
import com.konfigthis.client.model.EnumldapMappedScimHttpServletExtensionSchemaUrn;
import com.konfigthis.client.model.MetaMeta;
import com.konfigthis.client.model.MetaUrnPingidentitySchemasConfigurationMessages20;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for LdapMappedScimHttpServletExtensionResponse
 */
public class LdapMappedScimHttpServletExtensionResponseTest {
    private final LdapMappedScimHttpServletExtensionResponse model = new LdapMappedScimHttpServletExtensionResponse();

    /**
     * Model tests for LdapMappedScimHttpServletExtensionResponse
     */
    @Test
    public void testLdapMappedScimHttpServletExtensionResponse() {
        // TODO: test LdapMappedScimHttpServletExtensionResponse
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'schemas'
     */
    @Test
    public void schemasTest() {
        // TODO: test schemas
    }

    /**
     * Test the property 'oauthTokenHandler'
     */
    @Test
    public void oauthTokenHandlerTest() {
        // TODO: test oauthTokenHandler
    }

    /**
     * Test the property 'basicAuthEnabled'
     */
    @Test
    public void basicAuthEnabledTest() {
        // TODO: test basicAuthEnabled
    }

    /**
     * Test the property 'identityMapper'
     */
    @Test
    public void identityMapperTest() {
        // TODO: test identityMapper
    }

    /**
     * Test the property 'resourceMappingFile'
     */
    @Test
    public void resourceMappingFileTest() {
        // TODO: test resourceMappingFile
    }

    /**
     * Test the property 'includeLDAPObjectclass'
     */
    @Test
    public void includeLDAPObjectclassTest() {
        // TODO: test includeLDAPObjectclass
    }

    /**
     * Test the property 'excludeLDAPObjectclass'
     */
    @Test
    public void excludeLDAPObjectclassTest() {
        // TODO: test excludeLDAPObjectclass
    }

    /**
     * Test the property 'includeLDAPBaseDN'
     */
    @Test
    public void includeLDAPBaseDNTest() {
        // TODO: test includeLDAPBaseDN
    }

    /**
     * Test the property 'excludeLDAPBaseDN'
     */
    @Test
    public void excludeLDAPBaseDNTest() {
        // TODO: test excludeLDAPBaseDN
    }

    /**
     * Test the property 'entityTagLDAPAttribute'
     */
    @Test
    public void entityTagLDAPAttributeTest() {
        // TODO: test entityTagLDAPAttribute
    }

    /**
     * Test the property 'baseContextPath'
     */
    @Test
    public void baseContextPathTest() {
        // TODO: test baseContextPath
    }

    /**
     * Test the property 'temporaryDirectory'
     */
    @Test
    public void temporaryDirectoryTest() {
        // TODO: test temporaryDirectory
    }

    /**
     * Test the property 'temporaryDirectoryPermissions'
     */
    @Test
    public void temporaryDirectoryPermissionsTest() {
        // TODO: test temporaryDirectoryPermissions
    }

    /**
     * Test the property 'maxResults'
     */
    @Test
    public void maxResultsTest() {
        // TODO: test maxResults
    }

    /**
     * Test the property 'bulkMaxOperations'
     */
    @Test
    public void bulkMaxOperationsTest() {
        // TODO: test bulkMaxOperations
    }

    /**
     * Test the property 'bulkMaxPayloadSize'
     */
    @Test
    public void bulkMaxPayloadSizeTest() {
        // TODO: test bulkMaxPayloadSize
    }

    /**
     * Test the property 'bulkMaxConcurrentRequests'
     */
    @Test
    public void bulkMaxConcurrentRequestsTest() {
        // TODO: test bulkMaxConcurrentRequests
    }

    /**
     * Test the property 'debugEnabled'
     */
    @Test
    public void debugEnabledTest() {
        // TODO: test debugEnabled
    }

    /**
     * Test the property 'debugLevel'
     */
    @Test
    public void debugLevelTest() {
        // TODO: test debugLevel
    }

    /**
     * Test the property 'debugType'
     */
    @Test
    public void debugTypeTest() {
        // TODO: test debugType
    }

    /**
     * Test the property 'includeStackTrace'
     */
    @Test
    public void includeStackTraceTest() {
        // TODO: test includeStackTrace
    }

    /**
     * Test the property 'crossOriginPolicy'
     */
    @Test
    public void crossOriginPolicyTest() {
        // TODO: test crossOriginPolicy
    }

    /**
     * Test the property 'responseHeader'
     */
    @Test
    public void responseHeaderTest() {
        // TODO: test responseHeader
    }

    /**
     * Test the property 'correlationIDResponseHeader'
     */
    @Test
    public void correlationIDResponseHeaderTest() {
        // TODO: test correlationIDResponseHeader
    }

    /**
     * Test the property 'meta'
     */
    @Test
    public void metaTest() {
        // TODO: test meta
    }

    /**
     * Test the property 'urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20'
     */
    @Test
    public void urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20Test() {
        // TODO: test urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20
    }

}
