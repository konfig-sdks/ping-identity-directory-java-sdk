/*
 * PingData Config - OpenAPI 3.0
 * This is the PingData Configuration API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.EnumfileBasedDebugLogPublisherSchemaUrn;
import com.konfigthis.client.model.EnumlogPublisherCompressionMechanismProp;
import com.konfigthis.client.model.EnumlogPublisherDefaultDebugCategoryProp;
import com.konfigthis.client.model.EnumlogPublisherDefaultDebugLevelProp;
import com.konfigthis.client.model.EnumlogPublisherLoggingErrorBehaviorProp;
import com.konfigthis.client.model.EnumlogPublisherTimestampPrecisionProp;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for AddFileBasedDebugLogPublisherRequest
 */
public class AddFileBasedDebugLogPublisherRequestTest {
    private final AddFileBasedDebugLogPublisherRequest model = new AddFileBasedDebugLogPublisherRequest();

    /**
     * Model tests for AddFileBasedDebugLogPublisherRequest
     */
    @Test
    public void testAddFileBasedDebugLogPublisherRequest() {
        // TODO: test AddFileBasedDebugLogPublisherRequest
    }

    /**
     * Test the property 'publisherName'
     */
    @Test
    public void publisherNameTest() {
        // TODO: test publisherName
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'schemas'
     */
    @Test
    public void schemasTest() {
        // TODO: test schemas
    }

    /**
     * Test the property 'logFile'
     */
    @Test
    public void logFileTest() {
        // TODO: test logFile
    }

    /**
     * Test the property 'logFilePermissions'
     */
    @Test
    public void logFilePermissionsTest() {
        // TODO: test logFilePermissions
    }

    /**
     * Test the property 'rotationPolicy'
     */
    @Test
    public void rotationPolicyTest() {
        // TODO: test rotationPolicy
    }

    /**
     * Test the property 'rotationListener'
     */
    @Test
    public void rotationListenerTest() {
        // TODO: test rotationListener
    }

    /**
     * Test the property 'retentionPolicy'
     */
    @Test
    public void retentionPolicyTest() {
        // TODO: test retentionPolicy
    }

    /**
     * Test the property 'compressionMechanism'
     */
    @Test
    public void compressionMechanismTest() {
        // TODO: test compressionMechanism
    }

    /**
     * Test the property 'signLog'
     */
    @Test
    public void signLogTest() {
        // TODO: test signLog
    }

    /**
     * Test the property 'encryptLog'
     */
    @Test
    public void encryptLogTest() {
        // TODO: test encryptLog
    }

    /**
     * Test the property 'encryptionSettingsDefinitionID'
     */
    @Test
    public void encryptionSettingsDefinitionIDTest() {
        // TODO: test encryptionSettingsDefinitionID
    }

    /**
     * Test the property 'append'
     */
    @Test
    public void appendTest() {
        // TODO: test append
    }

    /**
     * Test the property 'asynchronous'
     */
    @Test
    public void asynchronousTest() {
        // TODO: test asynchronous
    }

    /**
     * Test the property 'autoFlush'
     */
    @Test
    public void autoFlushTest() {
        // TODO: test autoFlush
    }

    /**
     * Test the property 'bufferSize'
     */
    @Test
    public void bufferSizeTest() {
        // TODO: test bufferSize
    }

    /**
     * Test the property 'queueSize'
     */
    @Test
    public void queueSizeTest() {
        // TODO: test queueSize
    }

    /**
     * Test the property 'timeInterval'
     */
    @Test
    public void timeIntervalTest() {
        // TODO: test timeInterval
    }

    /**
     * Test the property 'timestampPrecision'
     */
    @Test
    public void timestampPrecisionTest() {
        // TODO: test timestampPrecision
    }

    /**
     * Test the property 'defaultDebugLevel'
     */
    @Test
    public void defaultDebugLevelTest() {
        // TODO: test defaultDebugLevel
    }

    /**
     * Test the property 'defaultDebugCategory'
     */
    @Test
    public void defaultDebugCategoryTest() {
        // TODO: test defaultDebugCategory
    }

    /**
     * Test the property 'defaultOmitMethodEntryArguments'
     */
    @Test
    public void defaultOmitMethodEntryArgumentsTest() {
        // TODO: test defaultOmitMethodEntryArguments
    }

    /**
     * Test the property 'defaultOmitMethodReturnValue'
     */
    @Test
    public void defaultOmitMethodReturnValueTest() {
        // TODO: test defaultOmitMethodReturnValue
    }

    /**
     * Test the property 'defaultIncludeThrowableCause'
     */
    @Test
    public void defaultIncludeThrowableCauseTest() {
        // TODO: test defaultIncludeThrowableCause
    }

    /**
     * Test the property 'defaultThrowableStackFrames'
     */
    @Test
    public void defaultThrowableStackFramesTest() {
        // TODO: test defaultThrowableStackFrames
    }

    /**
     * Test the property 'enabled'
     */
    @Test
    public void enabledTest() {
        // TODO: test enabled
    }

    /**
     * Test the property 'loggingErrorBehavior'
     */
    @Test
    public void loggingErrorBehaviorTest() {
        // TODO: test loggingErrorBehavior
    }

}
