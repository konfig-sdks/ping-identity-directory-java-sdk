/*
 * PingData Config - OpenAPI 3.0
 * This is the PingData Configuration API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.EnumhighThroughputWorkQueueSchemaUrn;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for HighThroughputWorkQueueResponseAllOf
 */
public class HighThroughputWorkQueueResponseAllOfTest {
    private final HighThroughputWorkQueueResponseAllOf model = new HighThroughputWorkQueueResponseAllOf();

    /**
     * Model tests for HighThroughputWorkQueueResponseAllOf
     */
    @Test
    public void testHighThroughputWorkQueueResponseAllOf() {
        // TODO: test HighThroughputWorkQueueResponseAllOf
    }

    /**
     * Test the property 'schemas'
     */
    @Test
    public void schemasTest() {
        // TODO: test schemas
    }

    /**
     * Test the property 'numWorkerThreads'
     */
    @Test
    public void numWorkerThreadsTest() {
        // TODO: test numWorkerThreads
    }

    /**
     * Test the property 'numWriteWorkerThreads'
     */
    @Test
    public void numWriteWorkerThreadsTest() {
        // TODO: test numWriteWorkerThreads
    }

    /**
     * Test the property 'numAdministrativeSessionWorkerThreads'
     */
    @Test
    public void numAdministrativeSessionWorkerThreadsTest() {
        // TODO: test numAdministrativeSessionWorkerThreads
    }

    /**
     * Test the property 'numQueues'
     */
    @Test
    public void numQueuesTest() {
        // TODO: test numQueues
    }

    /**
     * Test the property 'numWriteQueues'
     */
    @Test
    public void numWriteQueuesTest() {
        // TODO: test numWriteQueues
    }

    /**
     * Test the property 'maxWorkQueueCapacity'
     */
    @Test
    public void maxWorkQueueCapacityTest() {
        // TODO: test maxWorkQueueCapacity
    }

    /**
     * Test the property 'maxOfferTime'
     */
    @Test
    public void maxOfferTimeTest() {
        // TODO: test maxOfferTime
    }

    /**
     * Test the property 'monitorQueueTime'
     */
    @Test
    public void monitorQueueTimeTest() {
        // TODO: test monitorQueueTime
    }

    /**
     * Test the property 'maxQueueTime'
     */
    @Test
    public void maxQueueTimeTest() {
        // TODO: test maxQueueTime
    }

    /**
     * Test the property 'expensiveOperationCheckInterval'
     */
    @Test
    public void expensiveOperationCheckIntervalTest() {
        // TODO: test expensiveOperationCheckInterval
    }

    /**
     * Test the property 'expensiveOperationMinimumConcurrentCount'
     */
    @Test
    public void expensiveOperationMinimumConcurrentCountTest() {
        // TODO: test expensiveOperationMinimumConcurrentCount
    }

    /**
     * Test the property 'expensiveOperationMinimumDumpInterval'
     */
    @Test
    public void expensiveOperationMinimumDumpIntervalTest() {
        // TODO: test expensiveOperationMinimumDumpInterval
    }

}
