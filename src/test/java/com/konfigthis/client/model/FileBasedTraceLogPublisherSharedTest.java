/*
 * PingData Config - OpenAPI 3.0
 * This is the PingData Configuration API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.EnumfileBasedTraceLogPublisherSchemaUrn;
import com.konfigthis.client.model.EnumlogPublisherAccessTokenValidatorMessageTypeProp;
import com.konfigthis.client.model.EnumlogPublisherCompressionMechanismProp;
import com.konfigthis.client.model.EnumlogPublisherConsentMessageTypeProp;
import com.konfigthis.client.model.EnumlogPublisherDebugMessageTypeProp;
import com.konfigthis.client.model.EnumlogPublisherDirectoryRESTAPIMessageTypeProp;
import com.konfigthis.client.model.EnumlogPublisherExtensionMessageTypeProp;
import com.konfigthis.client.model.EnumlogPublisherHttpMessageTypeProp;
import com.konfigthis.client.model.EnumlogPublisherIdTokenValidatorMessageTypeProp;
import com.konfigthis.client.model.EnumlogPublisherLoggingErrorBehaviorProp;
import com.konfigthis.client.model.EnumlogPublisherScimMessageTypeProp;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for FileBasedTraceLogPublisherShared
 */
public class FileBasedTraceLogPublisherSharedTest {
    private final FileBasedTraceLogPublisherShared model = new FileBasedTraceLogPublisherShared();

    /**
     * Model tests for FileBasedTraceLogPublisherShared
     */
    @Test
    public void testFileBasedTraceLogPublisherShared() {
        // TODO: test FileBasedTraceLogPublisherShared
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'schemas'
     */
    @Test
    public void schemasTest() {
        // TODO: test schemas
    }

    /**
     * Test the property 'logFile'
     */
    @Test
    public void logFileTest() {
        // TODO: test logFile
    }

    /**
     * Test the property 'logFilePermissions'
     */
    @Test
    public void logFilePermissionsTest() {
        // TODO: test logFilePermissions
    }

    /**
     * Test the property 'rotationPolicy'
     */
    @Test
    public void rotationPolicyTest() {
        // TODO: test rotationPolicy
    }

    /**
     * Test the property 'rotationListener'
     */
    @Test
    public void rotationListenerTest() {
        // TODO: test rotationListener
    }

    /**
     * Test the property 'retentionPolicy'
     */
    @Test
    public void retentionPolicyTest() {
        // TODO: test retentionPolicy
    }

    /**
     * Test the property 'compressionMechanism'
     */
    @Test
    public void compressionMechanismTest() {
        // TODO: test compressionMechanism
    }

    /**
     * Test the property 'signLog'
     */
    @Test
    public void signLogTest() {
        // TODO: test signLog
    }

    /**
     * Test the property 'encryptLog'
     */
    @Test
    public void encryptLogTest() {
        // TODO: test encryptLog
    }

    /**
     * Test the property 'encryptionSettingsDefinitionID'
     */
    @Test
    public void encryptionSettingsDefinitionIDTest() {
        // TODO: test encryptionSettingsDefinitionID
    }

    /**
     * Test the property 'append'
     */
    @Test
    public void appendTest() {
        // TODO: test append
    }

    /**
     * Test the property 'bufferSize'
     */
    @Test
    public void bufferSizeTest() {
        // TODO: test bufferSize
    }

    /**
     * Test the property 'timeInterval'
     */
    @Test
    public void timeIntervalTest() {
        // TODO: test timeInterval
    }

    /**
     * Test the property 'asynchronous'
     */
    @Test
    public void asynchronousTest() {
        // TODO: test asynchronous
    }

    /**
     * Test the property 'queueSize'
     */
    @Test
    public void queueSizeTest() {
        // TODO: test queueSize
    }

    /**
     * Test the property 'maxStringLength'
     */
    @Test
    public void maxStringLengthTest() {
        // TODO: test maxStringLength
    }

    /**
     * Test the property 'debugMessageType'
     */
    @Test
    public void debugMessageTypeTest() {
        // TODO: test debugMessageType
    }

    /**
     * Test the property 'httpMessageType'
     */
    @Test
    public void httpMessageTypeTest() {
        // TODO: test httpMessageType
    }

    /**
     * Test the property 'accessTokenValidatorMessageType'
     */
    @Test
    public void accessTokenValidatorMessageTypeTest() {
        // TODO: test accessTokenValidatorMessageType
    }

    /**
     * Test the property 'idTokenValidatorMessageType'
     */
    @Test
    public void idTokenValidatorMessageTypeTest() {
        // TODO: test idTokenValidatorMessageType
    }

    /**
     * Test the property 'scimMessageType'
     */
    @Test
    public void scimMessageTypeTest() {
        // TODO: test scimMessageType
    }

    /**
     * Test the property 'consentMessageType'
     */
    @Test
    public void consentMessageTypeTest() {
        // TODO: test consentMessageType
    }

    /**
     * Test the property 'directoryRESTAPIMessageType'
     */
    @Test
    public void directoryRESTAPIMessageTypeTest() {
        // TODO: test directoryRESTAPIMessageType
    }

    /**
     * Test the property 'extensionMessageType'
     */
    @Test
    public void extensionMessageTypeTest() {
        // TODO: test extensionMessageType
    }

    /**
     * Test the property 'includePathPattern'
     */
    @Test
    public void includePathPatternTest() {
        // TODO: test includePathPattern
    }

    /**
     * Test the property 'excludePathPattern'
     */
    @Test
    public void excludePathPatternTest() {
        // TODO: test excludePathPattern
    }

    /**
     * Test the property 'enabled'
     */
    @Test
    public void enabledTest() {
        // TODO: test enabled
    }

    /**
     * Test the property 'loggingErrorBehavior'
     */
    @Test
    public void loggingErrorBehaviorTest() {
        // TODO: test loggingErrorBehavior
    }

}
