/*
 * PingData Config - OpenAPI 3.0
 * This is the PingData Configuration API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.EnumconnectionHandlerSslClientAuthPolicyProp;
import com.konfigthis.client.model.EnumhttpConnectionHandlerSchemaUrn;
import com.konfigthis.client.model.MetaMeta;
import com.konfigthis.client.model.MetaUrnPingidentitySchemasConfigurationMessages20;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for HttpConnectionHandlerResponse
 */
public class HttpConnectionHandlerResponseTest {
    private final HttpConnectionHandlerResponse model = new HttpConnectionHandlerResponse();

    /**
     * Model tests for HttpConnectionHandlerResponse
     */
    @Test
    public void testHttpConnectionHandlerResponse() {
        // TODO: test HttpConnectionHandlerResponse
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'schemas'
     */
    @Test
    public void schemasTest() {
        // TODO: test schemas
    }

    /**
     * Test the property 'listenAddress'
     */
    @Test
    public void listenAddressTest() {
        // TODO: test listenAddress
    }

    /**
     * Test the property 'listenPort'
     */
    @Test
    public void listenPortTest() {
        // TODO: test listenPort
    }

    /**
     * Test the property 'useSSL'
     */
    @Test
    public void useSSLTest() {
        // TODO: test useSSL
    }

    /**
     * Test the property 'sslCertNickname'
     */
    @Test
    public void sslCertNicknameTest() {
        // TODO: test sslCertNickname
    }

    /**
     * Test the property 'httpServletExtension'
     */
    @Test
    public void httpServletExtensionTest() {
        // TODO: test httpServletExtension
    }

    /**
     * Test the property 'webApplicationExtension'
     */
    @Test
    public void webApplicationExtensionTest() {
        // TODO: test webApplicationExtension
    }

    /**
     * Test the property 'httpOperationLogPublisher'
     */
    @Test
    public void httpOperationLogPublisherTest() {
        // TODO: test httpOperationLogPublisher
    }

    /**
     * Test the property 'sslProtocol'
     */
    @Test
    public void sslProtocolTest() {
        // TODO: test sslProtocol
    }

    /**
     * Test the property 'sslCipherSuite'
     */
    @Test
    public void sslCipherSuiteTest() {
        // TODO: test sslCipherSuite
    }

    /**
     * Test the property 'keyManagerProvider'
     */
    @Test
    public void keyManagerProviderTest() {
        // TODO: test keyManagerProvider
    }

    /**
     * Test the property 'trustManagerProvider'
     */
    @Test
    public void trustManagerProviderTest() {
        // TODO: test trustManagerProvider
    }

    /**
     * Test the property 'numRequestHandlers'
     */
    @Test
    public void numRequestHandlersTest() {
        // TODO: test numRequestHandlers
    }

    /**
     * Test the property 'keepStats'
     */
    @Test
    public void keepStatsTest() {
        // TODO: test keepStats
    }

    /**
     * Test the property 'acceptBacklog'
     */
    @Test
    public void acceptBacklogTest() {
        // TODO: test acceptBacklog
    }

    /**
     * Test the property 'allowTCPReuseAddress'
     */
    @Test
    public void allowTCPReuseAddressTest() {
        // TODO: test allowTCPReuseAddress
    }

    /**
     * Test the property 'idleTimeLimit'
     */
    @Test
    public void idleTimeLimitTest() {
        // TODO: test idleTimeLimit
    }

    /**
     * Test the property 'lowResourcesConnectionThreshold'
     */
    @Test
    public void lowResourcesConnectionThresholdTest() {
        // TODO: test lowResourcesConnectionThreshold
    }

    /**
     * Test the property 'lowResourcesIdleTimeLimit'
     */
    @Test
    public void lowResourcesIdleTimeLimitTest() {
        // TODO: test lowResourcesIdleTimeLimit
    }

    /**
     * Test the property 'enableMultipartMIMEParameters'
     */
    @Test
    public void enableMultipartMIMEParametersTest() {
        // TODO: test enableMultipartMIMEParameters
    }

    /**
     * Test the property 'useForwardedHeaders'
     */
    @Test
    public void useForwardedHeadersTest() {
        // TODO: test useForwardedHeaders
    }

    /**
     * Test the property 'httpRequestHeaderSize'
     */
    @Test
    public void httpRequestHeaderSizeTest() {
        // TODO: test httpRequestHeaderSize
    }

    /**
     * Test the property 'responseHeader'
     */
    @Test
    public void responseHeaderTest() {
        // TODO: test responseHeader
    }

    /**
     * Test the property 'useCorrelationIDHeader'
     */
    @Test
    public void useCorrelationIDHeaderTest() {
        // TODO: test useCorrelationIDHeader
    }

    /**
     * Test the property 'correlationIDResponseHeader'
     */
    @Test
    public void correlationIDResponseHeaderTest() {
        // TODO: test correlationIDResponseHeader
    }

    /**
     * Test the property 'correlationIDRequestHeader'
     */
    @Test
    public void correlationIDRequestHeaderTest() {
        // TODO: test correlationIDRequestHeader
    }

    /**
     * Test the property 'sslClientAuthPolicy'
     */
    @Test
    public void sslClientAuthPolicyTest() {
        // TODO: test sslClientAuthPolicy
    }

    /**
     * Test the property 'enableSniHostnameChecks'
     */
    @Test
    public void enableSniHostnameChecksTest() {
        // TODO: test enableSniHostnameChecks
    }

    /**
     * Test the property 'enabled'
     */
    @Test
    public void enabledTest() {
        // TODO: test enabled
    }

    /**
     * Test the property 'meta'
     */
    @Test
    public void metaTest() {
        // TODO: test meta
    }

    /**
     * Test the property 'urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20'
     */
    @Test
    public void urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20Test() {
        // TODO: test urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20
    }

}
