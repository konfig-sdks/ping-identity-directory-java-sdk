/*
 * PingData Config - OpenAPI 3.0
 * This is the PingData Configuration API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.EnumgroovyScriptedAccessLogPublisherSchemaUrn;
import com.konfigthis.client.model.EnumlogPublisherLoggingErrorBehaviorProp;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for GroovyScriptedAccessLogPublisherShared
 */
public class GroovyScriptedAccessLogPublisherSharedTest {
    private final GroovyScriptedAccessLogPublisherShared model = new GroovyScriptedAccessLogPublisherShared();

    /**
     * Model tests for GroovyScriptedAccessLogPublisherShared
     */
    @Test
    public void testGroovyScriptedAccessLogPublisherShared() {
        // TODO: test GroovyScriptedAccessLogPublisherShared
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'schemas'
     */
    @Test
    public void schemasTest() {
        // TODO: test schemas
    }

    /**
     * Test the property 'scriptClass'
     */
    @Test
    public void scriptClassTest() {
        // TODO: test scriptClass
    }

    /**
     * Test the property 'scriptArgument'
     */
    @Test
    public void scriptArgumentTest() {
        // TODO: test scriptArgument
    }

    /**
     * Test the property 'logConnects'
     */
    @Test
    public void logConnectsTest() {
        // TODO: test logConnects
    }

    /**
     * Test the property 'logDisconnects'
     */
    @Test
    public void logDisconnectsTest() {
        // TODO: test logDisconnects
    }

    /**
     * Test the property 'logSecurityNegotiation'
     */
    @Test
    public void logSecurityNegotiationTest() {
        // TODO: test logSecurityNegotiation
    }

    /**
     * Test the property 'logClientCertificates'
     */
    @Test
    public void logClientCertificatesTest() {
        // TODO: test logClientCertificates
    }

    /**
     * Test the property 'logRequests'
     */
    @Test
    public void logRequestsTest() {
        // TODO: test logRequests
    }

    /**
     * Test the property 'logResults'
     */
    @Test
    public void logResultsTest() {
        // TODO: test logResults
    }

    /**
     * Test the property 'logSearchEntries'
     */
    @Test
    public void logSearchEntriesTest() {
        // TODO: test logSearchEntries
    }

    /**
     * Test the property 'logSearchReferences'
     */
    @Test
    public void logSearchReferencesTest() {
        // TODO: test logSearchReferences
    }

    /**
     * Test the property 'logIntermediateResponses'
     */
    @Test
    public void logIntermediateResponsesTest() {
        // TODO: test logIntermediateResponses
    }

    /**
     * Test the property 'suppressInternalOperations'
     */
    @Test
    public void suppressInternalOperationsTest() {
        // TODO: test suppressInternalOperations
    }

    /**
     * Test the property 'suppressReplicationOperations'
     */
    @Test
    public void suppressReplicationOperationsTest() {
        // TODO: test suppressReplicationOperations
    }

    /**
     * Test the property 'correlateRequestsAndResults'
     */
    @Test
    public void correlateRequestsAndResultsTest() {
        // TODO: test correlateRequestsAndResults
    }

    /**
     * Test the property 'connectionCriteria'
     */
    @Test
    public void connectionCriteriaTest() {
        // TODO: test connectionCriteria
    }

    /**
     * Test the property 'requestCriteria'
     */
    @Test
    public void requestCriteriaTest() {
        // TODO: test requestCriteria
    }

    /**
     * Test the property 'resultCriteria'
     */
    @Test
    public void resultCriteriaTest() {
        // TODO: test resultCriteria
    }

    /**
     * Test the property 'searchEntryCriteria'
     */
    @Test
    public void searchEntryCriteriaTest() {
        // TODO: test searchEntryCriteria
    }

    /**
     * Test the property 'searchReferenceCriteria'
     */
    @Test
    public void searchReferenceCriteriaTest() {
        // TODO: test searchReferenceCriteria
    }

    /**
     * Test the property 'enabled'
     */
    @Test
    public void enabledTest() {
        // TODO: test enabled
    }

    /**
     * Test the property 'loggingErrorBehavior'
     */
    @Test
    public void loggingErrorBehaviorTest() {
        // TODO: test loggingErrorBehavior
    }

}
