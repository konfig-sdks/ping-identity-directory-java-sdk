/*
 * PingData Config - OpenAPI 3.0
 * This is the PingData Configuration API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.EnumexternalServerDefunctConnectionResultCodeProp;
import com.konfigthis.client.model.EnumexternalServerLdapAuthenticationMethodProp;
import com.konfigthis.client.model.EnumexternalServerLdapConnectionSecurityProp;
import com.konfigthis.client.model.EnumexternalServerVerifyCredentialsMethodProp;
import com.konfigthis.client.model.EnumldapExternalServerSchemaUrn;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for AddLdapExternalServerRequest
 */
public class AddLdapExternalServerRequestTest {
    private final AddLdapExternalServerRequest model = new AddLdapExternalServerRequest();

    /**
     * Model tests for AddLdapExternalServerRequest
     */
    @Test
    public void testAddLdapExternalServerRequest() {
        // TODO: test AddLdapExternalServerRequest
    }

    /**
     * Test the property 'serverName'
     */
    @Test
    public void serverNameTest() {
        // TODO: test serverName
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'schemas'
     */
    @Test
    public void schemasTest() {
        // TODO: test schemas
    }

    /**
     * Test the property 'serverHostName'
     */
    @Test
    public void serverHostNameTest() {
        // TODO: test serverHostName
    }

    /**
     * Test the property 'serverPort'
     */
    @Test
    public void serverPortTest() {
        // TODO: test serverPort
    }

    /**
     * Test the property 'location'
     */
    @Test
    public void locationTest() {
        // TODO: test location
    }

    /**
     * Test the property 'bindDN'
     */
    @Test
    public void bindDNTest() {
        // TODO: test bindDN
    }

    /**
     * Test the property 'password'
     */
    @Test
    public void passwordTest() {
        // TODO: test password
    }

    /**
     * Test the property 'passphraseProvider'
     */
    @Test
    public void passphraseProviderTest() {
        // TODO: test passphraseProvider
    }

    /**
     * Test the property 'connectionSecurity'
     */
    @Test
    public void connectionSecurityTest() {
        // TODO: test connectionSecurity
    }

    /**
     * Test the property 'authenticationMethod'
     */
    @Test
    public void authenticationMethodTest() {
        // TODO: test authenticationMethod
    }

    /**
     * Test the property 'verifyCredentialsMethod'
     */
    @Test
    public void verifyCredentialsMethodTest() {
        // TODO: test verifyCredentialsMethod
    }

    /**
     * Test the property 'healthCheckConnectTimeout'
     */
    @Test
    public void healthCheckConnectTimeoutTest() {
        // TODO: test healthCheckConnectTimeout
    }

    /**
     * Test the property 'maxConnectionAge'
     */
    @Test
    public void maxConnectionAgeTest() {
        // TODO: test maxConnectionAge
    }

    /**
     * Test the property 'minExpiredConnectionDisconnectInterval'
     */
    @Test
    public void minExpiredConnectionDisconnectIntervalTest() {
        // TODO: test minExpiredConnectionDisconnectInterval
    }

    /**
     * Test the property 'connectTimeout'
     */
    @Test
    public void connectTimeoutTest() {
        // TODO: test connectTimeout
    }

    /**
     * Test the property 'maxResponseSize'
     */
    @Test
    public void maxResponseSizeTest() {
        // TODO: test maxResponseSize
    }

    /**
     * Test the property 'keyManagerProvider'
     */
    @Test
    public void keyManagerProviderTest() {
        // TODO: test keyManagerProvider
    }

    /**
     * Test the property 'trustManagerProvider'
     */
    @Test
    public void trustManagerProviderTest() {
        // TODO: test trustManagerProvider
    }

    /**
     * Test the property 'initialConnections'
     */
    @Test
    public void initialConnectionsTest() {
        // TODO: test initialConnections
    }

    /**
     * Test the property 'maxConnections'
     */
    @Test
    public void maxConnectionsTest() {
        // TODO: test maxConnections
    }

    /**
     * Test the property 'defunctConnectionResultCode'
     */
    @Test
    public void defunctConnectionResultCodeTest() {
        // TODO: test defunctConnectionResultCode
    }

    /**
     * Test the property 'abandonOnTimeout'
     */
    @Test
    public void abandonOnTimeoutTest() {
        // TODO: test abandonOnTimeout
    }

}
