/*
 * PingData Config - OpenAPI 3.0
 * This is the PingData Configuration API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.EnumgloballyUniqueAttributePluginSchemaUrn;
import com.konfigthis.client.model.EnumpluginGloballyUniqueAttributeMultipleAttributeBehaviorProp;
import com.konfigthis.client.model.EnumpluginPostCommitValidationProp;
import com.konfigthis.client.model.EnumpluginPreCommitValidationProp;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for GloballyUniqueAttributePluginResponseAllOf
 */
public class GloballyUniqueAttributePluginResponseAllOfTest {
    private final GloballyUniqueAttributePluginResponseAllOf model = new GloballyUniqueAttributePluginResponseAllOf();

    /**
     * Model tests for GloballyUniqueAttributePluginResponseAllOf
     */
    @Test
    public void testGloballyUniqueAttributePluginResponseAllOf() {
        // TODO: test GloballyUniqueAttributePluginResponseAllOf
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'schemas'
     */
    @Test
    public void schemasTest() {
        // TODO: test schemas
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'multipleAttributeBehavior'
     */
    @Test
    public void multipleAttributeBehaviorTest() {
        // TODO: test multipleAttributeBehavior
    }

    /**
     * Test the property 'subtreeView'
     */
    @Test
    public void subtreeViewTest() {
        // TODO: test subtreeView
    }

    /**
     * Test the property 'preventConflictsWithSoftDeletedEntries'
     */
    @Test
    public void preventConflictsWithSoftDeletedEntriesTest() {
        // TODO: test preventConflictsWithSoftDeletedEntries
    }

    /**
     * Test the property 'preCommitValidation'
     */
    @Test
    public void preCommitValidationTest() {
        // TODO: test preCommitValidation
    }

    /**
     * Test the property 'postCommitValidation'
     */
    @Test
    public void postCommitValidationTest() {
        // TODO: test postCommitValidation
    }

    /**
     * Test the property 'filter'
     */
    @Test
    public void filterTest() {
        // TODO: test filter
    }

    /**
     * Test the property 'enabled'
     */
    @Test
    public void enabledTest() {
        // TODO: test enabled
    }

    /**
     * Test the property 'invokeForInternalOperations'
     */
    @Test
    public void invokeForInternalOperationsTest() {
        // TODO: test invokeForInternalOperations
    }

}
