/*
 * PingData Config - OpenAPI 3.0
 * This is the PingData Configuration API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.EnumldapMappingScimResourceTypeSchemaUrn;
import com.konfigthis.client.model.EnumscimResourceTypeSchemaCheckingOptionProp;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for LdapMappingScimResourceTypeShared
 */
public class LdapMappingScimResourceTypeSharedTest {
    private final LdapMappingScimResourceTypeShared model = new LdapMappingScimResourceTypeShared();

    /**
     * Model tests for LdapMappingScimResourceTypeShared
     */
    @Test
    public void testLdapMappingScimResourceTypeShared() {
        // TODO: test LdapMappingScimResourceTypeShared
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'schemas'
     */
    @Test
    public void schemasTest() {
        // TODO: test schemas
    }

    /**
     * Test the property 'coreSchema'
     */
    @Test
    public void coreSchemaTest() {
        // TODO: test coreSchema
    }

    /**
     * Test the property 'requiredSchemaExtension'
     */
    @Test
    public void requiredSchemaExtensionTest() {
        // TODO: test requiredSchemaExtension
    }

    /**
     * Test the property 'optionalSchemaExtension'
     */
    @Test
    public void optionalSchemaExtensionTest() {
        // TODO: test optionalSchemaExtension
    }

    /**
     * Test the property 'enabled'
     */
    @Test
    public void enabledTest() {
        // TODO: test enabled
    }

    /**
     * Test the property 'endpoint'
     */
    @Test
    public void endpointTest() {
        // TODO: test endpoint
    }

    /**
     * Test the property 'lookthroughLimit'
     */
    @Test
    public void lookthroughLimitTest() {
        // TODO: test lookthroughLimit
    }

    /**
     * Test the property 'schemaCheckingOption'
     */
    @Test
    public void schemaCheckingOptionTest() {
        // TODO: test schemaCheckingOption
    }

    /**
     * Test the property 'structuralLDAPObjectclass'
     */
    @Test
    public void structuralLDAPObjectclassTest() {
        // TODO: test structuralLDAPObjectclass
    }

    /**
     * Test the property 'auxiliaryLDAPObjectclass'
     */
    @Test
    public void auxiliaryLDAPObjectclassTest() {
        // TODO: test auxiliaryLDAPObjectclass
    }

    /**
     * Test the property 'includeBaseDN'
     */
    @Test
    public void includeBaseDNTest() {
        // TODO: test includeBaseDN
    }

    /**
     * Test the property 'includeFilter'
     */
    @Test
    public void includeFilterTest() {
        // TODO: test includeFilter
    }

    /**
     * Test the property 'includeOperationalAttribute'
     */
    @Test
    public void includeOperationalAttributeTest() {
        // TODO: test includeOperationalAttribute
    }

    /**
     * Test the property 'createDNPattern'
     */
    @Test
    public void createDNPatternTest() {
        // TODO: test createDNPattern
    }

}
