/*
 * PingData Config - OpenAPI 3.0
 * This is the PingData Configuration API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.EnumpluginRootSchemaUrn;
import com.konfigthis.client.model.MetaMeta;
import com.konfigthis.client.model.MetaUrnPingidentitySchemasConfigurationMessages20;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for PluginRootResponse
 */
public class PluginRootResponseTest {
    private final PluginRootResponse model = new PluginRootResponse();

    /**
     * Model tests for PluginRootResponse
     */
    @Test
    public void testPluginRootResponse() {
        // TODO: test PluginRootResponse
    }

    /**
     * Test the property 'schemas'
     */
    @Test
    public void schemasTest() {
        // TODO: test schemas
    }

    /**
     * Test the property 'pluginOrderStartup'
     */
    @Test
    public void pluginOrderStartupTest() {
        // TODO: test pluginOrderStartup
    }

    /**
     * Test the property 'pluginOrderShutdown'
     */
    @Test
    public void pluginOrderShutdownTest() {
        // TODO: test pluginOrderShutdown
    }

    /**
     * Test the property 'pluginOrderPostConnect'
     */
    @Test
    public void pluginOrderPostConnectTest() {
        // TODO: test pluginOrderPostConnect
    }

    /**
     * Test the property 'pluginOrderPostDisconnect'
     */
    @Test
    public void pluginOrderPostDisconnectTest() {
        // TODO: test pluginOrderPostDisconnect
    }

    /**
     * Test the property 'pluginOrderLDIFImport'
     */
    @Test
    public void pluginOrderLDIFImportTest() {
        // TODO: test pluginOrderLDIFImport
    }

    /**
     * Test the property 'pluginOrderLDIFExport'
     */
    @Test
    public void pluginOrderLDIFExportTest() {
        // TODO: test pluginOrderLDIFExport
    }

    /**
     * Test the property 'pluginOrderPreParseAbandon'
     */
    @Test
    public void pluginOrderPreParseAbandonTest() {
        // TODO: test pluginOrderPreParseAbandon
    }

    /**
     * Test the property 'pluginOrderPreParseAdd'
     */
    @Test
    public void pluginOrderPreParseAddTest() {
        // TODO: test pluginOrderPreParseAdd
    }

    /**
     * Test the property 'pluginOrderPreParseBind'
     */
    @Test
    public void pluginOrderPreParseBindTest() {
        // TODO: test pluginOrderPreParseBind
    }

    /**
     * Test the property 'pluginOrderPreParseCompare'
     */
    @Test
    public void pluginOrderPreParseCompareTest() {
        // TODO: test pluginOrderPreParseCompare
    }

    /**
     * Test the property 'pluginOrderPreParseDelete'
     */
    @Test
    public void pluginOrderPreParseDeleteTest() {
        // TODO: test pluginOrderPreParseDelete
    }

    /**
     * Test the property 'pluginOrderPreParseExtended'
     */
    @Test
    public void pluginOrderPreParseExtendedTest() {
        // TODO: test pluginOrderPreParseExtended
    }

    /**
     * Test the property 'pluginOrderPreParseModify'
     */
    @Test
    public void pluginOrderPreParseModifyTest() {
        // TODO: test pluginOrderPreParseModify
    }

    /**
     * Test the property 'pluginOrderPreParseModifyDN'
     */
    @Test
    public void pluginOrderPreParseModifyDNTest() {
        // TODO: test pluginOrderPreParseModifyDN
    }

    /**
     * Test the property 'pluginOrderPreParseSearch'
     */
    @Test
    public void pluginOrderPreParseSearchTest() {
        // TODO: test pluginOrderPreParseSearch
    }

    /**
     * Test the property 'pluginOrderPreParseUnbind'
     */
    @Test
    public void pluginOrderPreParseUnbindTest() {
        // TODO: test pluginOrderPreParseUnbind
    }

    /**
     * Test the property 'pluginOrderPreOperationAdd'
     */
    @Test
    public void pluginOrderPreOperationAddTest() {
        // TODO: test pluginOrderPreOperationAdd
    }

    /**
     * Test the property 'pluginOrderPreOperationBind'
     */
    @Test
    public void pluginOrderPreOperationBindTest() {
        // TODO: test pluginOrderPreOperationBind
    }

    /**
     * Test the property 'pluginOrderPreOperationCompare'
     */
    @Test
    public void pluginOrderPreOperationCompareTest() {
        // TODO: test pluginOrderPreOperationCompare
    }

    /**
     * Test the property 'pluginOrderPreOperationDelete'
     */
    @Test
    public void pluginOrderPreOperationDeleteTest() {
        // TODO: test pluginOrderPreOperationDelete
    }

    /**
     * Test the property 'pluginOrderPreOperationExtended'
     */
    @Test
    public void pluginOrderPreOperationExtendedTest() {
        // TODO: test pluginOrderPreOperationExtended
    }

    /**
     * Test the property 'pluginOrderPreOperationModify'
     */
    @Test
    public void pluginOrderPreOperationModifyTest() {
        // TODO: test pluginOrderPreOperationModify
    }

    /**
     * Test the property 'pluginOrderPreOperationModifyDN'
     */
    @Test
    public void pluginOrderPreOperationModifyDNTest() {
        // TODO: test pluginOrderPreOperationModifyDN
    }

    /**
     * Test the property 'pluginOrderPreOperationSearch'
     */
    @Test
    public void pluginOrderPreOperationSearchTest() {
        // TODO: test pluginOrderPreOperationSearch
    }

    /**
     * Test the property 'pluginOrderPostOperationAbandon'
     */
    @Test
    public void pluginOrderPostOperationAbandonTest() {
        // TODO: test pluginOrderPostOperationAbandon
    }

    /**
     * Test the property 'pluginOrderPostOperationAdd'
     */
    @Test
    public void pluginOrderPostOperationAddTest() {
        // TODO: test pluginOrderPostOperationAdd
    }

    /**
     * Test the property 'pluginOrderPostOperationBind'
     */
    @Test
    public void pluginOrderPostOperationBindTest() {
        // TODO: test pluginOrderPostOperationBind
    }

    /**
     * Test the property 'pluginOrderPostOperationCompare'
     */
    @Test
    public void pluginOrderPostOperationCompareTest() {
        // TODO: test pluginOrderPostOperationCompare
    }

    /**
     * Test the property 'pluginOrderPostOperationDelete'
     */
    @Test
    public void pluginOrderPostOperationDeleteTest() {
        // TODO: test pluginOrderPostOperationDelete
    }

    /**
     * Test the property 'pluginOrderPostOperationExtended'
     */
    @Test
    public void pluginOrderPostOperationExtendedTest() {
        // TODO: test pluginOrderPostOperationExtended
    }

    /**
     * Test the property 'pluginOrderPostOperationModify'
     */
    @Test
    public void pluginOrderPostOperationModifyTest() {
        // TODO: test pluginOrderPostOperationModify
    }

    /**
     * Test the property 'pluginOrderPostOperationModifyDN'
     */
    @Test
    public void pluginOrderPostOperationModifyDNTest() {
        // TODO: test pluginOrderPostOperationModifyDN
    }

    /**
     * Test the property 'pluginOrderPostOperationSearch'
     */
    @Test
    public void pluginOrderPostOperationSearchTest() {
        // TODO: test pluginOrderPostOperationSearch
    }

    /**
     * Test the property 'pluginOrderPostOperationUnbind'
     */
    @Test
    public void pluginOrderPostOperationUnbindTest() {
        // TODO: test pluginOrderPostOperationUnbind
    }

    /**
     * Test the property 'pluginOrderPostResponseAdd'
     */
    @Test
    public void pluginOrderPostResponseAddTest() {
        // TODO: test pluginOrderPostResponseAdd
    }

    /**
     * Test the property 'pluginOrderPostResponseBind'
     */
    @Test
    public void pluginOrderPostResponseBindTest() {
        // TODO: test pluginOrderPostResponseBind
    }

    /**
     * Test the property 'pluginOrderPostResponseCompare'
     */
    @Test
    public void pluginOrderPostResponseCompareTest() {
        // TODO: test pluginOrderPostResponseCompare
    }

    /**
     * Test the property 'pluginOrderPostResponseDelete'
     */
    @Test
    public void pluginOrderPostResponseDeleteTest() {
        // TODO: test pluginOrderPostResponseDelete
    }

    /**
     * Test the property 'pluginOrderPostResponseExtended'
     */
    @Test
    public void pluginOrderPostResponseExtendedTest() {
        // TODO: test pluginOrderPostResponseExtended
    }

    /**
     * Test the property 'pluginOrderPostResponseModify'
     */
    @Test
    public void pluginOrderPostResponseModifyTest() {
        // TODO: test pluginOrderPostResponseModify
    }

    /**
     * Test the property 'pluginOrderPostResponseModifyDN'
     */
    @Test
    public void pluginOrderPostResponseModifyDNTest() {
        // TODO: test pluginOrderPostResponseModifyDN
    }

    /**
     * Test the property 'pluginOrderPostSynchronizationAdd'
     */
    @Test
    public void pluginOrderPostSynchronizationAddTest() {
        // TODO: test pluginOrderPostSynchronizationAdd
    }

    /**
     * Test the property 'pluginOrderPostSynchronizationDelete'
     */
    @Test
    public void pluginOrderPostSynchronizationDeleteTest() {
        // TODO: test pluginOrderPostSynchronizationDelete
    }

    /**
     * Test the property 'pluginOrderPostSynchronizationModify'
     */
    @Test
    public void pluginOrderPostSynchronizationModifyTest() {
        // TODO: test pluginOrderPostSynchronizationModify
    }

    /**
     * Test the property 'pluginOrderPostSynchronizationModifyDN'
     */
    @Test
    public void pluginOrderPostSynchronizationModifyDNTest() {
        // TODO: test pluginOrderPostSynchronizationModifyDN
    }

    /**
     * Test the property 'pluginOrderPostResponseSearch'
     */
    @Test
    public void pluginOrderPostResponseSearchTest() {
        // TODO: test pluginOrderPostResponseSearch
    }

    /**
     * Test the property 'pluginOrderSearchResultEntry'
     */
    @Test
    public void pluginOrderSearchResultEntryTest() {
        // TODO: test pluginOrderSearchResultEntry
    }

    /**
     * Test the property 'pluginOrderSearchResultReference'
     */
    @Test
    public void pluginOrderSearchResultReferenceTest() {
        // TODO: test pluginOrderSearchResultReference
    }

    /**
     * Test the property 'pluginOrderSubordinateModifyDN'
     */
    @Test
    public void pluginOrderSubordinateModifyDNTest() {
        // TODO: test pluginOrderSubordinateModifyDN
    }

    /**
     * Test the property 'pluginOrderIntermediateResponse'
     */
    @Test
    public void pluginOrderIntermediateResponseTest() {
        // TODO: test pluginOrderIntermediateResponse
    }

    /**
     * Test the property 'meta'
     */
    @Test
    public void metaTest() {
        // TODO: test meta
    }

    /**
     * Test the property 'urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20'
     */
    @Test
    public void urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20Test() {
        // TODO: test urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20
    }

}
