/*
 * PingData Config - OpenAPI 3.0
 * This is the PingData Configuration API
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.EnumjsonFieldConstraintsCacheModeProp;
import com.konfigthis.client.model.EnumjsonFieldConstraintsIsArrayProp;
import com.konfigthis.client.model.EnumjsonFieldConstraintsSchemaUrn;
import com.konfigthis.client.model.EnumjsonFieldConstraintsValueTypeProp;
import com.konfigthis.client.model.MetaMeta;
import com.konfigthis.client.model.MetaUrnPingidentitySchemasConfigurationMessages20;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for JsonFieldConstraintsResponse
 */
public class JsonFieldConstraintsResponseTest {
    private final JsonFieldConstraintsResponse model = new JsonFieldConstraintsResponse();

    /**
     * Model tests for JsonFieldConstraintsResponse
     */
    @Test
    public void testJsonFieldConstraintsResponse() {
        // TODO: test JsonFieldConstraintsResponse
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'schemas'
     */
    @Test
    public void schemasTest() {
        // TODO: test schemas
    }

    /**
     * Test the property 'jsonField'
     */
    @Test
    public void jsonFieldTest() {
        // TODO: test jsonField
    }

    /**
     * Test the property 'valueType'
     */
    @Test
    public void valueTypeTest() {
        // TODO: test valueType
    }

    /**
     * Test the property 'isRequired'
     */
    @Test
    public void isRequiredTest() {
        // TODO: test isRequired
    }

    /**
     * Test the property 'isArray'
     */
    @Test
    public void isArrayTest() {
        // TODO: test isArray
    }

    /**
     * Test the property 'allowNullValue'
     */
    @Test
    public void allowNullValueTest() {
        // TODO: test allowNullValue
    }

    /**
     * Test the property 'allowEmptyObject'
     */
    @Test
    public void allowEmptyObjectTest() {
        // TODO: test allowEmptyObject
    }

    /**
     * Test the property 'indexValues'
     */
    @Test
    public void indexValuesTest() {
        // TODO: test indexValues
    }

    /**
     * Test the property 'indexEntryLimit'
     */
    @Test
    public void indexEntryLimitTest() {
        // TODO: test indexEntryLimit
    }

    /**
     * Test the property 'primeIndex'
     */
    @Test
    public void primeIndexTest() {
        // TODO: test primeIndex
    }

    /**
     * Test the property 'cacheMode'
     */
    @Test
    public void cacheModeTest() {
        // TODO: test cacheMode
    }

    /**
     * Test the property 'tokenizeValues'
     */
    @Test
    public void tokenizeValuesTest() {
        // TODO: test tokenizeValues
    }

    /**
     * Test the property 'allowedValue'
     */
    @Test
    public void allowedValueTest() {
        // TODO: test allowedValue
    }

    /**
     * Test the property 'allowedValueRegularExpression'
     */
    @Test
    public void allowedValueRegularExpressionTest() {
        // TODO: test allowedValueRegularExpression
    }

    /**
     * Test the property 'minimumNumericValue'
     */
    @Test
    public void minimumNumericValueTest() {
        // TODO: test minimumNumericValue
    }

    /**
     * Test the property 'maximumNumericValue'
     */
    @Test
    public void maximumNumericValueTest() {
        // TODO: test maximumNumericValue
    }

    /**
     * Test the property 'minimumValueLength'
     */
    @Test
    public void minimumValueLengthTest() {
        // TODO: test minimumValueLength
    }

    /**
     * Test the property 'maximumValueLength'
     */
    @Test
    public void maximumValueLengthTest() {
        // TODO: test maximumValueLength
    }

    /**
     * Test the property 'minimumValueCount'
     */
    @Test
    public void minimumValueCountTest() {
        // TODO: test minimumValueCount
    }

    /**
     * Test the property 'maximumValueCount'
     */
    @Test
    public void maximumValueCountTest() {
        // TODO: test maximumValueCount
    }

    /**
     * Test the property 'meta'
     */
    @Test
    public void metaTest() {
        // TODO: test meta
    }

    /**
     * Test the property 'urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20'
     */
    @Test
    public void urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20Test() {
        // TODO: test urnColonPingidentityColonSchemasColonConfigurationColonMessagesColon20
    }

}
